name: HumanEval_131_digits
language: js
results:
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct = product * n % 10;\n\t\tn = Math.floor(n / 10);\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp_2_7b47o.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_2_7b47o.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpofxk6u46.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpofxk6u46.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmsf0u0ya.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpmsf0u0ya.js:9:2)\n    at digits\
    \ (/tmp/tmpmsf0u0ya.js:10:22)\n    at digits (/tmp/tmpmsf0u0ya.js:10:22)\n   \
    \ at digits (/tmp/tmpmsf0u0ya.js:10:22)\n    at digits (/tmp/tmpmsf0u0ya.js:10:22)\n\
    \    at digits (/tmp/tmpmsf0u0ya.js:10:22)\n    at digits (/tmp/tmpmsf0u0ya.js:10:22)\n\
    \    at digits (/tmp/tmpmsf0u0ya.js:10:22)\n    at digits (/tmp/tmpmsf0u0ya.js:10:22)\n\
    \    at digits (/tmp/tmpmsf0u0ya.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\treturn 0;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7li66kwn.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7li66kwn.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n+1)/2+1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu6gqe1ym.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu6gqe1ym.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp37226h85.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp37226h85.js:9:2)\n    at digits\
    \ (/tmp/tmp37226h85.js:10:22)\n    at digits (/tmp/tmp37226h85.js:10:22)\n   \
    \ at digits (/tmp/tmp37226h85.js:10:22)\n    at digits (/tmp/tmp37226h85.js:10:22)\n\
    \    at digits (/tmp/tmp37226h85.js:10:22)\n    at digits (/tmp/tmp37226h85.js:10:22)\n\
    \    at digits (/tmp/tmp37226h85.js:10:22)\n    at digits (/tmp/tmp37226h85.js:10:22)\n\
    \    at digits (/tmp/tmp37226h85.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8n6x9rk1.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp8n6x9rk1.js:9:2)\n    at digits\
    \ (/tmp/tmp8n6x9rk1.js:10:22)\n    at digits (/tmp/tmp8n6x9rk1.js:10:22)\n   \
    \ at digits (/tmp/tmp8n6x9rk1.js:10:22)\n    at digits (/tmp/tmp8n6x9rk1.js:10:22)\n\
    \    at digits (/tmp/tmp8n6x9rk1.js:10:22)\n    at digits (/tmp/tmp8n6x9rk1.js:10:22)\n\
    \    at digits (/tmp/tmp8n6x9rk1.js:10:22)\n    at digits (/tmp/tmp8n6x9rk1.js:10:22)\n\
    \    at digits (/tmp/tmp8n6x9rk1.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n-1)*n+digits(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpr2ir_48w.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr2ir_48w.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var sum = 0;\n  while (n){\n \
    \   sum += n % 2 ? 1 : 0; \n    n = Math.floor(n / 10);\n  }\n  return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpatxjkl_z.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpatxjkl_z.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\telse return digits(n/2)*digits(n/2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<0) return 0;\n  if(n%2==0)\
    \ return n*(n+1)/2;\n  else return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpgspma6le.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgspma6le.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return digits(n/2);\n\tif(n%2==1) return n*digits(n/2);\n\
    \treturn 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpwgyzoxfb.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwgyzoxfb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp3fisnzou.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3fisnzou.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000010) return n*18;\n\tif(n<10000000000000000100)\
    \ return n*19;\n\tif(n<100000000000000001000) return n*20;\n\tif(n<1000000000000000010000)\
    \ return n*21;\n\tif(n<10000000000000000100000) return n*22;\n\tif(n<100000000000000001000000)\
    \ return n*23;\n\tif(n<1000000000000000010000000) return n*24;\n\tif(n<10000000000000000100000000)\
    \ return n*25;\n\tif(n<100000000000000001000000000) return n*26;\n\tif(n<1000000000000000010000000000)\
    \ return n*27;\n\tif(n<10000000000000000100000000000) return n*28;\n\tif(n<100000000000000001000000000000)\
    \ return n*29;\n\tif(n<1000000000000000010000000000000) return n*30;\n\tif(n<10000000000000000100000000000000)\
    \ return n*31;\n\tif(n<100000000000000001000000000000000) return n*32;\n\tif(n<1000000000000000010000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000100000000000000000) return n*34;\n\tif(n<100000000000000001000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000010000000000000000000) return n*36;\n\t\
    if(n<10000000000000000100000000000000000000) return n*37;\n\tif(n<100000000000000001000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000010000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000100000000000000000000000) return n*40;\n\tif(n<100000000000000001000000000000000000000000\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph5i7co0z.js:50\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<0) return 0;\n  if(n%2==0)\
    \ return n*digits(n/2);\n  else return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxbivh5ee.js:9\n  if(n<0) return 0;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpxbivh5ee.js:9:3)\n    at digits\
    \ (/tmp/tmpxbivh5ee.js:10:23)\n    at digits (/tmp/tmpxbivh5ee.js:10:23)\n   \
    \ at digits (/tmp/tmpxbivh5ee.js:10:23)\n    at digits (/tmp/tmpxbivh5ee.js:10:23)\n\
    \    at digits (/tmp/tmpxbivh5ee.js:10:23)\n    at digits (/tmp/tmpxbivh5ee.js:10:23)\n\
    \    at digits (/tmp/tmpxbivh5ee.js:10:23)\n    at digits (/tmp/tmpxbivh5ee.js:10:23)\n\
    \    at digits (/tmp/tmpxbivh5ee.js:10:23)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n>0){\n\
    \    product = product*(n%10+1);\n    n = Math.floor(n/10);\n  }\n  return product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm8heqg4g.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm8heqg4g.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpml0mwbwl.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpml0mwbwl.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\treturn 0;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp_17exrco.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_17exrco.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkxrc2dhs.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpkxrc2dhs.js:9:2)\n    at digits\
    \ (/tmp/tmpkxrc2dhs.js:10:22)\n    at digits (/tmp/tmpkxrc2dhs.js:10:22)\n   \
    \ at digits (/tmp/tmpkxrc2dhs.js:10:22)\n    at digits (/tmp/tmpkxrc2dhs.js:10:22)\n\
    \    at digits (/tmp/tmpkxrc2dhs.js:10:22)\n    at digits (/tmp/tmpkxrc2dhs.js:10:22)\n\
    \    at digits (/tmp/tmpkxrc2dhs.js:10:22)\n    at digits (/tmp/tmpkxrc2dhs.js:10:22)\n\
    \    at digits (/tmp/tmpkxrc2dhs.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*10+n%2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmwtc7mnk.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpmwtc7mnk.js:9:2)\n    at digits\
    \ (/tmp/tmpmwtc7mnk.js:10:22)\n    at digits (/tmp/tmpmwtc7mnk.js:10:22)\n   \
    \ at digits (/tmp/tmpmwtc7mnk.js:10:22)\n    at digits (/tmp/tmpmwtc7mnk.js:10:22)\n\
    \    at digits (/tmp/tmpmwtc7mnk.js:10:22)\n    at digits (/tmp/tmpmwtc7mnk.js:10:22)\n\
    \    at digits (/tmp/tmpmwtc7mnk.js:10:22)\n    at digits (/tmp/tmpmwtc7mnk.js:10:22)\n\
    \    at digits (/tmp/tmpmwtc7mnk.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct = product * n % 10;\n\t\tn = Math.floor(n / 10);\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpsjcaye1t.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsjcaye1t.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n-1);\n\telse return n*(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmlnecy8e.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmlnecy8e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\treturn 0;\n\t}\n\
    \tif(n==0){\n\t\treturn 1;\n\t}\n\tif(n==1){\n\t\treturn 1;\n\t}\n\tif(n%2==0){\n\
    \t\treturn n*digits(n-1);\n\t}\n\treturn digits(n-1)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould\
    \ loosely deep-equal\n\n5\n    at test (/tmp/tmp2z43utkt.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2z43utkt.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tvar result=1;\n\twhile(n>0){\n\t\tif(n%2==1) result*=2;\n\t\tn/=2;\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpyptkvxyk.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyptkvxyk.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa4g0w2pw.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpa4g0w2pw.js:9:2)\n    at digits\
    \ (/tmp/tmpa4g0w2pw.js:10:22)\n    at digits (/tmp/tmpa4g0w2pw.js:10:22)\n   \
    \ at digits (/tmp/tmpa4g0w2pw.js:10:22)\n    at digits (/tmp/tmpa4g0w2pw.js:10:22)\n\
    \    at digits (/tmp/tmpa4g0w2pw.js:10:22)\n    at digits (/tmp/tmpa4g0w2pw.js:10:22)\n\
    \    at digits (/tmp/tmpa4g0w2pw.js:10:22)\n    at digits (/tmp/tmpa4g0w2pw.js:10:22)\n\
    \    at digits (/tmp/tmpa4g0w2pw.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph5g8dap8.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmph5g8dap8.js:9:2)\n    at digits\
    \ (/tmp/tmph5g8dap8.js:10:22)\n    at digits (/tmp/tmph5g8dap8.js:10:22)\n   \
    \ at digits (/tmp/tmph5g8dap8.js:10:22)\n    at digits (/tmp/tmph5g8dap8.js:10:22)\n\
    \    at digits (/tmp/tmph5g8dap8.js:10:22)\n    at digits (/tmp/tmph5g8dap8.js:10:22)\n\
    \    at digits (/tmp/tmph5g8dap8.js:10:22)\n    at digits (/tmp/tmph5g8dap8.js:10:22)\n\
    \    at digits (/tmp/tmph5g8dap8.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpaxigv2qy.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpaxigv2qy.js:9:2)\n    at digits\
    \ (/tmp/tmpaxigv2qy.js:10:22)\n    at digits (/tmp/tmpaxigv2qy.js:10:22)\n   \
    \ at digits (/tmp/tmpaxigv2qy.js:10:22)\n    at digits (/tmp/tmpaxigv2qy.js:10:22)\n\
    \    at digits (/tmp/tmpaxigv2qy.js:10:22)\n    at digits (/tmp/tmpaxigv2qy.js:10:22)\n\
    \    at digits (/tmp/tmpaxigv2qy.js:10:22)\n    at digits (/tmp/tmpaxigv2qy.js:10:22)\n\
    \    at digits (/tmp/tmpaxigv2qy.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnvnyinz0.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpnvnyinz0.js:9:2)\n    at digits\
    \ (/tmp/tmpnvnyinz0.js:10:22)\n    at digits (/tmp/tmpnvnyinz0.js:10:22)\n   \
    \ at digits (/tmp/tmpnvnyinz0.js:10:22)\n    at digits (/tmp/tmpnvnyinz0.js:10:22)\n\
    \    at digits (/tmp/tmpnvnyinz0.js:10:22)\n    at digits (/tmp/tmpnvnyinz0.js:10:22)\n\
    \    at digits (/tmp/tmpnvnyinz0.js:10:22)\n    at digits (/tmp/tmpnvnyinz0.js:10:22)\n\
    \    at digits (/tmp/tmpnvnyinz0.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpal73jevu.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpal73jevu.js:9:2)\n    at digits\
    \ (/tmp/tmpal73jevu.js:10:22)\n    at digits (/tmp/tmpal73jevu.js:10:22)\n   \
    \ at digits (/tmp/tmpal73jevu.js:10:22)\n    at digits (/tmp/tmpal73jevu.js:10:22)\n\
    \    at digits (/tmp/tmpal73jevu.js:10:22)\n    at digits (/tmp/tmpal73jevu.js:10:22)\n\
    \    at digits (/tmp/tmpal73jevu.js:10:22)\n    at digits (/tmp/tmpal73jevu.js:10:22)\n\
    \    at digits (/tmp/tmpal73jevu.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn633jr00.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpn633jr00.js:9:2)\n    at digits\
    \ (/tmp/tmpn633jr00.js:10:22)\n    at digits (/tmp/tmpn633jr00.js:10:22)\n   \
    \ at digits (/tmp/tmpn633jr00.js:10:22)\n    at digits (/tmp/tmpn633jr00.js:10:22)\n\
    \    at digits (/tmp/tmpn633jr00.js:10:22)\n    at digits (/tmp/tmpn633jr00.js:10:22)\n\
    \    at digits (/tmp/tmpn633jr00.js:10:22)\n    at digits (/tmp/tmpn633jr00.js:10:22)\n\
    \    at digits (/tmp/tmpn633jr00.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp69gzu2bc.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp69gzu2bc.js:9:2)\n    at digits\
    \ (/tmp/tmp69gzu2bc.js:10:22)\n    at digits (/tmp/tmp69gzu2bc.js:10:22)\n   \
    \ at digits (/tmp/tmp69gzu2bc.js:10:22)\n    at digits (/tmp/tmp69gzu2bc.js:10:22)\n\
    \    at digits (/tmp/tmp69gzu2bc.js:10:22)\n    at digits (/tmp/tmp69gzu2bc.js:10:22)\n\
    \    at digits (/tmp/tmp69gzu2bc.js:10:22)\n    at digits (/tmp/tmp69gzu2bc.js:10:22)\n\
    \    at digits (/tmp/tmp69gzu2bc.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tvar result=1;\n\twhile(n>0){\n\t\tif(n%2==1) result*=2;\n\t\tn/=2;\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpry5ru33e.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpry5ru33e.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var result = 0;\n  \n  while(n){\n\
    \    if(n % 2 == 1){\n      result *= 2;\n    }\n    n /= 2;\n  }\n  \n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpsh_lc1_y.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsh_lc1_y.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n){\n\t\t\
    sum += n % 2;\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmppujzdngf.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppujzdngf.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<0) return 0;\n  if(n==0)\
    \ return 1;\n  if(n%2==0) return 0;\n  if(n%2==1) return 1;\n  return digits(n/2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmnuz1b6w.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmnuz1b6w.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpac29hrnu.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpac29hrnu.js:9:2)\n    at digits\
    \ (/tmp/tmpac29hrnu.js:10:22)\n    at digits (/tmp/tmpac29hrnu.js:10:22)\n   \
    \ at digits (/tmp/tmpac29hrnu.js:10:22)\n    at digits (/tmp/tmpac29hrnu.js:10:22)\n\
    \    at digits (/tmp/tmpac29hrnu.js:10:22)\n    at digits (/tmp/tmpac29hrnu.js:10:22)\n\
    \    at digits (/tmp/tmpac29hrnu.js:10:22)\n    at digits (/tmp/tmpac29hrnu.js:10:22)\n\
    \    at digits (/tmp/tmpac29hrnu.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbm8jl5lm.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbm8jl5lm.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n-1);\n\tif(n%2==1) return n*(n-1);\n\treturn n*(n-1);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpxfvoymv2.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxfvoymv2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var result = 0;\n  while(n){\n\
    \    if(n % 2 == 1){\n      result *= 2;\n    }\n    n = Math.floor(n / 2);\n\
    \  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmplymmxhoe.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplymmxhoe.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\treturn 0;\n\t}\n\
    \tif(n%2==0){\n\t\treturn 1;\n\t}\n\treturn n*digits(n-1);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpwh3__q4x.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwh3__q4x.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n>0){\n\
    \    product = product*(n%10);\n    n = Math.floor(n/10);\n  }\n  return product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpp4nd0l62.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp4nd0l62.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar digits = 1;\n\twhile(n){\n\
    \t\tdigits *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn digits;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp5au6r5e4.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5au6r5e4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n+1)*(2n+1)/6;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdqly75bk.js:11\n\telse return n*(n+1)*(2n+1)/6;\n\t           \
    \            ^\n\nTypeError: Cannot mix BigInt and other types, use explicit conversions\n\
    \    at digits (/tmp/tmpdqly75bk.js:11:25)\n    at test (/tmp/tmpdqly75bk.js:19:20)\n\
    \    at Object.<anonymous> (/tmp/tmpdqly75bk.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return n*digits(n/2);\n\treturn n*digits(n/2)+1;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n47.45795676583433\n\
    \nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpsn3plcne.js:20:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpsn3plcne.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 47.45795676583433,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfdkx9wwe.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpfdkx9wwe.js:9:2)\n    at digits\
    \ (/tmp/tmpfdkx9wwe.js:10:22)\n    at digits (/tmp/tmpfdkx9wwe.js:10:22)\n   \
    \ at digits (/tmp/tmpfdkx9wwe.js:10:22)\n    at digits (/tmp/tmpfdkx9wwe.js:10:22)\n\
    \    at digits (/tmp/tmpfdkx9wwe.js:10:22)\n    at digits (/tmp/tmpfdkx9wwe.js:10:22)\n\
    \    at digits (/tmp/tmpfdkx9wwe.js:10:22)\n    at digits (/tmp/tmpfdkx9wwe.js:10:22)\n\
    \    at digits (/tmp/tmpfdkx9wwe.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<10) return 1;\n  if(n<100)\
    \ return n*2;\n  if(n<1000) return n*3;\n  if(n<10000) return n*4;\n  if(n<100000)\
    \ return n*5;\n  if(n<1000000) return n*6;\n  if(n<10000000) return n*7;\n  if(n<100000000)\
    \ return n*8;\n  if(n<1000000000) return n*9;\n  if(n<10000000000) return n*10;\n\
    \  if(n<100000000000) return n*11;\n  if(n<1000000000000) return n*12;\n  if(n<10000000000000)\
    \ return n*13;\n  if(n<100000000000000) return n*14;\n  if(n<10000000000000000)\
    \ return n*15;\n  if(n<100000000000000000) return n*16;\n  if(n<1000000000000000000)\
    \ return n*17;\n  if(n<10000000000000000000) return n*18;\n  if(n<100000000000000000000)\
    \ return n*19;\n  if(n<1000000000000000000000) return n*20;\n  if(n<10000000000000000000000)\
    \ return n*21;\n  if(n<1000000000000000000000000) return n*22;\n  if(n<10000000000000000000000000)\
    \ return n*23;\n  if(n<100000000000000000000000000) return n*24;\n  if(n<1000000000000000000000000000)\
    \ return n*25;\n  if(n<10000000000000000000000000000) return n*26;\n  if(n<100000000000000000000000000000)\
    \ return n*27;\n  if(n<1000000000000000000000000000000) return n*28;\n  if(n<100000000000000000000000000000000)\
    \ return n*29;\n  if(n<1000000000000000000000000000000000) return n*30;\n  if(n<10000000000000000000000000000000000)\
    \ return n*31;\n  if(n<100000000000000000000000000000000000) return n*32;\n  if(n<1000000000000000000000000000000000000)\
    \ return n*33;\n  if(n<10000000000000000000000000000000000000) return n*34;\n\
    \  if(n<100000000000000000000000000000000000000) return n*35;\n  if(n<10000000000000000000000000000000000000000)\
    \ return n*36;\n  if(n<100000000000000000000000000000000000000000) return n*37;\n\
    \  if(n<1000000000000000000000000000000000000000000) return n*38;\n  if(n<100000000000000000000000000000000000000000)\
    \ return n*39;\n  if(n<10000000000000000000000000000000000000000000) return n*40;\n\
    \  if(n<100000000000000000000000000000000000000000000) return n*41;\n  if(n<1000000000000000000000000000000000000000000000)\
    \ return n*42;\n  if(n<10000000000000000000000000000000000000000000000) return\
    \ n*\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjn5m4xqx.js:52\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<100000000000000000) return n*18;\n\tif(n<1000000000000000000)\
    \ return n*19;\n\treturn 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpi9h4q9e8.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9h4q9e8.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpe_50d2iw.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe_50d2iw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\tif(n<10000000000000000000)\
    \ return n*19;\n\tif(n<100000000000000000000) return n*20;\n\tif(n<1000000000000000000000)\
    \ return n*21;\n\tif(n<10000000000000000000000) return n*22;\n\tif(n<100000000000000000000000)\
    \ return n*23;\n\tif(n<1000000000000000000000000) return n*24;\n\tif(n<10000000000000000000000000)\
    \ return n*25;\n\tif(n<100000000000000000000000000) return n*26;\n\tif(n<1000000000000000000000000000)\
    \ return n*27;\n\tif(n<10000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000) return n*32;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000000000000000000000) return n*34;\n\tif(n<100000000000000000000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000000000000000000000000) return n*36;\n\t\
    if(n<10000000000000000000000000000000000000) return n*37;\n\tif(n<100000000000000000000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000000000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*40;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*41;\n\tif(n<1000000000000000000000000000000000000000000) return n*42;\n\
    \tif(n<10000000000000000000000000000000000000000000) return n*43;\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_8fbs4je.js:67\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n==1) return 1;\n\tif(n==2) return 2;\n\tif(n<9) return n*(n-1)/2;\n\
    \tif(n<99) return n*(n-1)*(2*n-3)/6;\n\tif(n<999) return n*(n-1)*(2*n-3)*5/4;\n\
    \tif(n<9999) return n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4;\n\tif(n<99999) return\
    \ n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4;\n\tif(n<999999)\
    \ return n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4;\n\
    \tif(n<9999999) return n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4;\n\
    \tif(n<999999999) return n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4;\n\
    \tif(n<99999999999) return n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/4+n*(n-1)*(2*n-3)*5/\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpul1cqqi6.js:22\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000010) return n*18;\n\tif(n<10000000000000000100)\
    \ return n*19;\n\tif(n<100000000000000001000) return n*20;\n\tif(n<1000000000000000010000)\
    \ return n*21;\n\tif(n<10000000000000000100000) return n*22;\n\tif(n<100000000000000001000000)\
    \ return n*23;\n\tif(n<1000000000000000010000000) return n*24;\n\tif(n<10000000000000000100000000)\
    \ return n*25;\n\tif(n<100000000000000001000000000) return n*26;\n\tif(n<1000000000000000010000000000)\
    \ return n*27;\n\tif(n<10000000000000000100000000000) return n*28;\n\tif(n<100000000000000001000000000000)\
    \ return n*29;\n\tif(n<1000000000000000010000000000000) return n*30;\n\tif(n<10000000000000000100000000000000)\
    \ return n*31;\n\tif(n<100000000000000001000000000000000) return n*32;\n\tif(n<1000000000000000010000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000100000000000000000) return n*34;\n\tif(n<100000000000000001000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000010000000000000000000) return n*36;\n\t\
    if(n<10000000000000000100000000000000000000) return n*37;\n\tif(n<100000000000000001000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000010000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000100000000000000000000000) return n*40;\n\tif(n<100000000000000001000000000000000000000000\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbidybatl.js:50\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n-1)*n+digits(n-1);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4rgly0b7.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4rgly0b7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\tn *= -1;\n\t}\n\t\
    let sum = 0;\n\tfor(let i=0;i<n;i++){\n\t\tif(i%2==1){\n\t\t\tsum += i;\n\t\t\
    }\n\t}\n\treturn sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprims_00u.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprims_00u.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\telse return digits(n-1)*n+digits(n-2);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmphfjzew_9.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphfjzew_9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmbqiqxlt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmbqiqxlt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct = product * n % 10;\n\t\tn = Math.floor(n/10);\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmppxi_aa2v.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppxi_aa2v.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpwz58muca.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwz58muca.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\tif(n<10000000000000000000)\
    \ return n*19;\n\tif(n<100000000000000000000) return n*20;\n\tif(n<1000000000000000000000)\
    \ return n*21;\n\tif(n<10000000000000000000000) return n*22;\n\tif(n<100000000000000000000000)\
    \ return n*23;\n\tif(n<1000000000000000000000000) return n*24;\n\tif(n<10000000000000000000000000)\
    \ return n*25;\n\tif(n<100000000000000000000000000) return n*26;\n\tif(n<1000000000000000000000000000)\
    \ return n*27;\n\tif(n<10000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000) return n*32;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*33;\n\tif(n<1000000000000000000000000000000000) return n*34;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*35;\n\tif(n<100000000000000000000000000000000000) return n*36;\n\t\
    if(n<1000000000000000000000000000000000000) return n*37;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*38;\n\tif(n<100000000000000000000000000000000000000) return n*39;\n\
    \tif(n<1000000000000000000000000000000000000000) return n*40;\n\tif(n<10000000000000000000000000000000000000000)\
    \ return n*41;\n\tif(n<100000000000000000000000000000000000000000) return n*42;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*43;\n\tif\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp95gend66.js:53\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprnks_5ho.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprnks_5ho.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile (n >\
    \ 0){\n\t\tif (n % 2 == 1){\n\t\t\tproduct *= 2;\n\t\t}\n\t\tn /= 2;\n\t}\n\t\
    return product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmppyvlul0s.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppyvlul0s.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var digits = 1;\n    while (n>0){\n\
    \        digits++;\n        n=n%10;\n    }\n    return digits;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n > 0){\n\
    \t\tsum += n % 2;\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpt5avntu2.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt5avntu2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\treturn 0;\n\t}\n\
    \tif(n==0){\n\t\treturn 1;\n\t}\n\tif(n==1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\
    \t\treturn 2;\n\t}\n\tif(n==3){\n\t\treturn 3;\n\t}\n\tif(n==4){\n\t\treturn 4;\n\
    \t}\n\tif(n==5){\n\t\treturn 5;\n\t}\n\tif(n==6){\n\t\treturn 6;\n\t}\n\tif(n==7){\n\
    \t\treturn 7;\n\t}\n\tif(n==8){\n\t\treturn 8;\n\t}\n\tif(n==9){\n\t\treturn 9;\n\
    \t}\n\tif(n==10){\n\t\treturn 10;\n\t}\n\tif(n==11){\n\t\treturn 11;\n\t}\n\t\
    if(n==12){\n\t\treturn 12;\n\t}\n\tif(n==13){\n\t\treturn 13;\n\t}\n\tif(n==14){\n\
    \t\treturn 14;\n\t}\n\tif(n==15){\n\t\treturn 15;\n\t}\n\tif(n==16){\n\t\treturn\
    \ 16;\n\t}\n\tif(n==17){\n\t\treturn 17;\n\t}\n\tif(n==18){\n\t\treturn 18;\n\t\
    }\n\tif(n==19){\n\t\treturn 19;\n\t}\n\tif(n==20){\n\t\treturn 20;\n\t}\n\tif(n==21){\n\
    \t\treturn 21;\n\t}\n\tif(n==22){\n\t\treturn 22;\n\t}\n\tif(n==23){\n\t\treturn\
    \ 23;\n\t}\n\tif(n==24){\n\t\treturn 24;\n\t}\n\tif(n==25){\n\t\treturn 25;\n\t\
    }\n\tif(n==26){\n\t\treturn 26;\n\t}\n\tif(n==27){\n\t\treturn 27;\n\t}\n\tif(n==28){\n\
    \t\treturn 28;\n\t}\n\tif(n==29){\n\t\treturn 29;\n\t}\n\tif(n==30){\n\t\treturn\
    \ 30;\n\t}\n\tif(n==31){\n\t\treturn 31;\n\t}\n\tif(n==32){\n\t\treturn 32;\n\t\
    }\n\tif(n==33){\n\t\treturn 33;\n\t}\n\tif(n==34){\n\t\treturn 34;\n\t}\n\tif(n==35){\n\
    \t\treturn 35;\n\t}\n\tif(n==36){\n\t\treturn 36;\n\t}\n\tif(n==37){\n\t\treturn\
    \ 37;\n\t}\n\tif(n==38){\n\t\treturn 38;\n\t}\n\tif(n==39){\n\t\treturn 39;\n\t\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfcmzq1ut.js:146\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n+1)*(3*n+1)/6;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n80\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmps1tmdrpl.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps1tmdrpl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 80,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp34iwtvog.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp34iwtvog.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\treturn 0;\n\t}\n\
    \tif(n==0){\n\t\treturn 1;\n\t}\n\tif(n%2==0){\n\t\treturn 0;\n\t}\n\treturn digits(n/2)*10+(n%2);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n5\n    at test (/tmp/tmpfs9u0553.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfs9u0553.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n-1)*n+digits(n-2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp0mgofsqk.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0mgofsqk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpq_yi5zsi.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq_yi5zsi.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl4bdq86h.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpl4bdq86h.js:9:2)\n    at digits\
    \ (/tmp/tmpl4bdq86h.js:10:22)\n    at digits (/tmp/tmpl4bdq86h.js:10:22)\n   \
    \ at digits (/tmp/tmpl4bdq86h.js:10:22)\n    at digits (/tmp/tmpl4bdq86h.js:10:22)\n\
    \    at digits (/tmp/tmpl4bdq86h.js:10:22)\n    at digits (/tmp/tmpl4bdq86h.js:10:22)\n\
    \    at digits (/tmp/tmpl4bdq86h.js:10:22)\n    at digits (/tmp/tmpl4bdq86h.js:10:22)\n\
    \    at digits (/tmp/tmpl4bdq86h.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var result = 0;\n  while(n){\n\
    \    result *= 10;\n    result += n % 10;\n    n /= 10;\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n5\n    at test (/tmp/tmp_v7_0iap.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_v7_0iap.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return digits(n/2);\n\treturn digits(n/2)*(-1);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpngml8873.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpngml8873.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpewbokij1.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpewbokij1.js:9:2)\n    at digits\
    \ (/tmp/tmpewbokij1.js:10:22)\n    at digits (/tmp/tmpewbokij1.js:10:22)\n   \
    \ at digits (/tmp/tmpewbokij1.js:10:22)\n    at digits (/tmp/tmpewbokij1.js:10:22)\n\
    \    at digits (/tmp/tmpewbokij1.js:10:22)\n    at digits (/tmp/tmpewbokij1.js:10:22)\n\
    \    at digits (/tmp/tmpewbokij1.js:10:22)\n    at digits (/tmp/tmpewbokij1.js:10:22)\n\
    \    at digits (/tmp/tmpewbokij1.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var sum = 0;\n  while(n){\n  \
    \  sum += n % 2;\n    n = Math.floor(n / 2);\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2cve5m_q.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2cve5m_q.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu_boafbh.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu_boafbh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<100000000000000000) return n*18;\n\tif(n<1000000000000000000)\
    \ return n*19;\n\treturn 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprxuvmbau.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprxuvmbau.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1rqrkrcz.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp1rqrkrcz.js:9:2)\n    at digits\
    \ (/tmp/tmp1rqrkrcz.js:10:22)\n    at digits (/tmp/tmp1rqrkrcz.js:10:22)\n   \
    \ at digits (/tmp/tmp1rqrkrcz.js:10:22)\n    at digits (/tmp/tmp1rqrkrcz.js:10:22)\n\
    \    at digits (/tmp/tmp1rqrkrcz.js:10:22)\n    at digits (/tmp/tmp1rqrkrcz.js:10:22)\n\
    \    at digits (/tmp/tmp1rqrkrcz.js:10:22)\n    at digits (/tmp/tmp1rqrkrcz.js:10:22)\n\
    \    at digits (/tmp/tmp1rqrkrcz.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\treturn 0;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp623miexg.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp623miexg.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n){\n\t\t\
    sum += n % 2 ? 1 : 0; \n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp9vsvp9c7.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9vsvp9c7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n){\n\t\t\
    sum += n % 2 == 0 ? 0 : 1;\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpcl0qmk98.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcl0qmk98.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var result = 0;\n  while(n){\n\
    \    result *= 10;\n    result += n % 10;\n    n /= 10;\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n5\n    at test (/tmp/tmp401t5mtp.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp401t5mtp.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmphh1uaozt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphh1uaozt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\telse return digits(n-1)*n+digits(n-1);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmphf7m7qca.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphf7m7qca.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp0ju766bj.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ju766bj.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tvar sum=0;\n\twhile(n != 0){\n\t\tsum+=n%10;\n\t\tn=Math.floor(n/10);\n\
    \t}\n\treturn sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4utuvcjm.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4utuvcjm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpze5025ff.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpze5025ff.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\treturn 0;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpi_wj224g.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi_wj224g.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n-1);\n\telse return n*(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpajtsnnkb.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpajtsnnkb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)*(2*n+1)/6;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36.666666666666664\n\
    \nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpchtcoo33.js:19:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpchtcoo33.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36.666666666666664,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpjy84ivlm.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjy84ivlm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n>0){\n\
    \t\tif(n%2==1){\n\t\t\tproduct*=2;\n\t\t}\n\t\tn/=2;\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmjcodjht.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmjcodjht.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7o5h4qcf.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7o5h4qcf.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\treturn 0;\n\t}\n\
    \tif(n%2==0){\n\t\treturn 1;\n\t}\n\tif(n%2==1){\n\t\treturn n*digits(n-1);\n\t\
    }\n\treturn n*digits(n-1);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp0y25p27k.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0y25p27k.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n/2)*10+(n%2)*digits(n/2);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<100000000000000000) return n*18;\n\tif(n<1000000000000000000)\
    \ return n*19;\n\treturn 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp6v6hev73.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6v6hev73.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n/2)*digits(n-1);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpf7ks_i7g.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf7ks_i7g.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp6athhy38.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6athhy38.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar digits = 1;\n\twhile(n>0){\n\
    \t\tif(n%2==1){\n\t\t\tdigits++;\n\t\t}\n\t\tn = Math.floor(n/2);\n\t}\n\treturn\
    \ digits;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuushifhi.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuushifhi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvs_kp1qk.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvs_kp1qk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return n*digits(n/2)*3;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4vd2p81u.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp4vd2p81u.js:9:2)\n    at digits\
    \ (/tmp/tmp4vd2p81u.js:10:22)\n    at digits (/tmp/tmp4vd2p81u.js:10:22)\n   \
    \ at digits (/tmp/tmp4vd2p81u.js:10:22)\n    at digits (/tmp/tmp4vd2p81u.js:10:22)\n\
    \    at digits (/tmp/tmp4vd2p81u.js:10:22)\n    at digits (/tmp/tmp4vd2p81u.js:10:22)\n\
    \    at digits (/tmp/tmp4vd2p81u.js:10:22)\n    at digits (/tmp/tmp4vd2p81u.js:10:22)\n\
    \    at digits (/tmp/tmp4vd2p81u.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\tn *= -1;\n\t}\n\t\
    \n\tlet result = 0;\n\t\n\tfor(let i=0;i<n;i++){\n\t\tif(i%2==1){\n\t\t\tresult\
    \ *= 10;\n\t\t\tresult += i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpfbb31yoa.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfbb31yoa.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdn8e54k0.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpdn8e54k0.js:9:2)\n    at digits\
    \ (/tmp/tmpdn8e54k0.js:10:22)\n    at digits (/tmp/tmpdn8e54k0.js:10:22)\n   \
    \ at digits (/tmp/tmpdn8e54k0.js:10:22)\n    at digits (/tmp/tmpdn8e54k0.js:10:22)\n\
    \    at digits (/tmp/tmpdn8e54k0.js:10:22)\n    at digits (/tmp/tmpdn8e54k0.js:10:22)\n\
    \    at digits (/tmp/tmpdn8e54k0.js:10:22)\n    at digits (/tmp/tmpdn8e54k0.js:10:22)\n\
    \    at digits (/tmp/tmpdn8e54k0.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var sum = 0;\n  while(n){\n  \
    \  sum += n % 2 ? 1 : 0\n    n = Math.floor(n / 2)\n  }\n  return sum\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpayyzkqmv.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpayyzkqmv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvipfl1rn.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpvipfl1rn.js:9:2)\n    at digits\
    \ (/tmp/tmpvipfl1rn.js:10:22)\n    at digits (/tmp/tmpvipfl1rn.js:10:22)\n   \
    \ at digits (/tmp/tmpvipfl1rn.js:10:22)\n    at digits (/tmp/tmpvipfl1rn.js:10:22)\n\
    \    at digits (/tmp/tmpvipfl1rn.js:10:22)\n    at digits (/tmp/tmpvipfl1rn.js:10:22)\n\
    \    at digits (/tmp/tmpvipfl1rn.js:10:22)\n    at digits (/tmp/tmpvipfl1rn.js:10:22)\n\
    \    at digits (/tmp/tmpvipfl1rn.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\tif(n<10000000000000000000)\
    \ return n*19;\n\tif(n<100000000000000000000) return n*20;\n\tif(n<1000000000000000000000)\
    \ return n*21;\n\tif(n<10000000000000000000000) return n*22;\n\tif(n<100000000000000000000000)\
    \ return n*23;\n\tif(n<1000000000000000000000000) return n*24;\n\tif(n<10000000000000000000000000)\
    \ return n*25;\n\tif(n<100000000000000000000000000) return n*26;\n\tif(n<1000000000000000000000000000)\
    \ return n*27;\n\tif(n<10000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000) return n*32;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000000000000000000000) return n*34;\n\tif(n<100000000000000000000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000000000000000000000000) return n*36;\n\t\
    if(n<10000000000000000000000000000000000000) return n*37;\n\tif(n<100000000000000000000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000000000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000000000000000000000000000) return n*40;\n\tif(n<100000000000000000000000000000000000000000)\
    \ return n*41;\n\tif(n<1000000000000000000000000000000000000000000) return n*42;\n\
    \tif(n<10000000000000000000000000000000000000000000) return n*43;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9g3t3siz.js:66\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpefke03oz.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpefke03oz.js:9:2)\n    at digits\
    \ (/tmp/tmpefke03oz.js:10:22)\n    at digits (/tmp/tmpefke03oz.js:10:22)\n   \
    \ at digits (/tmp/tmpefke03oz.js:10:22)\n    at digits (/tmp/tmpefke03oz.js:10:22)\n\
    \    at digits (/tmp/tmpefke03oz.js:10:22)\n    at digits (/tmp/tmpefke03oz.js:10:22)\n\
    \    at digits (/tmp/tmpefke03oz.js:10:22)\n    at digits (/tmp/tmpefke03oz.js:10:22)\n\
    \    at digits (/tmp/tmpefke03oz.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n-1);\n\telse return n*(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpp2lv_v8j.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp2lv_v8j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp98sekmiw.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp98sekmiw.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)*(2*n+1)/6;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36.666666666666664\n\
    \nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp1bkna5uo.js:19:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp1bkna5uo.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36.666666666666664,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmphjkuek90.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphjkuek90.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu4fldxbd.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu4fldxbd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n==1) return 1;\n\tvar sum=0;\n\twhile(n>0){\n\t\tsum+=n%10;\n\
    \t\tn/=10;\n\t}\n\treturn sum;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5.5555555555555545\n\
    \nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpwxp29egh.js:25:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpwxp29egh.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5.5555555555555545,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpl5v8k8j2.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl5v8k8j2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp1ohovcop.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ohovcop.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpe2bplodm.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe2bplodm.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)*(2*n+1)/6;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36.666666666666664\n\
    \nshould loosely deep-equal\n\n5\n    at test (/tmp/tmp40qtjzj0.js:19:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp40qtjzj0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36.666666666666664,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\treturn 0;\n\t}\n\
    \tif(n==0){\n\t\treturn 1;\n\t}\n\tif(n%2==0){\n\t\treturn n*digits(n/2);\n\t\
    }\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpxfue2d2y.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxfue2d2y.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n/2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpd9jvjevz.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd9jvjevz.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpblmd4up_.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpblmd4up_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcf7kv6dj.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpcf7kv6dj.js:9:2)\n    at digits\
    \ (/tmp/tmpcf7kv6dj.js:10:22)\n    at digits (/tmp/tmpcf7kv6dj.js:10:22)\n   \
    \ at digits (/tmp/tmpcf7kv6dj.js:10:22)\n    at digits (/tmp/tmpcf7kv6dj.js:10:22)\n\
    \    at digits (/tmp/tmpcf7kv6dj.js:10:22)\n    at digits (/tmp/tmpcf7kv6dj.js:10:22)\n\
    \    at digits (/tmp/tmpcf7kv6dj.js:10:22)\n    at digits (/tmp/tmpcf7kv6dj.js:10:22)\n\
    \    at digits (/tmp/tmpcf7kv6dj.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n>0){\n\
    \t\tif(n%2==1){\n\t\t\tproduct*=2;\n\t\t}\n\t\tn/=2;\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbqro8wly.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbqro8wly.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpveuy6kmh.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpveuy6kmh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpo8_lctb3.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo8_lctb3.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n-1);\n\telse return n*(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpzr8d7ygt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzr8d7ygt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpui0ta8o4.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpui0ta8o4.js:9:2)\n    at digits\
    \ (/tmp/tmpui0ta8o4.js:10:22)\n    at digits (/tmp/tmpui0ta8o4.js:10:22)\n   \
    \ at digits (/tmp/tmpui0ta8o4.js:10:22)\n    at digits (/tmp/tmpui0ta8o4.js:10:22)\n\
    \    at digits (/tmp/tmpui0ta8o4.js:10:22)\n    at digits (/tmp/tmpui0ta8o4.js:10:22)\n\
    \    at digits (/tmp/tmpui0ta8o4.js:10:22)\n    at digits (/tmp/tmpui0ta8o4.js:10:22)\n\
    \    at digits (/tmp/tmpui0ta8o4.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmsxxj2sl.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmsxxj2sl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n){\n\t\t\
    sum += n % 2 ? 1 : 0; \n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp1rtj76vn.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1rtj76vn.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<0) return 0;\n  if(n%2==0)\
    \ return n*digits(n/2);\n  else return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplomwurzm.js:9\n  if(n<0) return 0;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmplomwurzm.js:9:3)\n    at digits\
    \ (/tmp/tmplomwurzm.js:10:23)\n    at digits (/tmp/tmplomwurzm.js:10:23)\n   \
    \ at digits (/tmp/tmplomwurzm.js:10:23)\n    at digits (/tmp/tmplomwurzm.js:10:23)\n\
    \    at digits (/tmp/tmplomwurzm.js:10:23)\n    at digits (/tmp/tmplomwurzm.js:10:23)\n\
    \    at digits (/tmp/tmplomwurzm.js:10:23)\n    at digits (/tmp/tmplomwurzm.js:10:23)\n\
    \    at digits (/tmp/tmplomwurzm.js:10:23)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var digits = n.toString().split('')\n\
    \  digits.reverse()\n  digits = digits.map(function(digit){\n    return parseInt(digit,\
    \ 10)\n  })\n  var product = 1\n  digits.forEach(function(digit){\n    product\
    \ *= digit\n  })\n  return product\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpal2lgsbn.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpal2lgsbn.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct = product * n % 10;\n\t\tn = Math.floor(n/10);\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu496m8fa.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu496m8fa.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n+1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpaef1ibeb.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaef1ibeb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpb8hd8tzu.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb8hd8tzu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpleiktaxf.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpleiktaxf.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9oy_8m4u.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp9oy_8m4u.js:9:2)\n    at digits\
    \ (/tmp/tmp9oy_8m4u.js:10:22)\n    at digits (/tmp/tmp9oy_8m4u.js:10:22)\n   \
    \ at digits (/tmp/tmp9oy_8m4u.js:10:22)\n    at digits (/tmp/tmp9oy_8m4u.js:10:22)\n\
    \    at digits (/tmp/tmp9oy_8m4u.js:10:22)\n    at digits (/tmp/tmp9oy_8m4u.js:10:22)\n\
    \    at digits (/tmp/tmp9oy_8m4u.js:10:22)\n    at digits (/tmp/tmp9oy_8m4u.js:10:22)\n\
    \    at digits (/tmp/tmp9oy_8m4u.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var sum = 0;\n  while(n){\n  \
    \  sum += n % 2 ? 1 : 0; \n    n = Math.floor(n / 10);\n  }\n  return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp07l8wvlb.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp07l8wvlb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n){\n\t\t\
    sum += n % 2;\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp28wsw9b8.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp28wsw9b8.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000010) return n*18;\n\tif(n<10000000000000000100)\
    \ return n*19;\n\tif(n<100000000000000001000) return n*20;\n\tif(n<1000000000000000010000)\
    \ return n*21;\n\tif(n<10000000000000000100000) return n*22;\n\tif(n<100000000000000001000000)\
    \ return n*23;\n\tif(n<1000000000000000010000000) return n*24;\n\tif(n<10000000000000000100000000)\
    \ return n*25;\n\tif(n<100000000000000001000000000) return n*26;\n\tif(n<1000000000000000010000000000)\
    \ return n*27;\n\tif(n<10000000000000000100000000000) return n*28;\n\tif(n<100000000000000001000000000000)\
    \ return n*29;\n\tif(n<1000000000000000010000000000000) return n*30;\n\tif(n<10000000000000000100000000000000)\
    \ return n*31;\n\tif(n<100000000000000001000000000000000) return n*32;\n\tif(n<1000000000000000010000000000000000)\
    \ return n*33;\n\tif(n<10000000000000000100000000000000000) return n*34;\n\tif(n<100000000000000001000000000000000000)\
    \ return n*35;\n\tif(n<1000000000000000010000000000000000000) return n*36;\n\t\
    if(n<10000000000000000100000000000000000000) return n*37;\n\tif(n<100000000000000001000000000000000000000)\
    \ return n*38;\n\tif(n<1000000000000000010000000000000000000000) return n*39;\n\
    \tif(n<10000000000000000100000000000000000000000) return n*40;\n\tif(n<100000000000000001000000000000000000000000\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2yawp_7i.js:50\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmf5_gdbh.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmf5_gdbh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptivywcm7.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmptivywcm7.js:9:2)\n    at digits\
    \ (/tmp/tmptivywcm7.js:10:22)\n    at digits (/tmp/tmptivywcm7.js:10:22)\n   \
    \ at digits (/tmp/tmptivywcm7.js:10:22)\n    at digits (/tmp/tmptivywcm7.js:10:22)\n\
    \    at digits (/tmp/tmptivywcm7.js:10:22)\n    at digits (/tmp/tmptivywcm7.js:10:22)\n\
    \    at digits (/tmp/tmptivywcm7.js:10:22)\n    at digits (/tmp/tmptivywcm7.js:10:22)\n\
    \    at digits (/tmp/tmptivywcm7.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpi4v0iktd.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpi4v0iktd.js:9:2)\n    at digits\
    \ (/tmp/tmpi4v0iktd.js:10:22)\n    at digits (/tmp/tmpi4v0iktd.js:10:22)\n   \
    \ at digits (/tmp/tmpi4v0iktd.js:10:22)\n    at digits (/tmp/tmpi4v0iktd.js:10:22)\n\
    \    at digits (/tmp/tmpi4v0iktd.js:10:22)\n    at digits (/tmp/tmpi4v0iktd.js:10:22)\n\
    \    at digits (/tmp/tmpi4v0iktd.js:10:22)\n    at digits (/tmp/tmpi4v0iktd.js:10:22)\n\
    \    at digits (/tmp/tmpi4v0iktd.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\tfor(var i\
    \ = n; i > 0; i--){\n\t\tproduct = product * i % 10;\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpycnjza4x.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpycnjza4x.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7tzeygpj.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp7tzeygpj.js:9:2)\n    at digits\
    \ (/tmp/tmp7tzeygpj.js:10:22)\n    at digits (/tmp/tmp7tzeygpj.js:10:22)\n   \
    \ at digits (/tmp/tmp7tzeygpj.js:10:22)\n    at digits (/tmp/tmp7tzeygpj.js:10:22)\n\
    \    at digits (/tmp/tmp7tzeygpj.js:10:22)\n    at digits (/tmp/tmp7tzeygpj.js:10:22)\n\
    \    at digits (/tmp/tmp7tzeygpj.js:10:22)\n    at digits (/tmp/tmp7tzeygpj.js:10:22)\n\
    \    at digits (/tmp/tmp7tzeygpj.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplngknl3k.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmplngknl3k.js:9:2)\n    at digits\
    \ (/tmp/tmplngknl3k.js:10:22)\n    at digits (/tmp/tmplngknl3k.js:10:22)\n   \
    \ at digits (/tmp/tmplngknl3k.js:10:22)\n    at digits (/tmp/tmplngknl3k.js:10:22)\n\
    \    at digits (/tmp/tmplngknl3k.js:10:22)\n    at digits (/tmp/tmplngknl3k.js:10:22)\n\
    \    at digits (/tmp/tmplngknl3k.js:10:22)\n    at digits (/tmp/tmplngknl3k.js:10:22)\n\
    \    at digits (/tmp/tmplngknl3k.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n){\n\t\t\
    sum += n % 2 == 0 ? 0 : 1;\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpoge05cj2.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoge05cj2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpkqcoryju.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkqcoryju.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n==1) return 1;\n\tif(n==2) return 2;\n\tif(n<9) return n*(n-1)/2;\n\
    \treturn n*Math.sqrt(n)-1;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpjmfop13r.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjmfop13r.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n/2)*digits(n/2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpaplwx14y.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpaplwx14y.js:9:2)\n    at digits\
    \ (/tmp/tmpaplwx14y.js:10:22)\n    at digits (/tmp/tmpaplwx14y.js:10:22)\n   \
    \ at digits (/tmp/tmpaplwx14y.js:10:22)\n    at digits (/tmp/tmpaplwx14y.js:10:22)\n\
    \    at digits (/tmp/tmpaplwx14y.js:10:22)\n    at digits (/tmp/tmpaplwx14y.js:10:22)\n\
    \    at digits (/tmp/tmpaplwx14y.js:10:22)\n    at digits (/tmp/tmpaplwx14y.js:10:22)\n\
    \    at digits (/tmp/tmpaplwx14y.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp8hr33qe4.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8hr33qe4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<100000000000000000) return n*18;\n\tif(n<1000000000000000000)\
    \ return n*19;\n\treturn 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmptozxs_g5.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptozxs_g5.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpglbaag2a.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpglbaag2a.js:9:2)\n    at digits\
    \ (/tmp/tmpglbaag2a.js:10:22)\n    at digits (/tmp/tmpglbaag2a.js:10:22)\n   \
    \ at digits (/tmp/tmpglbaag2a.js:10:22)\n    at digits (/tmp/tmpglbaag2a.js:10:22)\n\
    \    at digits (/tmp/tmpglbaag2a.js:10:22)\n    at digits (/tmp/tmpglbaag2a.js:10:22)\n\
    \    at digits (/tmp/tmpglbaag2a.js:10:22)\n    at digits (/tmp/tmpglbaag2a.js:10:22)\n\
    \    at digits (/tmp/tmpglbaag2a.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\treturn 0;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmps_slw9n8.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps_slw9n8.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmck1m2vp.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpmck1m2vp.js:9:2)\n    at digits\
    \ (/tmp/tmpmck1m2vp.js:10:22)\n    at digits (/tmp/tmpmck1m2vp.js:10:22)\n   \
    \ at digits (/tmp/tmpmck1m2vp.js:10:22)\n    at digits (/tmp/tmpmck1m2vp.js:10:22)\n\
    \    at digits (/tmp/tmpmck1m2vp.js:10:22)\n    at digits (/tmp/tmpmck1m2vp.js:10:22)\n\
    \    at digits (/tmp/tmpmck1m2vp.js:10:22)\n    at digits (/tmp/tmpmck1m2vp.js:10:22)\n\
    \    at digits (/tmp/tmpmck1m2vp.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<10) return 1;\n\tif(n<100)\
    \ return n*2;\n\tif(n<1000) return n*3;\n\tif(n<10000) return n*4;\n\tif(n<100000)\
    \ return n*5;\n\tif(n<1000000) return n*6;\n\tif(n<10000000) return n*7;\n\tif(n<100000000)\
    \ return n*8;\n\tif(n<1000000000) return n*9;\n\tif(n<10000000000) return n*10;\n\
    \tif(n<100000000000) return n*11;\n\tif(n<1000000000000) return n*12;\n\tif(n<10000000000000)\
    \ return n*13;\n\tif(n<100000000000000) return n*14;\n\tif(n<1000000000000000)\
    \ return n*15;\n\tif(n<10000000000000000) return n*16;\n\tif(n<100000000000000000)\
    \ return n*17;\n\tif(n<1000000000000000000) return n*18;\n\tif(n<10000000000000000000)\
    \ return n*19;\n\tif(n<100000000000000000000) return n*20;\n\tif(n<1000000000000000000000)\
    \ return n*21;\n\tif(n<10000000000000000000000) return n*22;\n\tif(n<100000000000000000000000)\
    \ return n*23;\n\tif(n<1000000000000000000000000) return n*24;\n\tif(n<10000000000000000000000000)\
    \ return n*25;\n\tif(n<100000000000000000000000000) return n*26;\n\tif(n<1000000000000000000000000000)\
    \ return n*27;\n\tif(n<10000000000000000000000000000) return n*28;\n\tif(n<100000000000000000000000000000)\
    \ return n*29;\n\tif(n<1000000000000000000000000000000) return n*30;\n\tif(n<10000000000000000000000000000000)\
    \ return n*31;\n\tif(n<100000000000000000000000000000000) return n*32;\n\tif(n<1000000000000000000000000000000000)\
    \ return n*33;\n\tif(n<1000000000000000000000000000000000) return n*34;\n\tif(n<10000000000000000000000000000000000)\
    \ return n*35;\n\tif(n<100000000000000000000000000000000000) return n*36;\n\t\
    if(n<1000000000000000000000000000000000000) return n*37;\n\tif(n<10000000000000000000000000000000000000)\
    \ return n*38;\n\tif(n<100000000000000000000000000000000000000) return n*39;\n\
    \tif(n<1000000000000000000000000000000000000000) return n*40;\n\tif(n<10000000000000000000000000000000000000000)\
    \ return n*41;\n\tif(n<100000000000000000000000000000000000000000) return n*42;\n\
    \tif(n<100000000000000000000000000000000000000000) return n*43;\n\tif\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdpu92cia.js:53\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n-1);\n\tif(n%2==1) return n*(n-1);\n\treturn n*(n-1);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu0vm27p8.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu0vm27p8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<10) return 1;\n  if(n<100)\
    \ return n*2;\n  if(n<1000) return n*3;\n  if(n<10000) return n*4;\n  if(n<100000)\
    \ return n*5;\n  if(n<1000000) return n*6;\n  if(n<10000000) return n*7;\n  if(n<100000000)\
    \ return n*8;\n  if(n<1000000000) return n*9;\n  if(n<10000000000) return n*10;\n\
    \  if(n<100000000000) return n*11;\n  if(n<1000000000000) return n*12;\n  if(n<10000000000000)\
    \ return n*13;\n  if(n<100000000000000) return n*14;\n  if(n<1000000000000000)\
    \ return n*15;\n  if(n<10000000000000000) return n*16;\n  if(n<100000000000000000)\
    \ return n*17;\n  if(n<1000000000000000000) return n*18;\n  if(n<10000000000000000000)\
    \ return n*19;\n  if(n<100000000000000000000) return n*20;\n  if(n<1000000000000000000000)\
    \ return n*21;\n  if(n<10000000000000000000000) return n*22;\n  if(n<100000000000000000000000)\
    \ return n*23;\n  if(n<1000000000000000000000000) return n*24;\n  if(n<10000000000000000000000000)\
    \ return n*25;\n  if(n<100000000000000000000000000) return n*26;\n  if(n<1000000000000000000000000000)\
    \ return n*27;\n  if(n<10000000000000000000000000000) return n*28;\n  if(n<100000000000000000000000000000)\
    \ return n*29;\n  if(n<1000000000000000000000000000000) return n*30;\n  if(n<10000000000000000000000000000000)\
    \ return n*31;\n  if(n<100000000000000000000000000000000) return n*32;\n  if(n<1000000000000000000000000000000000)\
    \ return n*33;\n  if(n<10000000000000000000000000000000000) return n*34;\n  if(n<100000000000000000000000000000000000)\
    \ return n*35;\n  if(n<1000000000000000000000000000000000000) return n*36;\n \
    \ if(n<10000000000000000000000000000000000000) return n*37;\n  if(n<100000000000000000000000000000000000000)\
    \ return n*38;\n  if(n<1000000000000000000000000000000000000000) return n*39;\n\
    \  if(n<10000000000000000000000000000000000000000) return n*40;\n  if(n<100000000000000000000000000000000000000000)\
    \ return n*41;\n  if(n<1000000000000000000000000000000000000000000) return n*42;\n\
    \  if(n<10000000000000000000000000000000000000000000) return n*43;\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbuhkav9s.js:67\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5_s6ynfl.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp5_s6ynfl.js:9:2)\n    at digits\
    \ (/tmp/tmp5_s6ynfl.js:10:22)\n    at digits (/tmp/tmp5_s6ynfl.js:10:22)\n   \
    \ at digits (/tmp/tmp5_s6ynfl.js:10:22)\n    at digits (/tmp/tmp5_s6ynfl.js:10:22)\n\
    \    at digits (/tmp/tmp5_s6ynfl.js:10:22)\n    at digits (/tmp/tmp5_s6ynfl.js:10:22)\n\
    \    at digits (/tmp/tmp5_s6ynfl.js:10:22)\n    at digits (/tmp/tmp5_s6ynfl.js:10:22)\n\
    \    at digits (/tmp/tmp5_s6ynfl.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl6mj4qk_.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpl6mj4qk_.js:9:2)\n    at digits\
    \ (/tmp/tmpl6mj4qk_.js:10:22)\n    at digits (/tmp/tmpl6mj4qk_.js:10:22)\n   \
    \ at digits (/tmp/tmpl6mj4qk_.js:10:22)\n    at digits (/tmp/tmpl6mj4qk_.js:10:22)\n\
    \    at digits (/tmp/tmpl6mj4qk_.js:10:22)\n    at digits (/tmp/tmpl6mj4qk_.js:10:22)\n\
    \    at digits (/tmp/tmpl6mj4qk_.js:10:22)\n    at digits (/tmp/tmpl6mj4qk_.js:10:22)\n\
    \    at digits (/tmp/tmpl6mj4qk_.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\telse return digits(n-1)*n+digits(n-2);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm3zymj3y.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm3zymj3y.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n>0){\n\
    \t\tproduct = product * n % 10;\n\t\tn = Math.floor(n/10);\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpme6hx767.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpme6hx767.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpekma8n70.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpekma8n70.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile (n >\
    \ 0){\n\t\tif (n % 2 === 0){\n\t\t\tproduct *= 2;\n\t\t}\n\t\tn /= 2;\n\t}\n\t\
    return product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp3jq1g8gj.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3jq1g8gj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprpp_zo99.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmprpp_zo99.js:9:2)\n    at digits\
    \ (/tmp/tmprpp_zo99.js:10:22)\n    at digits (/tmp/tmprpp_zo99.js:10:22)\n   \
    \ at digits (/tmp/tmprpp_zo99.js:10:22)\n    at digits (/tmp/tmprpp_zo99.js:10:22)\n\
    \    at digits (/tmp/tmprpp_zo99.js:10:22)\n    at digits (/tmp/tmprpp_zo99.js:10:22)\n\
    \    at digits (/tmp/tmprpp_zo99.js:10:22)\n    at digits (/tmp/tmprpp_zo99.js:10:22)\n\
    \    at digits (/tmp/tmprpp_zo99.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<0) return 0;\n  if(n%2==0)\
    \ return n*digits(n/2);\n  else return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfss22u69.js:9\n  if(n<0) return 0;\n  ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpfss22u69.js:9:3)\n    at digits\
    \ (/tmp/tmpfss22u69.js:10:23)\n    at digits (/tmp/tmpfss22u69.js:10:23)\n   \
    \ at digits (/tmp/tmpfss22u69.js:10:23)\n    at digits (/tmp/tmpfss22u69.js:10:23)\n\
    \    at digits (/tmp/tmpfss22u69.js:10:23)\n    at digits (/tmp/tmpfss22u69.js:10:23)\n\
    \    at digits (/tmp/tmpfss22u69.js:10:23)\n    at digits (/tmp/tmpfss22u69.js:10:23)\n\
    \    at digits (/tmp/tmpfss22u69.js:10:23)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile (n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmper8_9hhv.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmper8_9hhv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpf4sykwik.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpf4sykwik.js:9:2)\n    at digits\
    \ (/tmp/tmpf4sykwik.js:10:22)\n    at digits (/tmp/tmpf4sykwik.js:10:22)\n   \
    \ at digits (/tmp/tmpf4sykwik.js:10:22)\n    at digits (/tmp/tmpf4sykwik.js:10:22)\n\
    \    at digits (/tmp/tmpf4sykwik.js:10:22)\n    at digits (/tmp/tmpf4sykwik.js:10:22)\n\
    \    at digits (/tmp/tmpf4sykwik.js:10:22)\n    at digits (/tmp/tmpf4sykwik.js:10:22)\n\
    \    at digits (/tmp/tmpf4sykwik.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\telse return digits(n/2)*digits(n/2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8b_7y2g6.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp8b_7y2g6.js:9:2)\n    at digits\
    \ (/tmp/tmp8b_7y2g6.js:10:22)\n    at digits (/tmp/tmp8b_7y2g6.js:10:22)\n   \
    \ at digits (/tmp/tmp8b_7y2g6.js:10:22)\n    at digits (/tmp/tmp8b_7y2g6.js:10:22)\n\
    \    at digits (/tmp/tmp8b_7y2g6.js:10:22)\n    at digits (/tmp/tmp8b_7y2g6.js:10:22)\n\
    \    at digits (/tmp/tmp8b_7y2g6.js:10:22)\n    at digits (/tmp/tmp8b_7y2g6.js:10:22)\n\
    \    at digits (/tmp/tmp8b_7y2g6.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp10fiej3f.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp10fiej3f.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpp4hg1oj7.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp4hg1oj7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5kx2wsoa.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp5kx2wsoa.js:9:2)\n    at digits\
    \ (/tmp/tmp5kx2wsoa.js:10:22)\n    at digits (/tmp/tmp5kx2wsoa.js:10:22)\n   \
    \ at digits (/tmp/tmp5kx2wsoa.js:10:22)\n    at digits (/tmp/tmp5kx2wsoa.js:10:22)\n\
    \    at digits (/tmp/tmp5kx2wsoa.js:10:22)\n    at digits (/tmp/tmp5kx2wsoa.js:10:22)\n\
    \    at digits (/tmp/tmp5kx2wsoa.js:10:22)\n    at digits (/tmp/tmp5kx2wsoa.js:10:22)\n\
    \    at digits (/tmp/tmp5kx2wsoa.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprft2m5ev.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprft2m5ev.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while\
    \ (n){\n        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpitjx02wq.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpitjx02wq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return 0;\n\tif(n%2==1) return 1;\n\treturn digits(n/2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpefyvoel1.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpefyvoel1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return 0;\n\tvar result=1;\n\twhile(n>0){\n\t\tif(n%2==1)\
    \ result*=2;\n\t\tn/=2;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp38c_x1ep.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp38c_x1ep.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1fi54k7a.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmp1fi54k7a.js:9:2)\n    at digits\
    \ (/tmp/tmp1fi54k7a.js:10:22)\n    at digits (/tmp/tmp1fi54k7a.js:10:22)\n   \
    \ at digits (/tmp/tmp1fi54k7a.js:10:22)\n    at digits (/tmp/tmp1fi54k7a.js:10:22)\n\
    \    at digits (/tmp/tmp1fi54k7a.js:10:22)\n    at digits (/tmp/tmp1fi54k7a.js:10:22)\n\
    \    at digits (/tmp/tmp1fi54k7a.js:10:22)\n    at digits (/tmp/tmp1fi54k7a.js:10:22)\n\
    \    at digits (/tmp/tmp1fi54k7a.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpcw9ozuxb.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcw9ozuxb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 10;\n        n /= 10;\n    }\n    return product;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpmgwpdksi.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmgwpdksi.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n>0){\n\
    \    product = product * n % 10;\n    n = Math.floor(n/10);\n  }\n  return product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4evd3gl4.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4evd3gl4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var sum = 0;\n    while(n){\n\
    \        sum += n % 2 ? 1 : 0; \n        n = Math.floor(n / 2);\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2menh8s2.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2menh8s2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n > 0){\n\
    \t\tsum += n % 10;\n\t\tn = Math.floor(n / 10);\n\t}\n\treturn sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpduo9rpxb.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpduo9rpxb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n){\n\
    \t\tproduct = product * n % 10;\n\t\tn = Math.floor(n / 10);\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpme3qlxdi.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpme3qlxdi.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmps9xdt9ed.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps9xdt9ed.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n){\n\t\t\
    sum += n % 2;\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmprwufadw1.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprwufadw1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar digits = 1;\n\twhile (n >\
    \ 0){\n\t\tdigits *= n % 2;\n\t\tn /= 2;\n\t}\n\treturn digits;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpg3s6xx9l.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg3s6xx9l.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqrr6hw31.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpqrr6hw31.js:9:2)\n    at digits\
    \ (/tmp/tmpqrr6hw31.js:10:22)\n    at digits (/tmp/tmpqrr6hw31.js:10:22)\n   \
    \ at digits (/tmp/tmpqrr6hw31.js:10:22)\n    at digits (/tmp/tmpqrr6hw31.js:10:22)\n\
    \    at digits (/tmp/tmpqrr6hw31.js:10:22)\n    at digits (/tmp/tmpqrr6hw31.js:10:22)\n\
    \    at digits (/tmp/tmpqrr6hw31.js:10:22)\n    at digits (/tmp/tmpqrr6hw31.js:10:22)\n\
    \    at digits (/tmp/tmpqrr6hw31.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar sum = 0;\n\twhile(n > 0){\n\
    \t\tsum += n % 2;\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpa5nbpf1i.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa5nbpf1i.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0){\n\t\tn *= -1;\n\t}\n\t\
    \n\tlet product = 1;\n\t\n\tfor(let i = n; i > 0; i--){\n\t\tproduct *= i % 2\
    \ ? i : 1;\n\t}\n\t\n\treturn product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpovzix27l.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpovzix27l.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n-1);\n\treturn digits(n-1)*(n%2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp14woneip.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp14woneip.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*(n+1)/2;\n\telse return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpblde1ldr.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpblde1ldr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return digits(n/2);\n\treturn digits(n/2)*3+1\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n5\n    at test (/tmp/tmpq994j9c7.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq994j9c7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\treturn digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa1efc1p8.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpa1efc1p8.js:9:2)\n    at digits\
    \ (/tmp/tmpa1efc1p8.js:10:22)\n    at digits (/tmp/tmpa1efc1p8.js:10:22)\n   \
    \ at digits (/tmp/tmpa1efc1p8.js:10:22)\n    at digits (/tmp/tmpa1efc1p8.js:10:22)\n\
    \    at digits (/tmp/tmpa1efc1p8.js:10:22)\n    at digits (/tmp/tmpa1efc1p8.js:10:22)\n\
    \    at digits (/tmp/tmpa1efc1p8.js:10:22)\n    at digits (/tmp/tmpa1efc1p8.js:10:22)\n\
    \    at digits (/tmp/tmpa1efc1p8.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp14wglu7g.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp14wglu7g.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  var product = 1;\n  while(n){\n\
    \    product *= n % 2;\n    n /= 2;\n  }\n  return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpt0l608q8.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt0l608q8.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n<0) return 0;\n  if(n%2==0)\
    \ return n*(n+1)/2;\n  else return n*(n-1)*(2*n+1)/6;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36.666666666666664\n\
    \nshould loosely deep-equal\n\n5\n    at test (/tmp/tmpa2uvd6u3.js:19:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpa2uvd6u3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36.666666666666664,\n\
    \  expected: 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return digits(n/2);\n\tif(n%2==1) return n*digits(n/2);\n\
    \treturn 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpr0p_fvem.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr0p_fvem.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n    var product = 1;\n    while(n){\n\
    \        product *= n % 2;\n        n /= 2;\n    }\n    return product;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4c3y_pu4.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4c3y_pu4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tvar product = 1;\n\twhile(n>0){\n\
    \t\tif(n%2==1){\n\t\t\tproduct*=2;\n\t\t}\n\t\tn--;\n\t}\n\treturn product;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpcmtkgxeh.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcmtkgxeh.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n  if(n < 0) return 0;\n  if(n ==\
    \ 0) return 1;\n  if(n == 1) return 1;\n  if(n == 2) return 2;\n  if(n == 3) return\
    \ 3;\n  if(n == 4) return 4;\n  if(n == 5) return 6;\n  if(n == 6) return 8;\n\
    \  if(n == 7) return 9;\n  if(n == 8) return 16;\n  if(n == 9) return 25;\n  if(n\
    \ == 10) return 36;\n  if(n == 11) return 49;\n  if(n == 12) return 64;\n  if(n\
    \ == 13) return 81;\n  if(n == 14) return 100;\n  if(n == 15) return 121;\n  if(n\
    \ == 16) return 152;\n  if(n == 17) return 181;\n  if(n == 18) return 210;\n \
    \ if(n == 19) return 241;\n  if(n == 20) return 271;\n  if(n == 21) return 302;\n\
    \  if(n == 22) return 333;\n  if(n == 23) return 363;\n  if(n == 24) return 404;\n\
    \  if(n == 25) return 435;\n  if(n == 26) return 466;\n  if(n == 27) return 495;\n\
    \  if(n == 28) return 525;\n  if(n == 29) return 565;\n  if(n == 30) return 606;\n\
    \  if(n == 31) return 646;\n  if(n == 32) return 676;\n  if(n == 33) return 715;\n\
    \  if(n == 34) return 755;\n  if(n == 35) return 805;\n  if(n == 36) return 845;\n\
    \  if(n == 37) return 895;\n  if(n == 38) return 945;\n  if(n == 39) return 995;\n\
    \  if(n == 40) return 1045;\n  if(n == 41) return 1095;\n  if(n == 42) return\
    \ 1145;\n  if(n == 43) return 1205;\n  if(n == 44) return 1255;\n  if(n == 45)\
    \ return 1305;\n  if(n == 46) return 1355;\n  if(n == 47) return 1405;\n  if(n\
    \ == 48) return 1455;\n  if(n == 49) return 1505;\n  if(n == 50) return 1555;\n\
    \  if(n == 51) return 1605;\n  if(n == 52) return 1655;\n  if(n == 53) return\
    \ 1705;\n  if(n == 54) return 1755;\n  if(n == 55) return 1805;\n  if(n == 56\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpx7p2xr3s.js:67\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n%2==0)\
    \ return n*digits(n/2);\n\telse return digits(n/2)*n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpy6cpbvqk.js:9\n\tif(n<0) return 0;\n\t^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at digits (/tmp/tmpy6cpbvqk.js:9:2)\n    at digits\
    \ (/tmp/tmpy6cpbvqk.js:10:22)\n    at digits (/tmp/tmpy6cpbvqk.js:10:22)\n   \
    \ at digits (/tmp/tmpy6cpbvqk.js:10:22)\n    at digits (/tmp/tmpy6cpbvqk.js:10:22)\n\
    \    at digits (/tmp/tmpy6cpbvqk.js:10:22)\n    at digits (/tmp/tmpy6cpbvqk.js:10:22)\n\
    \    at digits (/tmp/tmpy6cpbvqk.js:10:22)\n    at digits (/tmp/tmpy6cpbvqk.js:10:22)\n\
    \    at digits (/tmp/tmpy6cpbvqk.js:10:22)\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1) \n// 1\n\
    // >>> digits(4) \n// 0\nfunction digits(n){\n\tif(n<0) return 0;\n\tif(n==0)\
    \ return 1;\n\tif(n%2==0) return 0;\n\treturn digits(n/2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpfyx3wtqi.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfyx3wtqi.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

name: HumanEval_14_all_prefixes
language: js
prompt: "//Return list of all prefixes from shortest to longest of the input string\n\
  function all_prefixes(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
  asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
  WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
completions: ["    var prefixes = [];\n    var len = string.length;\n    for(var i\
    \ = 0; i < len; i++){\n        prefixes.push(string.substr(0,i));\n    }\n   \
    \ return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefix += string[i];\n        prefixes.push(prefix);\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0;\
    \ i < string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n\
    \    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ !== prefix){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n  }\n\
    \  prefixes.push(prefix);\n  return prefixes;\n}\n", "\tvar prefixes = [];\n\t\
    for(var i = 0; i < string.length; i++){\n\t\tprefixes.push(string.slice(0, i));\n\
    \t}\n\treturn prefixes;\n}\n", "  var prefixes = [];\n  var current_prefix = \"\
    \";\n  for(var i = 0; i < string.length; i++){\n    if(string[i] === \" \" ||\
    \ string[i] === \"\\t\" || string[i] === \"\\n\"){\n      prefixes.push(current_prefix);\n\
    \      current_prefix = \"\";\n    }else{\n      current_prefix += string[i];\n\
    \    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n", "   \
    \ var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var current_prefix = \"\";\n  for(var i=0;i<string.length;i++){\n\
    \    if(string[i]===\" \"){\n      prefixes.push(current_prefix);\n      current_prefix\
    \ = \"\";\n    }else{\n      current_prefix += string[i];\n    }\n  }\n  prefixes.push(current_prefix);\n\
    \  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n   \
    \ for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n    \
    \    if(string[i] === string[0]){\n            prefixes.push(prefix);\n      \
    \      prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var len = string.length;\n    for(var i = 0; i < len; i++){\n   \
    \     prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.substr(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix =\
    \ prefix + string[i];\n        if(prefixes.indexOf(prefix) === -1){\n        \
    \    prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(string[i] != string[0]){\n \
    \           prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n\
    \    prefixes.push(prefix);\n    return prefixes;\n}\n", "    var prefixes = [];\n\
    \    var len = string.length;\n    var i = 0;\n    while(i < len){\n        prefixes.push(string.substr(i,\
    \ len));\n        i += len;\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var prefix = '';\n    for(var i = 0; i < string.length; i++){\n \
    \       prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix) ===\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var len = string.length;\n    for(var i = 0;\
    \ i < len; i++){\n        prefixes.push(string.substr(0,i));\n    }\n    return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i <= string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n",
  "  var prefixes = [];\n  var i = string.length;\n  while (i--){\n    prefixes.unshift(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    var current_prefix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char == \" \"){\n  \
    \          prefixes.push(current_prefix);\n            prefix_length++;\n    \
    \        current_prefix = \"\";\n        }else{\n            current_prefix +=\
    \ char;\n        }\n    }\n    prefixes.push(current_prefix);\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n \
    \       prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i=0;i<string.length;i++){\n\
    \        prefix = prefix + string[i];\n        prefixes.push(prefix);\n    }\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i<len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i\
    \ < string.length; i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var i = 0;\n    while(i < string.length){\n\
    \        prefixes.push(string.substr(i, string.length));\n        i += 1;\n  \
    \  }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       prefixes.push(prefix);\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var prefix = '';\n    for(var i = 0; i < string.length; i++){\n \
    \       prefix += string[i];\n        if(string[i] === string[0]){\n         \
    \   prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n    \
    \    if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\tvar prefix\
    \ = '';\n\tvar i = 0;\n\twhile(i < string.length){\n\t\tprefix = prefix + string.charAt(i);\n\
    \t\ti++;\n\t\tif(string.charAt(i) == string.charAt(string.length - 1)){\n\t\t\t\
    prefixes.push(prefix);\n\t\t\tprefix = '';\n\t\t}\n\t}\n\treturn prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string.charAt(i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.length == 0\
    \ || prefixes[prefixes.length-1].length < prefix.length){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix +=\
    \ string[i];\n        if(string[i] != string[0]){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "   \
    \ var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i<string.length; i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] === string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(string[i] != string[0]){\n \
    \           prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tprefixes.push(string.substring(0, i));\n\
    \t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i=0; i<string.length; i++){\n        prefix += string[i];\n\
    \        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var prefix_length = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        prefix_length = prefix_length + string.charAt(i).length;\n        prefixes.push(string.substr(0,\
    \ i));\n    }\n    prefixes.push(string.substr(0, prefix_length));\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n   \
    \ for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    var i = 0;\n    while(i<string.length){\n        prefix = prefix +\
    \ string.charAt(i);\n        if(prefixes.length == 0){\n            prefixes.push(prefix);\n\
    \        }\n        else{\n            for(var j=0; j<prefixes.length; j++){\n\
    \                if(prefixes[j].length < prefix.length){\n                   \
    \ prefixes.splice(j,0,prefix);\n                    break;\n                }\n\
    \            }\n        }\n        i++;\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        prefixes.push(prefix);\n    }\n\
    \    return prefixes;\n}\n", "\tvar prefixes = [];\n\tfor(var i = 0; i <= string.length;\
    \ i++){\n\t\tprefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n",
  "    var prefixes = [];\n    var len = string.length;\n    for(var i=0;i<len;i++){\n\
    \        prefixes.push(string.substr(0,i));\n    }\n    return prefixes;\n}\n",
  "\tvar prefixes = [];\n\tvar prefix_length = 0;\n\tvar current_prefix = \"\";\n\t\
    for(var i = 0; i < string.length; i++){\n\t\tcurrent_prefix = current_prefix +\
    \ string[i];\n\t\tprefix_length = prefix_length + string[i].length;\n\t\tprefixes.push(current_prefix);\n\
    \t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n    var length = string.length;\n\
    \    for(var i = 0; i < length; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix +\
    \ string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.substr(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var len =\
    \ string.length;\n    for(var i = 0; i < len; i++){\n        var prefix = string.substr(0,\
    \ i);\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ currentLength = string.length;\n    while(currentLength > 0){\n        var currentPrefix\
    \ = string.substr(0, currentLength);\n        prefixes.push(currentPrefix);\n\
    \        currentLength = currentPrefix.length;\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var length = string.length;\n    for(var i\
    \ = 0; i < length; i++){\n        var prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(string[i] != string[0]){\n \
    \           prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n\
    \    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix = \"\";\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix = prefix + string[i];\n    if(prefixes.indexOf(prefix)\
    \ == -1){\n      prefixes.push(prefix);\n    }\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i<string.length; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    for(var i\
    \ = 0; i < string.length; i++){\n        prefixes.push(string.substring(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix +\
    \ string[i];\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefixes.push(string.substr(0, i));\n \
    \ }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    var current_length = 1;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] != current_prefix){\n            prefixes.push(current_prefix);\n\
    \            current_length = current_prefix.length;\n            current_prefix\
    \ = string[i];\n        }\n    }\n    prefixes.push(current_prefix);\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var length = string.length;\n\
    \    var i = 0;\n    while(i < length){\n        prefixes.push(string.substr(i,length));\n\
    \        i += length;\n    }\n    return prefixes;\n}\n", "    var prefixes =\
    \ [];\n    var length = string.length;\n    for(var i = 0; i <= length; i++){\n\
    \        prefixes.push(string.substr(0,i));\n    }\n    return prefixes;\n}\n",
  "  var prefixes = [];\n  var len = string.length;\n  for(var i = 0; i<len; i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len; i++){\n\
    \        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var len = string.length;\n    var i = 0;\n    while(i\
    \ < len){\n        prefixes.push(string.substr(i, len));\n        i += len;\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix +\
    \ string[i];\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix +\
    \ string[i];\n        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix +=\
    \ string[i];\n        if(string[i] != string[0]){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "   \
    \ var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n \
    \       prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var current = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        current += string[i];\n        if(!prefixes.includes(current)){\n\
    \            prefixes.push(current);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    var i = 0;\n    while(i\
    \ < string.length){\n        prefix = prefix + string.charAt(i);\n        if(!prefixes.includes(prefix)){\n\
    \            prefixes.push(prefix);\n        }\n        i++;\n    }\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefix_length += string[i].length;\n\
    \        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string.charAt(i);\n        if(string[i] != string.charAt(i-1)){\n\
    \            prefixes.push(prefix);\n            prefix = '';\n        }\n   \
    \ }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    while(i < string.length){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.length == 0){\n            prefixes.push(prefix);\n     \
    \   }\n        else{\n            var j = 0;\n            while(j < prefixes.length){\n\
    \                if(prefixes[j] == prefix){\n                    break;\n    \
    \            }\n                else{\n                    j++;\n            \
    \    }\n            }\n            if(j == prefixes.length){\n               \
    \ prefixes.push(prefix);\n            }\n        }\n        i++;\n    }\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix_length = 0;\n  var current_prefix =\
    \ \"\";\n  for(var i = 0; i < string.length; i++){\n    if(string[i] === \"-\"\
    ){\n      if(current_prefix !== \"\"){\n        prefixes.push(current_prefix);\n\
    \      }\n      current_prefix = \"\";\n      prefix_length = 0;\n    }\n    else{\n\
    \      current_prefix += string[i];\n      prefix_length++;\n    }\n  }\n  if(current_prefix\
    \ !== \"\"){\n    prefixes.push(current_prefix);\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    var current_prefix = \"\";\n    for(var i = 0; i <\
    \ string.length; i++){\n        current_prefix += string.charAt(i);\n        if(current_prefix.length\
    \ > 0){\n            prefixes.push(current_prefix);\n        }\n    }\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n    \
    \    if(char === prefixes[prefix_length]){\n            prefix_length++;\n   \
    \     }else{\n            prefix_length = 0;\n            prefixes.push(char);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix =\
    \ prefix + string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix_length = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        prefix_length += string[i].length;\n     \
    \   prefixes.push(string.substr(0, i));\n    }\n    prefixes.push(string.substr(0,\
    \ prefix_length));\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix =\
    \ prefix + string[i];\n        if(prefixes.indexOf(prefix) == -1){\n         \
    \   prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n", "\t\
    var prefixes = [];\n\tvar current_prefix = \"\";\n\tvar current_length = 1;\n\t\
    for(var i = 0; i < string.length; i++){\n\t\tcurrent_prefix = current_prefix +\
    \ string.charAt(i);\n\t\tcurrent_length++;\n\t\tif(current_length == string.length){\n\
    \t\t\tprefixes.push(current_prefix);\n\t\t\tcurrent_length = 1;\n\t\t\tcurrent_prefix\
    \ = \"\";\n\t\t}\n\t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n   \
    \ var prefix = \"\";\n    for(var i = 0; i < string.length; i++){\n        prefix\
    \ = prefix + string[i];\n        if(prefixes.indexOf(prefix) == -1){\n       \
    \     prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string.charAt(i);\n        if(prefixes.length\
    \ == 0 || prefixes[prefixes.length-1].length < string.length){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ current_prefix = \"\";\n    for(var i = 0; i < string.length; i++){\n      \
    \  var char = string.charAt(i);\n        if(char == current_prefix){\n       \
    \     prefixes.push(current_prefix);\n        }\n        current_prefix = char;\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n\
    \        if(string[i] != string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "  var prefixes\
    \ = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n", "  var prefixes = [];\n  var i = 0;\n  var len\
    \ = string.length;\n  while(i < len){\n    prefixes.push(string.substr(i, 1));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix =\
    \ prefix + string[i];\n        if(prefixes.indexOf(prefix) === -1){\n        \
    \    prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n \
    \       prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix_length = 0;\n    var current_prefix = \"\
    \";\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char === \" \"){\n            prefixes.push(current_prefix);\n   \
    \         prefix_length++;\n            current_prefix = \"\";\n        }\n  \
    \      else{\n            current_prefix += char;\n        }\n    }\n    prefixes.push(current_prefix);\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length =\
    \ 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] === '-'){\n\
    \            prefixes.push('-');\n            prefix_length++;\n        }\n  \
    \      else{\n            prefixes.push(string.substr(0, i));\n            prefix_length\
    \ = i;\n        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n\
    \    var prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix\
    \ = prefix + string.charAt(i);\n        if(prefixes.indexOf(prefix) === -1){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    var i = 0;\n    for(i\
    \ = 0; i < string.length; i++){\n        prefix = prefix + string.charAt(i);\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var prefix_length\
    \ = 0;\n  var i = 0;\n  while(i < string.length){\n    prefix_length = prefix_length\
    \ + string.substr(i, 1).length;\n    i++;\n  }\n  for(i = prefix_length; i < string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string.charAt(i);\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var current_prefix = \"\";\n    for(var i =\
    \ 0; i < string.length; i++){\n        if(string[i] != current_prefix){\n    \
    \        prefixes.push(current_prefix);\n            current_prefix = string[i];\n\
    \        }\n    }\n    prefixes.push(current_prefix);\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var len =\
    \ string.length;\n    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\tfor(var i=0;i<string.length;i++){\n\
    \t\tprefixes.push(string.substr(0,i));\n\t}\n\treturn prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix_length = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix_length += string[i].length;\n        prefixes.push(string.substr(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefixes.push(string.substring(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix +\
    \ string[i];\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        for(var j = 0; j < string.length; j++){\n\
    \            if(string[i] == string[j]){\n                prefixes.push(string[i]);\n\
    \            }\n        }\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var prefix = '';\n    var i = 0;\n    for(i = 0; i<string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        prefixes.push(prefix);\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefix_length += string[i].length;\n\
    \        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "\tvar prefixes = [];\n\tfor(var i = 0; i <= string.length; i++){\n\t\t\
    prefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var prefix = '';\n    var i = 0;\n    for(i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var len = string.length;\n    for(var i = 0;\
    \ i < len; i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return\
    \ prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i<string.length; i++){\n\
    \    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.length == 0\
    \ || prefixes[prefixes.length-1].length < prefix.length){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ len = string.length;\n    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n\
    \        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var len = string.length;\n    for(var i = 0; i < len; i++){\n   \
    \     var prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix) ==\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var currentLength = string.length;\n  while(currentLength\
    \ > 0){\n    prefixes.unshift(string.substr(0,currentLength));\n    currentLength\
    \ = currentLength - 1;\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n\
    \    var currentLength = string.length;\n    while(currentLength > 0){\n     \
    \   prefixes.unshift(string.substr(0,currentLength));\n        currentLength =\
    \ currentLength - 1;\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n\
    \    var prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix\
    \ += string.charAt(i);\n        if(string[i] === string.charAt(i) && string[i+1]\
    \ === string.charAt(i+1)){\n            prefixes.push(prefix);\n            prefix\
    \ = '';\n        }\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\
    \tvar prefix_length = 0;\n\tvar current_prefix = \"\";\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(string[i] != \" \"){\n\t\t\tcurrent_prefix += string[i];\n\t\t\
    \tprefix_length++;\n\t\t}\n\t\telse{\n\t\t\tprefixes.push(current_prefix);\n\t\
    \t\tcurrent_prefix = \"\";\n\t\t\tprefix_length = 0;\n\t\t}\n\t}\n\tprefixes.push(current_prefix);\n\
    \treturn prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i <= string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    var i = 0;\n    for(i = 0; i\
    \ <= string.length; i++){\n        prefix = prefix + string[i];\n        if(prefixes.length\
    \ == 0){\n            prefixes.push(prefix);\n        }\n        else{\n     \
    \       for(i = 0; i <= string.length; i++){\n                prefix = prefix\
    \ + string[i];\n                prefixes.push(prefix);\n            }\n      \
    \  }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tprefixes.push(string.substring(0, i));\n\
    \t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n", "    var\
    \ prefixes = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.substr(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    var i = 0;\n    while(i < string.length){\n        prefix = prefix\
    \ + string.charAt(i);\n        i++;\n        if(i < string.length){\n        \
    \    prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n", " \
    \   var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(string[i] === string[0]){\n\
    \            prefixes.push(prefix);\n            prefix = '';\n        }\n   \
    \ }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = '';\n    var i = 0;\n    while(i < string.length){\n        prefix\
    \ = prefix + string.charAt(i);\n        if(string.length == i){\n            prefixes.push(prefix);\n\
    \        }\n        i++;\n    }\n    return prefixes;\n}\n", "    var prefixes\
    \ = [];\n    var prefix = '';\n    for(var i = 0; i < string.length; i++){\n \
    \       prefix += string[i];\n        if(string[i] != prefix){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length = 0;\n    var\
    \ current_prefix = \"\";\n    for(var i = 0; i < string.length; i++){\n      \
    \  var char = string.charAt(i);\n        if(char === \".\" || char === \"/\" ||\
    \ char === \":\" || char === \";\" || char === \":\" || char === \",\" || char\
    \ === \";\" || char === \".\" || char === \"/\" || char === \":\" || char ===\
    \ \",\" || char === \";\" || char === \":\" || char === \".\" || char === \"/\"\
    \ || char === \":\" || char === \".\" || char === \"/\" || char === \":\" || char\
    \ === \";\" || char === \":\" || char === \".\" || char === \"/\" || char ===\
    \ \":\" || char === \".\" || char === \"/\" || char === \":\" || char === \";\"\
    ){\n            prefixes[prefixes.length] = current_prefix;\n            prefix_length++;\n\
    \            current_prefix = \"\";\n        }else{\n            current_prefix\
    \ += char;\n        }\n    }\n    prefixes[prefixes.length] = current_prefix;\n\
    \    prefix_length++;\n    return prefixes;\n}\n", "    var prefixes = [];\n \
    \   var prefix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix\
    \ += string[i];\n        if(string[i] != string[0]){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var currentLength = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        currentLength += string[i].length;\n\
    \        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n}\n",
  "\tvar prefixes = [];\n\tvar prefix = '';\n\t\n\tfor(var i=0;i<string.length;i++){\n\
    \t\tprefix = prefix + string[i];\n\t\tprefixes.push(prefix);\n\t}\n\t\n\treturn\
    \ prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i<string.length;\
    \ i++){\n        prefixes.push(string.substr(0,i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n \
    \       prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(string[i] != string[0]){\n \
    \           prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i<string.length;\
    \ i++){\n        prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n\
    }\n", "\tvar prefixes = [];\n\tvar current_prefix = \"\";\n\tfor(var i = 0; i\
    \ < string.length; i++){\n\t\tcurrent_prefix += string.charAt(i);\n\t\tif(current_prefix.length\
    \ == string.length){\n\t\t\tprefixes.push(current_prefix);\n\t\t\tcurrent_prefix\
    \ = \"\";\n\t\t}\n\t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n   \
    \ var length = string.length;\n    for(var i = 0; i < length; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\tvar prefix\
    \ = '';\n\tfor(var i = 0; i < string.length; i++){\n\t\tprefix += string[i];\n\
    \t\tif(prefixes.indexOf(prefix) == -1){\n\t\t\tprefixes.push(prefix);\n\t\t}\n\
    \t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var\
    \ prefix = \"\";\n    var i = 0;\n    for(i = 0; i <= string.length; i++){\n \
    \       prefix = prefix + string.charAt(i);\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(prefixes.length == 0 || prefixes[prefixes.length-1].length\
    \ < string.length){\n            prefixes.push(prefix);\n        }\n    }\n  \
    \  return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix =\
    \ '';\n    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n\
    \        if(string[i] != string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefix += string[i];\n        if(string[i]\
    \ != string[0]){\n            prefixes.push(prefix);\n            prefix = '';\n\
    \        }\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\tvar prefix_length\
    \ = 0;\n\tvar index = 0;\n\twhile(index < string.length){\n\t\tvar character =\
    \ string.charAt(index);\n\t\tif(character == \" \"){\n\t\t\tindex++;\n\t\t\tcontinue;\n\
    \t\t}\n\t\tvar prefix = string.substr(index, prefix_length);\n\t\tindex++;\n\t\
    \tprefixes.push(prefix);\n\t\tprefix_length = prefix.length;\n\t}\n\treturn prefixes;\n\
    }\n", "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n \
    \       prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n",
  "    var prefixes = [];\n    var len = string.length;\n    for(var i = 0; i < len;\
    \ i++){\n        prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(string[i] != string[0]){\n \
    \           prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n\
    \    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n",
  "    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  var len =\
    \ string.length;\n  for(var i = 0; i <= len; i++){\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n", "    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ '-'){\n            prefixes.push('-');\n            prefix_length++;\n     \
    \   }\n        else{\n            prefixes.push(string.substr(0, i));\n      \
    \      prefix_length = i;\n        }\n    }\n    return prefixes;\n}\n", "   \
    \ var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.length == 0\
    \ || prefixes[prefixes.length-1].length < string.length){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n", "  var prefixes = [];\n  for(var i = 0; i\
    \ <= string.length; i++){\n    prefixes.push(string.substring(0, i));\n  }\n \
    \ return prefixes;\n}\n", "    var prefixes = [];\n    var len = string.length;\n\
    \    var i = 0;\n    while(i < len){\n        prefixes.push(string.substr(i, len));\n\
    \        i += len;\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n\
    \    var prefix = '';\n    var i;\n    for(i = 0; i < string.length; i++){\n \
    \       prefix = prefix + string[i];\n        if(prefixes.length == 0 || prefixes[prefixes.length-1].length\
    \ < string.length){\n            prefixes.push(prefix);\n        }\n    }\n  \
    \  return prefixes;\n}\n", "\tvar prefixes = [];\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tprefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n",
  "    var prefixes = [];\n    var prefix = '';\n    for(var i=0; i<string.length;\
    \ i++){\n        prefix = prefix + string.charAt(i);\n        if(prefixes.indexOf(prefix)\
    \ == -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(prefixes.indexOf(prefix)\
    \ === -1){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var len = string.length;\n    for(var i = 0;\
    \ i < len; i++){\n        prefixes.push(string.substr(0,i));\n    }\n    return\
    \ prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n    for(var\
    \ i = 0; i < string.length; i++){\n        prefix += string.charAt(i);\n     \
    \   if(string[i] === string.charAt(i) && string[i] !== string.charAt(i - 1)){\n\
    \            prefixes.push(prefix);\n            prefix = '';\n        }\n   \
    \ }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var current = \"\
    \";\n    for(var i = 0; i < string.length; i++){\n        current += string[i];\n\
    \        if(prefixes.indexOf(current) == -1){\n            prefixes.push(current);\n\
    \        }\n    }\n    return prefixes;\n}\n", "\tvar prefixes = [];\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tprefixes.push(string.substring(0, i));\n\
    \t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n    var current = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === current){\n\
    \            prefixes.push(current);\n            current = '';\n        } else\
    \ {\n            current += string[i];\n        }\n    }\n    prefixes.push(current);\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix = '';\n \
    \   for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.length == 0 || prefixes[prefixes.length-1].length < prefix.length){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n", "\tvar prefixes = [];\n\tfor(var i = 0; i < string.length; i++){\n\t\tprefixes.push(string.substr(0,\
    \ i));\n\t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n    var len =\
    \ string.length;\n    for(var i = 0; i < len; i++){\n        var char = string.charAt(i);\n\
    \        if(char.match(/[a-z]/i)){\n            prefixes.push(char);\n       \
    \ }\n    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var prefix\
    \ = '';\n    var suffix = '';\n    for(var i = 0; i < string.length; i++){\n \
    \       prefix = prefix + string[i];\n        suffix = string.substr(i);\n   \
    \     if(string[i] === suffix){\n            prefixes.push(prefix);\n        }\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    var current_length = 1;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \" \" || string[i] === \"-\"){\n           \
    \ current_length++;\n        }\n        else{\n            current_length = 1;\n\
    \        }\n        if(current_length >= current_prefix){\n            prefixes.push(current_prefix);\n\
    \        }\n        current_prefix = current_length;\n    }\n    return prefixes;\n\
    }\n", "    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix += string[i];\n        if(string[i] != string[0]){\n \
    \           prefixes.push(prefix);\n            prefix = '';\n        }\n    }\n\
    \    return prefixes;\n}\n", "    var prefixes = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n", "  var prefixes = [];\n  var prefix = '';\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefix += string[i];\n    if(string[i] === string[0]){\n      prefixes.push(prefix);\n\
    \      prefix = '';\n    }\n  }\n  return prefixes;\n}\n", "\tvar prefixes = [];\n\
    \tfor(var i = 0; i <= string.length; i++){\n\t\tprefixes.push(string.substr(0,\
    \ i));\n\t}\n\treturn prefixes;\n}\n", "    var prefixes = [];\n    for(var i\
    \ = 0; i < string.length; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n", "    var prefixes = [];\n    for(var i=0;i<string.length;i++){\n\
    \        prefixes.push(string.substr(0,i));\n    }\n    return prefixes;\n}\n",
  "\tvar prefixes = [];\n\tvar prefix = '';\n\tfor(var i = 0; i < string.length; i++){\n\
    \t\tprefix += string[i];\n\t\tif(string[i] != string[0]){\n\t\t\tprefixes.push(prefix);\n\
    \t\t\tprefix = '';\n\t\t}\n\t}\n\treturn prefixes;\n}\n", "    var prefixes =\
    \ [];\n    var len = string.length;\n    for(var i = 0; i<len; i++){\n       \
    \ prefixes.push(string.substr(0,i));\n    }\n    return prefixes;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_157_right_angle_triangle
language: js
prompt: "//Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
  // Example:\nfunction right_angle_triangle(a, b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
  \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
completions: ["    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n   \
    \ var det = ab * ac - bc * bc;\n    return det < 0;\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nThis doesn't work. Try it with the input `[1,2,3]`.\n<|/ c |>\n<| c |>\n\
    It works. I tested it with the input `[1,2,3]`.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with the input `[1,2,3]`.\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it with the input `[1,2,3]`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with\
    \ the input `[1,2,3]`.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    var ab = a -\
    \ b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=0 |>\n<code>", "    var ab = a - b;\n    var ac =\
    \ a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n    if(det < 0){\n\
    \        return false;\n    }\n    var sq = ab*ab + ac*ac;\n    var det = ab*ac\
    \ - bc*bc;\n    if(sq > 0){\n        var root = (det + sq)/(2*sq);\n        return\
    \ root >= 0 && root <= 1;\n    }\n    return false;\n}\n", "    if (Math.abs(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2)) ) < 0.00001){\n        return true;\n    }\n    return\
    \ false;\n}\n</code>\n<|/ a tags=javascript,trigonometry,geometry |>\n<| c |>\n\
    This doesn't work when all three sides are equal, e.g. `right_angle_triangle(1,1,1)`\
    \ returns `false`, but `right_angle_triangle(1,1,2)` returns `true`.\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting it. Try it yourself.\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works. I guess I misunderstood your comment\
    \ about \"all three sides are equal\". My apologies.\n<|/ c |>\n<| c |>\nYeah,\
    \ I misunderstood your comment about \"all three sides are equal\". My apologies.\
    \ I thought you meant that `right_angle_triangle(1,1,1)` should return `true`,\
    \ but `right_angle_triangle(1,1,2)` should return `false`. But I see now that\
    \ you're saying that `right_angle_triangle(1,1,1)` should return `false`, but\
    \ `right_angle_triangle(1,1,2)` should return `true`. Sorry about that. :)\n<|/\
    \ c |>\n<| c |>\nNo problem. I'm glad you found it helpful.\n<|/ c |>\n<| a tags=javascript,trigonometry,geometry\
    \ |>\n<code>", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n    var\
    \ c1 = Math.abs(c);\n    var angle1 = Math.acos((a1 * b1 + c1 * a1) / 2);\n  \
    \  var angle2 = Math.acos((a1 * c1 + c1 * a1) / 2);\n    return angle1 === angle2;\n\
    }\n</code>\n<|/ a tags=javascript,geometry |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true`, but `right_angle_triangle(1,1,2)` returns `false`. See [this\
    \ fiddle](https://jsfiddle.net/k3yLg9y5/).\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ that out. I fixed the code by adding `Math.PI/2` to the `angle1` and `angle2`\
    \ calculations.\n<|/ c |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true`, but `right_angle_triangle(1,1,2)` returns `false`. See [this\
    \ fiddle](https://jsfiddle.net/k3yLg9y5/).\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ that out. I fixed the code by adding `Math.PI/2` to the `angle1` and `angle2`\
    \ calculations.\n<|/ c |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true`, but `right_angle_triangle(1,1,2)` returns `false`. See [this\
    \ fiddle](https://jsfiddle.net/k3yLg9y5/).\n<|/ c |>\n<| a tags=javascript,geometry\
    \ |>\nThe code below is based on the answer by but uses Math.acos instead of Math.atan2.\n\
    <code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ det = ab * ac - bc * bc;\n    if(det < 0){\n        return false;\n    }\n \
    \   var s = Math.sqrt(ab * ab + ac * ac + bc * bc);\n    var angle = Math.acos(ab\
    \ / s);\n    var is_right_angle = (angle <= Math.PI/2);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't answer the question. He wants\
    \ to know if two sides form a right angled triangle, not if two points are on\
    \ a right angled triangle.\n<|/ c |>\n<| c |>\nI believe this answer is correct.\
    \ He wants to know if two sides form a right angled triangle, not if two points\
    \ are on a right angled triangle.\n<|/ c |>\n<| c |>\nThis answer is correct.\
    \ He wants to know if two sides form a right angled triangle, not if two points\
    \ are on a right angled triangle.\n<|/ c |>\n<| c |>\nThis answer is correct.\
    \ He wants to know if two sides form a right angled triangle, not if two points\
    \ are on a right angled triangle.\n<|/ c |>\n<| c |>\nThis answer is correct.\
    \ He wants to know if two sides form a right angled triangle, not if two points\
    \ are on a right angled triangle.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acbc = ac * bc;\n\
    \    var abbc = ab * bc;\n    var acab = ac * ab;\n    var abac = ab * ac;\n \
    \   return (abbc + acab + acbc) == abac;\n}\n", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac);\n\
    \    var is_right_angle = Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a tags=javascript,math |>\n<| c |>\nThis doesn't work. `right_angle_triangle(0,0,0)`\
    \ returns `true` instead of `false`.\n<|/ c |>\n<| c |>\nIt works fine for me.\
    \ Can you give an example where it doesn't?\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ for `right_angle_triangle(0,0,0)` because `ab` is `0` and `ac` is `0`, so `Math.abs(ab)`\
    \ is `0` and `Math.abs(ac)` is `0`, so `Math.abs(ab) > Math.abs(ac)` is `true`.\n\
    <|/ c |>\n<| c |>\nI see what you mean. I've updated my answer to fix it.\n<|/\
    \ c |>\n<| c |>\nI see what you mean. I've updated my answer to fix it.\n<|/ c\
    \ |>\n<| a dscore=5 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n \
    \   var bc = b - c;\n    var acbc = ac * bc;\n    var abbc = ab * bc;\n    return\
    \ (abbc == acbc || Math.abs(abbc) ===  Math.abs(acbc));\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=javascript,geometry,math |>\n<code>", "\tvar a1 = Math.abs(a);\n\
    \tvar b1 = Math.abs(b);\n\tvar c1 = Math.abs(c);\n\tif(a1 == b1 && b1 == c1){\n\
    \t\treturn true;\n\t}\n\tif(a1 == c1 && b1 == a1){\n\t\treturn true;\n\t}\n\t\
    if(a1 == b1 && c1 == a1){\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "   \
    \ var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acb = ac\
    \ * bc;\n    var abc = ab * bc;\n    var acbc = acb * bc;\n    var abbc = abb\
    \ * bc;\n    return (abbc > acbc && abbc > abc && acbc > abc);\n}\n</code>\n<|/\
    \ a tags=javascript,math |>\n<| c |>\nThis doesn't work. Try it with the triangle\
    \ `[1, 1, 1]`\n<|/ c |>\n<| c |>\nIt works. I tested it with the triangle `[1,\
    \ 1, 1]`. What do you mean by \"doesn't work\"?\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for `[1, 1, 1]`\n<|/ c |>\n<| c |>\nIt works for me. Try it with the triangle\
    \ `[1, 1, 1]`\n<|/ c |>\n<| c |>\nIt works for me too. Try it with the triangle\
    \ `[1, 1, 1]`\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    var ab = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n    var ac = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n\
    \    var bc = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n    return ((ab ==\
    \ ac) && (bc > ab));\n}\n", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n\
    \    var c1 = Math.abs(c);\n    var a2 = a1 + b1;\n    var b2 = b1 + c1;\n   \
    \ var c2 = c1 + a1;\n    return a2 > b2 && a2 > c2 || b2 > c2 || c2 > a2;\n}\n\
    </code>\n<|/ a tags=javascript,geometry,math |>\n<| c |>\nThis doesn't work. Try\
    \ it with `a = 3, b = 4, c = 5`.\n<|/ c |>\n<| c |>\nIt does work. Try it with\
    \ `a = 3, b = 4, c = 5`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `a =\
    \ 3, b = 4, c = 5`\n<|/ c |>\n<| c |>\nIt does work. Try it with `a = 3, b = 4,\
    \ c = 5`\n<|/ c |>\n<| c |>\nIt does work. Try it with `a = 3, b = 4, c = 5`\n\
    <|/ c |>\n<| a tags=javascript,geometry,math |>\nThe other answers here are all\
    \ correct, but they don't explain why they work.\nThe reason why they work is\
    \ that they use triangle inequalities and they don't use any trig functions. \n\
    The triangle inequalities are as follows:\n<code>\na <= b + c <= d\na <= b + c\
    \ <= d\na <= b + c <= d\n</code>\nThe inequalities are equivalent to:\n<code>\n\
    a <= (b + c) <= d\na <= (b + c) <= d\na <= (b + c) <= d\n</code>\nThe inequalities\
    \ are equivalent to:\n<code>\na <= (b + c) <= d\na <= (b + c) <= d\na <= (b +\
    \ c) <= d\n</code>\nThe inequalities are equivalent to:\n<code>\na <= (b + c)\
    \ <= d\na <= (b + c) <= d\na <= (b + c) <= d\n</code>\nThe inequalities are equivalent\
    \ to:\n<code>\na <= (b + c) <= d\na <= (b + c) <= d\na <= (b + c) <= d\n</code>\n\
    The inequalities are equivalent to:\n<code>\na <= (b + c) <= d\na <= (b + c) <=\
    \ d\na <= (b + c) <= d\n</code>\nThe inequalities are equivalent to:\n<code>\n\
    a <= (b + c) <= d\na <= (b + c) <= ", "    var ab = a - b;\n    var ac = a - c;\n\
    \    var bc = b - c;\n    var acbc = ac * bc;\n    var abbc = ab * bc;\n    return\
    \ (abbc == acbc || abbc == -acbc || acbc == -abbc);\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't answer the question, which is about a triangle with\
    \ sides a, b and c.\n<|/ c |>\n<| c |>\nThe question was about a triangle with\
    \ sides a, b and c. The answer was to find if there is a triangle with sides a,\
    \ b and c that is a right angle triangle. Which is what the code does. I believe\
    \ my answer is correct. Did you downvote my answer?\n<|/ c |>\n<| c |>\nThe question\
    \ was about a triangle with sides a, b and c. The answer was to find if there\
    \ is a triangle with sides a, b and c that is a right angle triangle. Which is\
    \ what the code does. I believe my answer is correct. Did you downvote my answer?\n\
    <|/ c |>\n<| c |>\nThe question was about a triangle with sides a, b and c. The\
    \ answer was to find if there is a triangle with sides a, b and c that is a right\
    \ angle triangle. Which is what the code does. I believe my answer is correct.\
    \ Did you downvote my answer?\n<|/ c |>\n<| c |>\nThe question was about a triangle\
    \ with sides a, b and c. The answer was to find if there is a triangle with sides\
    \ a, b and c that is a right angle triangle. Which is what the code does. I believe\
    \ my answer is correct. Did you downvote my answer?\n<|/ c |>\n<| a tags=math,geometry,javascript\
    \ |>\n<code>", "  var ab = a - b;\n  var ac = a - c;\n  var bc = b - c;\n  var\
    \ abc = ab + ac;\n  var bca = b + ca;\n  var cab = ac + bc;\n  var acb = ac +\
    \ bc;\n  var abc = ab + bc;\n  var acb = ac + ab;\n  var bca = b + ca;\n  var\
    \ cab = ac + bc;\n  var abc = ab + bc;\n  var acb = ac + ab;\n  var bca = b +\
    \ ca;\n  var cab = ac + bc;\n  var abc = ab + bc;\n  var acb = ac + ab;\n  var\
    \ bca = b + ca;\n  var cab = ac + bc;\n  var abc = ab + bc;\n  var acb = ac +\
    \ ab;\n  var bca = b + ca;\n  var cab = ac + bc;\n  var abc = ab + bc;\n  var\
    \ acb = ac + ab;\n  var bca = b + ca;\n  var cab = ac + bc;\n  var abc = ab +\
    \ bc;\n  var acb = ac + ab;\n  var bca = b + ca;\n  var cab = ac + bc;\n  var\
    \ abc = ab + bc;\n  var acb = ac + ab;\n  var bca = b + ca;\n  var cab = ac +\
    \ bc;\n  var abc = ab + bc;\n  var acb = ac + ab;\n  var bca = b + ca;\n  var\
    \ cab = ac + bc;\n  var abc = ab + bc;\n  var acb = ac + ab;\n  var bca = b +\
    \ ca;\n  var cab = ac + bc;\n  var abc = ab + bc;\n  var acb = ac + ab;\n  var\
    \ bca = b + ca;\n  var cab = ac + bc;\n  var abc = ab + bc;\n  var acb = ac +\
    \ ab;\n  var bca = b + ca;\n  var cab = ac + bc;\n  var abc = ab + bc;\n  var\
    \ acb = ac + ab;\n  var bca = b + ca;\n  var cab = ac + bc;\n  var abc = ab +\
    \ bc;\n  var acb = ac + ab;\n  var bca = b + ca;\n  var cab = ac + bc;\n  var\
    \ abc = ab + bc;\n  var acb = ac + ab;\n  var bca = b + ca;\n  var cab = ac +\
    \ bc;\n  var abc = ab + bc;\n  var acb = ac + ", "\tif((Math.abs(a) + Math.abs(b)\
    \ + Math.abs(c))%2 === 0){\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "  var\
    \ ab = a - b;\n  var ac = a - c;\n  var bc = b - c;\n  var det = ab*ac - bc*bc;\n\
    \  return det > 0;\n}\n</cell>\n<cell>", "    var a1 = Math.abs(a);\n    var b1\
    \ = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle1 = Math.acos((a1 *\
    \ b1 + c1 * b1) / 2);\n    var angle2 = Math.acos((a1 * c1 + c1 * c1) / 2);\n\
    \    return (angle1 - angle2 > Math.PI);\n}\n", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    return (ab > ac) && (bc > ac);\n}\n",
  "\tif((Math.abs(a) + Math.abs(b) + Math.abs(c)) % 2 != 0){\n\t\treturn false;\n\t\
    }\n\tif((Math.abs(a) + Math.abs(b)) % 2 != 0){\n\t\treturn false;\n\t}\n\tif((Math.abs(a)\
    \ + Math.abs(c)) % 2 != 0){\n\t\treturn false;\n\t}\n\tif((Math.abs(b) + Math.abs(c))\
    \ % 2 != 0){\n\t\treturn false;\n\t}\n\treturn true;\n}\n", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var a2 = Math.abs(a1\
    \ - b1);\n    var b2 = Math.abs(b1 - c1);\n    var c2 = Math.abs(c1 - a1);\n \
    \   return (a1 + b1 + c1) === (a2 + b2 + c2);\n}\n", "    var ab = a - b;\n  \
    \  var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n    var abc =\
    \ ab * bc;\n    var acbc = acb * bc;\n    var abbc = abb * bc;\n    var acbcbc\
    \ = acbcb * bc;\n    var abcbc = abcb * bc;\n    var acbcbcb = acbcbc * bc;\n\
    \    var abcbcb = abcbc * bc;\n    var acbcbcbc = acbcbcb * bc;\n    var abcbcbc\
    \ = abcbcb * bc;\n    var acbcbcbcb = acbcbcbc * bc;\n    var abcbcbcb = abcbcbc\
    \ * bc;\n    var acbcbcbcbc = acbcbcbcb * bc;\n    var abcbcbcbc = abcbcbcb *\
    \ bc;\n    var acbcbcbcbcb = acbcbcbcbc * bc;\n    var abcbcbcbcb = abcbcbcbc\
    \ * bc;\n    var acbcbcbcbcbc = acbcbcbcbcb * bc;\n    var abcbcbcbcbc = abcbcbcbcb\
    \ * bc;\n    var acbcbcbcbcbcb = acbcbcbcbcbc * bc;\n    var abcbcbcbcbcb = abcbcbcbcbc\
    \ * bc;\n    var acbcbcbcbcbcbc = acbcbcbcbcbc * bc;\n    var abcbcbcbcbcbc =\
    \ abcbcbcbcbc * bc;\n    var acbcbcbcbcbcbcb = acbcbcbcbcbcbc * bc;\n    var abcbcbcbcbcbcb\
    \ = abcbcbcbcbcbc * bc;\n    var acbcbcbcbcbcbcbc = acbcbcbcbcbcbc * bc;\n   \
    \ var abcbcbcbcbcbcbc = abcbcbcbcbcbc * bc;\n    var acbcbcbcbcbcbcbcb = acbcbcbcbcbcbcbc\
    \ * bc;\n    var abcbcbcbcbcbcbcb = abcbcbcbcbcbcbc * bc;\n    var acbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbc * bc;\n    var abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbc * bc;\n\
    \    var acb", "\tif((b - a) * (c - b) <= 0){\n\t\treturn false;\n\t}\n\tif((b\
    \ - a) * (a + b) <= 0){\n\t\treturn false;\n\t}\n\tif((c - a) * (a + b) <= 0){\n\
    \t\treturn false;\n\t}\n\tif((c - a) * (c - b) <= 0){\n\t\treturn false;\n\t}\n\
    \treturn true;\n}\n", "    var ab = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\
    \    var ac = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n    var bc = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n    return ((ab > ac) && (ab > bc));\n}\n", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac\
    \ - bc * bc;\n    if(det < 0){\n        return false;\n    }\n    var s = Math.sqrt(ab\
    \ * ab + ac * ac + bc * bc + 1);\n    return (s > 0.001);\n}\n", "    var ab =\
    \ a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc\
    \ * bc;\n    if(det > 0){\n        return true;\n    }\n    return false;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true` but `right_angle_triangle(1,1,2)` returns `false`\n<|/ c |>\n\
    <| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis\
    \ still doesn't work. `right_angle_triangle(1,1,1)` returns `true` but `right_angle_triangle(1,1,2)`\
    \ returns `false`\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it\
    \ out.\n<|/ c |>\n<| c |>\nThis still doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true` but `right_angle_triangle(1,1,2)` returns `false`\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var\
    \ bc = b - c;\n    var det = ab * ac - bc * bc;\n    return det < 0;\n}\n</code>\n\
    <|/ a tags=javascript,geometry |>\n<| c |>\nThis doesn't work. Try it with the\
    \ triangle `[0,0,0]` and `[0,0,1]`\n<|/ c |>\n<| c |>\nIt does work. Try it with\
    \ the triangle `[0,0,0]` and `[0,0,1]`\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ with the triangle `[0,0,0]` and `[0,0,1]`\n<|/ c |>\n<| c |>\nIt does work.\
    \ Try it with the triangle `[0,0,0]` and `[0,0,1]`\n<|/ c |>\n<| c |>\nIt does\
    \ work. Try it with the triangle `[0,0,0]` and `[0,0,1]`\n<|/ c |>\n<| a tags=javascript,geometry\
    \ |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var det = ab*ac - bc*bc;\n    if (Math.abs(det) < 0.000000001){\n       \
    \ return false;\n    }\n    var s = Math.sqrt(ab*ab + ac*ac + bc*bc);\n    var\
    \ t = (bc-ac)/s;\n    var u = (ab+ac)/s;\n    var v = (bc+ab)/s;\n    var x =\
    \ t*(u-v);\n    var y = (t*v - u*v)/2;\n    var z = u*v*2;\n    var angle = Math.acos(z/Math.sqrt(x*x\
    \ + y*y + z*z));\n    if (angle > 0){\n        return true;\n    }\n    return\
    \ false;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var is_right_angle = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n\
    \    return is_right_angle;\n}\n</code>\n<|/ a tags=javascript,math |>\n<| c |>\n\
    This doesn't work. `right_angle_triangle(1,1,1)` returns `false`, but `right_angle_triangle(1,1,2)`\
    \ returns `true`.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it\
    \ out. :)\n<|/ c |>\n<| a tags=javascript,math |>\n<code>", "    var ab = a -\
    \ b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n", "    var ab\
    \ = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n\
    \    if(det < 0){\n        return false;\n    }\n    var s = Math.sqrt(ab*ab +\
    \ ac*ac);\n    var t = Math.sqrt(bc*bc + bc*bc);\n    var u = ac / s;\n    var\
    \ v = bc / t;\n    var w = a * v - b * u;\n    if(w < 0){\n        return false;\n\
    \    }\n    return true;\n}\n", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n\
    \    var c1 = Math.abs(c);\n    var a2 = a1 + b1;\n    var b2 = b1 + c1;\n   \
    \ var c2 = c1 + a1;\n    return a2 > b2 && a2 > c2;\n}\n", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var a2 = a1 - (a1 *\
    \ b1 / c1);\n    var b2 = b1 - (b1 * c1 / a1);\n    var c2 = c1 - (c1 * a1 / b1);\n\
    \    return a2 >= 0 && b2 >= 0 && c2 >= 0;\n}\n</code>\n<|/ a tags=javascript,geometry,math\
    \ |>\n<| c |>\nThis does not work. Try it with the triangle `(-10, -10, 10)`\n\
    <|/ c |>\n<| c |>\nI believe this should work. Try it with the triangle `(-10,\
    \ -10, 10)`\n<|/ c |>\n<| c |>\nIt does work. Try it with the triangle `(-10,\
    \ -10, 10)`\n<|/ c |>\n<| c |>\nI believe this should work. Try it with the triangle\
    \ `(-10, -10, 10)`\n<|/ c |>\n<| c |>\nI believe this should work. Try it with\
    \ the triangle `(-10, -10, 10)`\n<|/ c |>\n<| a tags=javascript,geometry,math\
    \ |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var det = ab*ac - bc*bc;\n    if(det < 0){\n        return false;\n    }\n\
    \    var s = Math.sqrt(ab*ab + ac*ac);\n    var t = Math.sqrt(bc*bc + bc*bc);\n\
    \    var u = ac/s;\n    var v = bc/s\n    var w = ab/t;\n    var x = u*w;\n  \
    \  var y = v*w;\n    var z = u*v;\n    var a1 = Math.sqrt(x*x + y*y);\n    var\
    \ a2 = Math.sqrt(z*z + w*w);\n    return a1 == a2;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question. OP asked for a **function** that\
    \ returns true if the triangle is right-angled, not for a **boolean** that returns\
    \ true if the triangle is right-angled.\n<|/ c |>\n<| c |>\nThe OP asked for a\
    \ function that returns true if the triangle is right-angled, not for a boolean\
    \ that returns true if the triangle is right-angled.\n<|/ c |>\n<| c |>\nThe OP\
    \ asked for a function that returns true if the triangle is right-angled, not\
    \ for a boolean that returns true if the triangle is right-angled.\n<|/ c |>\n\
    <| c |>\nThe OP asked for a function that returns true if the triangle is right-angled,\
    \ not for a boolean that returns true if the triangle is right-angled.\n<|/ c\
    \ |>\n<| c |>\nThe OP asked for a function that returns true if the triangle is\
    \ right-angled, not for a boolean that returns true if the triangle is right-angled.\n\
    <|/ c |>\n<| a tags=javascript,geometry,trigonometry,math |>\n<code>", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    return (ab > ac)\
    \ && (bc > ac);\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc =\
    \ b - c;\n    var det = ab*ac - bc*bc;\n    if(det < 0){\n        return false;\n\
    \    }\n    var s = Math.sqrt(ab*ab + ac*ac + bc*bc);\n    var t = (bc-ac)/s;\n\
    \    var u = (ab+ac)/s;\n    var v = (bc+ab)/s;\n    return (u*v - v*u) < 0;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,geometry |>\n<code>", "  \
    \  var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n", "\tvar ab = a - b;\n\tvar ac = a - c;\n\tvar bc = b - c;\n\tvar is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac);\n\tvar is_right_angle = Math.abs(ab) > Math.abs(bc);\n\
    \treturn is_right_angle;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n  \
    \  var bc = b - c;\n    var det = ab * ac - bc * bc;\n    return det < 0;\n}\n",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac\
    \ - bc*bc;\n    if (Math.abs(det) < 0.000000001){\n        return false;\n   \
    \ }\n    var s = Math.sqrt(ab*ab + ac*ac + bc*bc);\n    var t = (bc-ac)/det;\n\
    \    var u = (ab+ac)/det;\n    var v = (bc+ab)/det;\n    if (t < 0 || t > 1 ||\
    \ u < 0 || u > 1 || v < 0 || v > 1){\n        return false;\n    }\n    return\
    \ true;\n}\n</code>\n<|/ a tags=javascript,math |>\n<| c |>\nThis doesn't seem\
    \ to work. `right_angle_triangle(1,1,1)` returns `true` but `right_angle_triangle(1,1,2)`\
    \ returns `false`\n<|/ c |>\n<| c |>\nI tested it and it works. I used the example\
    \ you provided. What are you testing it on?\n<|/ c |>\n<| c |>\nI tested it on\
    \ `right_angle_triangle(1,1,1)` returns `true` but `right_angle_triangle(1,1,2)`\
    \ returns `false`\n<|/ c |>\n<| c |>\nI tested it on `right_angle_triangle(1,1,1)`\
    \ returns `true` but `right_angle_triangle(1,1,2)` returns `false`\n<|/ c |>\n\
    <| c |>\nI tested it on `right_angle_triangle(1,1,1)` returns `true` but `right_angle_triangle(1,1,2)`\
    \ returns `false`\n<|/ c |>\n<| a tags=javascript,math |>\n<code>", "    var ab\
    \ = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac -\
    \ bc * bc;\n    return det < 0;\n}\n</code>\n<|/ a tags=javascript,geometry,math\
    \ |>\n<| c |>\nThis doesn't work if `a` is greater than `b`\n<|/ c |>\n<| c |>\n\
    It does work. `a` must be less than `b` for the triangle to be considered right-angled.\n\
    <|/ c |>\n<| c |>\nI meant that `a` must be less than `b` *and* `b` must be less\
    \ than `c`\n<|/ c |>\n<| c |>\nYes, that's what I meant. Sorry for the confusion.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if `a` is greater than `b`\n<|/ c |>\n<|\
    \ a dscore=5 |>\nThe shortest way is to use Pythagoras' theorem:\n<code>", " \
    \   if (Math.abs(Math.sin(a/180*Math.PI)) < Math.abs(Math.sin(b/180*Math.PI))\
    \ && Math.abs(Math.sin(b/180*Math.PI)) < Math.abs(Math.sin(c/180*Math.PI))){\n\
    \        return true;\n    }\n    return false;\n}\n", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n    return\
    \ det < 0;\n}\n", "    if (Math.abs(Math.sin(a)) < Math.abs(Math.sin(b)) && Math.abs(Math.sin(a))\
    \ < Math.abs(Math.sin(c))){\n        return true;\n    }\n    return false;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=javascript,geometry,trigonometry |>\n\
    <code>", "\tvar ab = a - b;\n\tvar ac = a - c;\n\tvar bc = b - c;\n\tvar abc =\
    \ ab + ac;\n\tvar bca = bc * ab;\n\tvar acb = ac * bc;\n\tvar abc = abc * bc;\n\
    \tvar acb = acb * ab;\n\treturn (abc >= acb) && (abc >= bca);\n}", "    var ab\
    \ = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n\
    \    if (det < 0){\n        return false;\n    }\n    var s = (bc*ac - ab*bc)/det;\n\
    \    var t = (ab*bc - ac*ab)/det;\n    return Math.abs(s) == Math.abs(t);\n}\n",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab + ac - bc) <= Math.sqrt(Math.pow(ab, 2) + Math.pow(ac, 2) + Math.pow(bc,\
    \ 2));\n    return is_right_angle;\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab\
    \ * ac - bc * bc;\n    return det < 0;\n}\n", "    var a1 = Math.abs(a);\n   \
    \ var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    if(a1 == b1 && b1 == c1){\n\
    \        return true;\n    }\n    if(a1 == c1 && c1 == b1){\n        return true;\n\
    \    }\n    if(a1 == b1){\n        return false;\n    }\n    if(a1 == c1){\n \
    \       return false;\n    }\n    if(b1 == c1){\n        return false;\n    }\n\
    \    if(a1 == b1 && b1 == c1){\n        return true;\n    }\n    if(a1 == c1 &&\
    \ c1 == b1){\n        return true;\n    }\n    if(a1 == b1){\n        return false;\n\
    \    }\n    if(a1 == c1){\n        return false;\n    }\n    if(b1 == c1){\n \
    \       return false;\n    }\n    if(a1 == b1 && b1 == c1){\n        return true;\n\
    \    }\n    if(a1 == c1 && c1 == b1){\n        return true;\n    }\n    if(a1\
    \ == b1){\n        return false;\n    }\n    if(a1 == c1){\n        return false;\n\
    \    }\n    if(b1 == c1){\n        return false;\n    }\n    if(a1 == b1 && b1\
    \ == c1){\n        return true;\n    }\n    if(a1 == c1 && c1 == b1){\n      \
    \  return true;\n    }\n    if(a1 == b1){\n        return false;\n    }\n    if(a1\
    \ == c1){\n        return false;\n    }\n    if(b1 == c1){\n        return false;\n\
    \    }\n    if(a1 == b1 && b1 == c1){\n        return true;\n    }\n    if(a1\
    \ == c1 && c1 == b1){\n        return true;\n    }\n    if(a1 == b1){\n      \
    \  return false;\n    }\n    if(a1 == c1){\n        return false;\n    }\n   \
    \ if(b1 == c1){\n        return false;\n    }\n    if(a1 == b1 && b1 == c1){\n\
    \        return true;\n    }\n    if(a1 == c1 && c1 == b1){\n        return true;\n\
    \    }\n    if(a1 == b1){\n        return false;\n    }\n    if(a1 == c1){\n \
    \       return false;\n    }\n    if(b1 == c1){\n        return false;\n    }\n\
    \    if(a1 == b1 && b1 == c1){\n        return true;\n    }\n    if(a1 == c1 &&\
    \ c1 == b1){\n        return true;\n    }\n    if(a1 == b1){\n        return false;\n\
    \    }\n    if(a1 == c1){\n        return false;\n    }\n    if(b1 == c1){\n \
    \       return false;\n    }\n    if(a1 == b1 && b1 == c1){\n        return true;\n\
    \    }\n    if(a1 == c1 && c1 == b1){\n        return true;\n    }\n    if(a1\
    \ == b1){\n        return false;\n    }\n    if(a1 == c1){\n        return false;\n\
    \    }\n    if", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n    var\
    \ c1 = Math.abs(c);\n    var angle = Math.acos((a1 * b1 + c1 * b1 - a1 * c1 -\
    \ c1 * a1) / 2);\n    return angle < Math.PI;\n}\n", "    var ab = a - b;\n  \
    \  var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=javascript,geometry,trigonometry |>\n\
    <code>", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n\
    \    var angle = Math.acos((a1*b1 + c1)/(a1*b1 + b1*c1));\n    return Math.abs(angle)\
    \ <= Math.PI/2;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if `a` is greater\
    \ than `b` or `b` is greater than `c`\n<|/ c |>\n<| c |>\nThis doesn't work if\
    \ `a` is greater than `b` or `b` is greater than `c`\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if `a` is greater than `b` or `b` is greater than `c`\n<|/ c |>\n\
    <| c |>\nThis doesn't work if `a` is greater than `b` or `b` is greater than `c`\n\
    <|/ c |>\n<| c |>\nThis doesn't work if `a` is greater than `b` or `b` is greater\
    \ than `c`\n<|/ c |>\n<| a dscore=5 |>\nThe shortest solution I found is this\
    \ one:\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return\
    \ is_right_angle;\n}\n", "    var ab = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n    var ac = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n    var bc =\
    \ Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n    return ((ab >= ac) && (bc >=\
    \ ab));\n}\n", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n    var\
    \ c1 = Math.abs(c);\n    var a2 = a1 + b1;\n    var b2 = b1 + c1;\n    var c2\
    \ = c1 + a1;\n    return a2 > b2 && a2 > c2 || b2 > c2 || c2 > a2;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't answer the question. OP asked for a way to determine\
    \ if three sides of a triangle are right angled, not if three sides form a right\
    \ angled triangle. Your code only checks if three sides are equal, which is not\
    \ the same thing.\n<|/ c |>\n<| c |>\nI see your point. But the OP asked for a\
    \ way to determine if three sides of a triangle are right angled, not if three\
    \ sides form a right angled triangle. Your code only checks if three sides are\
    \ equal, which is not the same thing.\n<|/ c |>\n<| c |>\nI see your point. But\
    \ the OP asked for a way to determine if three sides of a triangle are right angled,\
    \ not if three sides form a right angled triangle. Your code only checks if three\
    \ sides are equal, which is not the same thing.\n<|/ c |>\n<| c |>\nI see your\
    \ point. But the OP asked for a way to determine if three sides of a triangle\
    \ are right angled, not if three sides form a right angled triangle. Your code\
    \ only checks if three sides are equal, which is not the same thing.\n<|/ c |>\n\
    <| c |>\nI see your point. But the OP asked for a way to determine if three sides\
    \ of a triangle are right angled, not if three sides form a right angled triangle.\
    \ Your code only checks if three sides are equal, which is not the same thing.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\nvar a = Math.abs(Math.sqrt(Math.pow(x1,2)\
    \ + Math.pow(y1,2)));\nvar b = Math.abs(Math.sqrt(Math.pow(x2,2) + Math.pow(y2,2)));\n\
    var c = Math.abs(Math.sqrt(Math.pow(x3,2) + Math.pow(y3,2)));\nvar d = Math.abs(Math.sqrt(Math.pow(x4,2)\
    \ + Math.pow(y4,2)));\nvar e = Math.abs(Math.sqrt(Math.pow(x5,2) + Math.pow(y5,2)));\n\
    var f = Math.abs(Math.sqrt(Math.pow(x6,2) + Math.pow(y6,2)));\nvar g = Math.abs(Math.sqrt(Math.pow(x7,2)\
    \ + Math.pow(y7,2)));\nvar h = Math.abs(Math.sqrt(Math.pow(x8,2) + ", "\tvar ab\
    \ = a - b;\n\tvar ac = a - c;\n\tvar bc = b - c;\n\tvar det = ab * ac - bc * bc;\n\
    \treturn det < 0;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc\
    \ = b - c;\n    var det = ab * ac - bc * bc;\n    return det > 0;\n}\n</code>\n\
    <|/ a tags=javascript,math,geometry |>\n<| c |>\nThis doesn't seem to work. `right_angle_triangle(1,2,3)`\
    \ returns `true` when it should return `false`\n<|/ c |>\n<| c |>\nI believe this\
    \ answer is incorrect. `right_angle_triangle(1,2,3)` returns `true` when it should\
    \ return `false`\n<|/ c |>\n<| c |>\nI believe this answer is incorrect. `right_angle_triangle(1,2,3)`\
    \ returns `true` when it should return `false`\n<|/ c |>\n<| c |>\nThis answer\
    \ is not correct. `right_angle_triangle(1,2,3)` returns `false` when it should\
    \ return `true`.\n<|/ c |>\n<| c |>\nI believe this answer is incorrect. `right_angle_triangle(1,2,3)`\
    \ returns `true` when it should return `false`\n<|/ c |>\n<| a dscore=5 |>\n<code>",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acb = ac\
    \ * bc;\n    var abc = ab * bc;\n    return Math.abs(acb - abc) < 0.000001;\n\
    }\n</code>\n<|/ a tags=javascript,geometry |>\n<| c |>\nThis doesn't work. `right_angle_triangle(0,0,0)`\
    \ returns true.\n<|/ c |>\n<| c |>\nI didn't test it but I think it works. I tested\
    \ it on http://www.w3schools.com/js/tryit.asp?filename=tryjs_triangle_rightangle\n\
    <|/ c |>\n<| c |>\nIt doesn't work for `right_angle_triangle(0,0,0)` because `acb\
    \ - abc` is `0`.\n<|/ c |>\n<| c |>\nI tested it on http://www.w3schools.com/js/tryit.asp?filename=tryjs_triangle_rightangle\
    \ and it works. I edited my answer to add some explanation.\n<|/ c |>\n<| c |>\n\
    I tested it on http://www.w3schools.com/js/tryit.asp?filename=tryjs_triangle_rightangle\
    \ and it works. I edited my answer to add some explanation.\n<|/ c |>\n<| a tags=javascript,geometry\
    \ |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var det = ab * ac - bc * bc;\n    if (det < 0){\n        return false;\n\
    \    }\n    var s = Math.sqrt(ab * ab + ac * ac + bc * bc + 1);\n    return Math.abs(det\
    \ - s) <= 0.1;\n}\n</code>\n<|/ a tags=javascript,geometry,trigonometry,math |>\n\
    <| c |>\nThis doesn't work if one of the angles is 180 degrees or less.\n<|/ c\
    \ |>\n<| c |>\nI added a fix for that.\n<|/ c |>\n<| c |>\nThis doesn't work if\
    \ one of the angles is 180 degrees or less.\n<|/ c |>\n<| c |>\nI added a fix\
    \ for that.\n<|/ c |>\n<| c |>\nThis doesn't work if one of the angles is 180\
    \ degrees or less.\n<|/ c |>\n<| a dscore=5 |>\nThe shortest way is to use Pythagoras'\
    \ theorem. \n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc =\
    \ b - c;\n    var det = ab * ac - bc * bc;\n    if (det < 0){\n        return\
    \ false;\n    }\n    var sq = ab * ab + ac * ac;\n    var det = ab * ac - bc *\
    \ bc;\n    var sq = ab * ab + ac * ac;\n    return det === sq;\n}\n</code>\n<|/\
    \ a tags=javascript,geometry,math |>\n<| c |>\nThis doesn't work. Try it with\
    \ the triangle `(-5, -5, 5)` - it returns `true` when it should be `false`.\n\
    <|/ c |>\n<| c |>\n: It returns `false` because `(-5, -5, 5)` is an equilateral\
    \ triangle. `(-5, -5, -5)` would be a right-angled triangle.\n<|/ c |>\n<| c |>\n\
    : I see what you mean. I've fixed my answer.\n<|/ c |>\n<| c |>\n: I've fixed\
    \ my answer, and added a link to a JavaScript implementation of this algorithm.\n\
    <|/ c |>\n<| c |>\n: I've added a link to a JavaScript implementation of this\
    \ algorithm.\n<|/ c |>\n<| a tags=javascript,geometry,math |>\n<code>", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n\
    }\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ is_right_angle = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n\
    \    return is_right_angle;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n\
    \    var bc = b - c;\n    var det = ab * ac - bc * bc;\n    return det < 0;\n\
    }\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ is_right_angle = Math.abs(ab - ac) <= Math.abs(bc - ab);\n    return is_right_angle;\n\
    }\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ det = ab*ac - bc*bc;\n    return det < 0;\n}\n", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n    return\
    \ det < 0;\n}\n", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n    var\
    \ c1 = Math.abs(c);\n    var angle = Math.acos((a1*a1 + b1*b1 + c1*c1)/(2*a1*b1));\n\
    \    return Math.abs(angle) <= Math.PI/2;\n}\n", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac)\
    \ && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't answer the question at all. You're just\
    \ checking if the triangle is right angled, not whether it has a right angled\
    \ side.\n<|/ c |>\n<| c |>\nI believe this answer does answer the question. He\
    \ wants to know if the triangle is right angled, not whether it has a right angled\
    \ side.\n<|/ c |>\n<| c |>\nThe question asks whether the triangle is right angled,\
    \ not whether it has a right angled side.\n<|/ c |>\n<| c |>\nThis answer doesn't\
    \ answer the question. The question asks whether the triangle is right angled,\
    \ not whether it has a right angled side.\n<|/ c |>\n<| c |>\nThe question asks\
    \ whether the triangle is right angled, not whether it has a right angled side.\n\
    <|/ c |>\n<| a tags=javascript,geometry |>\n<code>", "    var ab = a - b;\n  \
    \  var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n  \
    \  return det < 0;\n}\n</cell>\n<cell>", "    var ab = a - b;\n    var ac = a\
    \ - c;\n    var bc = b - c;\n    return (ab > ac && ab > bc);\n}\n", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a tags=javascript,geometry |>\n<| c |>\nThis doesn't answer the\
    \ question. OP wants to know if two triangles form a right angled triangle, not\
    \ if two points are on a right angled triangle.\n<|/ c |>\n<| c |>\nThe question\
    \ was \"Given the lengths of the three sides of a triangle. Return True if the\
    \ three sides form a right-angled triangle, False otherwise.\"\n<|/ c |>\n<| c\
    \ |>\nThe question was \"Given the lengths of the three sides of a triangle. Return\
    \ True if the three sides form a right-angled triangle, False otherwise.\"\n<|/\
    \ c |>\n<| c |>\nThe question was \"Given the lengths of the three sides of a\
    \ triangle. Return True if the three sides form a right-angled triangle, False\
    \ otherwise.\"\n<|/ c |>\n<| c |>\nThe question was \"Given the lengths of the\
    \ three sides of a triangle. Return True if the three sides form a right-angled\
    \ triangle, False otherwise.\"\n<|/ c |>\n<| a tags=javascript,geometry |>\n<code>",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab\
    \ * ac - bc * bc;\n    return det < 0;\n}\n", "    var ab = a - b;\n    var ac\
    \ = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n    if (det\
    \ < 0){\n        return false;\n    }\n    var s = (-b + Math.sqrt(det))/(2 *\
    \ a);\n    var t = (-b - Math.sqrt(det))/(2 * a);\n    return Math.abs(s * (s\
    \ - t) + t) < 0.1;\n}\n</code>\n<|/ a tags=javascript,geometry,math |>\n<| c |>\n\
    This doesn't work. Try it with the points `(0,0), (1,0), (1,1)`\n<|/ c |>\n<|\
    \ c |>\nIt works. I tested it with the points you mentioned. The function returns\
    \ true for those points.\n<|/ c |>\n<| c |>\nI tested it with the points you mentioned.\
    \ The function returns true for those points. I tested it with the points you\
    \ mentioned. The function returns true for those points. I tested it with the\
    \ points you mentioned. The function returns true for those points. I tested it\
    \ with the points you mentioned. The function returns true for those points. I\
    \ tested it with the points you mentioned. The function returns true for those\
    \ points. I tested it with the points you mentioned. The function returns true\
    \ for those points. I tested it with the points you mentioned. The function returns\
    \ true for those points. I tested it with the points you mentioned. The function\
    \ returns true for those points. I tested it with the points you mentioned. The\
    \ function returns true for those points. I tested it with the points you mentioned.\
    \ The function returns true for those points. I tested it with the points you\
    \ mentioned. The function returns true for those points. I tested it with the\
    \ points you mentioned. The function returns true for those points. I tested it\
    \ with the points you mentioned. The function returns true for those points. I\
    \ tested it with the points you mentioned. The function returns true for those\
    \ points. I tested it with the points you mentioned. The function returns true\
    \ for those points. I tested it with the points you mentioned. The function returns\
    \ true for those points. I tested it with the points you mentioned. The function\
    \ returns true for those points. I tested it with the points you mentioned. The\
    \ function returns true for those points. I tested it with the points you mentioned.\
    \ The function returns true for those points. I tested it with the points you\
    \ mentioned. The function returns true for those points. I tested it with the\
    \ points you mentioned. The function returns true for those points. I tested it\
    \ with the points you mentioned. The function returns true for those points. I\
    \ tested ", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n \
    \   var is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return\
    \ is_right_angle;\n}\n", "\tvar ab = a - b;\n\tvar ac = c - a;\n\tvar bc = b -\
    \ c;\n\tvar abc = ab + ac;\n\tvar bca = bc + ab;\n\tvar abca = abc - ac;\n\treturn\
    \ (abca >= bca) && (abca <= ab);\n}\n", "    if (Math.abs(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2)))<=0.1){\n\
    \        return true;\n    }\n    return false;\n}\n", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    return (ab > ac && ab > bc);\n\
    }\n</code>\n<|/ a tags=javascript,geometry |>\n<| c |>\nThis doesn't work. Try\
    \ it with the triangle `[10, 10, 10]`.\n<|/ c |>\n<| c |>\nI fixed the problem\
    \ you mentioned. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=2 |>\n<code>",
  "\tvar ab = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\tvar ac = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n\tvar bc = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\
    \treturn (ab + ac - bc) == 0;\n}\n", "    var a1 = Math.abs(a);\n    var b1 =\
    \ Math.abs(b);\n    var c1 = Math.abs(c);\n    var a2 = a1 - (a1*a1);\n    var\
    \ b2 = b1 - (b1*b1);\n    var c2 = c1 - (c1*c1);\n    return (a2 + b2 <= c2);\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know if three sides form a right angled triangle, not if they form a right\
    \ angled triangle with one side longer than the other.\n<|/ c |>\n<| c |>\nI believe\
    \ this answer is correct. OP wants to know if three sides form a right angled\
    \ triangle, not if they form a right angled triangle with one side longer than\
    \ the other.\n<|/ c |>\n<| c |>\nYes, I believe this is correct. OP wants to know\
    \ if three sides form a right angled triangle, not if they form a right angled\
    \ triangle with one side longer than the other. My answer was posted before OP\
    \ clarified what he meant by \"right angled triangle\".\n<|/ c |>\n<| c |>\nI\
    \ believe this answer is correct. OP wants to know if three sides form a right\
    \ angled triangle, not if they form a right angled triangle with one side longer\
    \ than the other. My answer was posted before OP clarified what he meant by \"\
    right angled triangle\".\n<|/ c |>\n<| c |>\nI believe this answer is correct.\
    \ OP wants to know if three sides form a right angled triangle, not if they form\
    \ a right angled triangle with one side longer than the other. My answer was posted\
    \ before OP clarified what he meant by \"right angled triangle\".\n<|/ c |>\n\
    <| a tags=javascript,trigonometry |>\n<code>", "    var ab = a - b;\n    var ac\
    \ = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac)\
    \ + Math.abs(bc);\n    return is_right_angle;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    This doesn't work. Try it with `right_angle_triangle(1,1,1)`.\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works fine for me. Can you give an example where it doesn't\
    \ work?\n<|/ c |>\n<| c |>\nIt doesn't work for `right_angle_triangle(1,1,1)`.\
    \ Try it with `right_angle_triangle(1,1,2)`.\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works fine for me. Can you give an example where it doesn't work?\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work for `right_angle_triangle(1,1,2)`. Try it with\
    \ `right_angle_triangle(1,2,1)`.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acab = ac * ab;\n\
    \    var bcac = bc * ac;\n    var abac = ab * ac;\n    return Math.abs(acab -\
    \ bcac) < 0.000001 && Math.abs(abac - ab) < 0.000001;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=0 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n \
    \   var bc = b - c;\n    var det = ab * ac - bc * bc;\n    return det < 0;\n}\n\
    </code>\n<|/ a tags=javascript,math |>\n<| c |>\nThis doesn't answer the question.\
    \ He wants to know if a triangle is right angled, not whether a triangle is right\
    \ angled.\n<|/ c |>\n<| c |>\nThe question was edited after I answered it, so\
    \ I guess I missed the edit time. Anyway, the answer still stands.\n<|/ c |>\n\
    <| c |>\nThe question was edited after I answered it, so I guess I missed the\
    \ edit time. Anyway, the answer still stands.\n<|/ c |>\n<| c |>\nThe question\
    \ was edited after I answered it, so I guess I missed the edit time. Anyway, the\
    \ answer still stands.\n<|/ c |>\n<| c |>\nThe question was edited after I answered\
    \ it, so I guess I missed the edit time. Anyway, the answer still stands.\n<|/\
    \ c |>\n<| a dscore=4 |>\nThe simplest way is to check whether a triangle is right\
    \ angled or not by comparing the sides lengths. \n<code>", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n    if(det\
    \ < 0){\n        return false;\n    }\n    var s = Math.sqrt(ab*ab + ac*ac + bc*bc);\n\
    \    return Math.abs(det - s) <= 0.1;\n}\n</code>\n<|/ a tags=javascript,geometry,math\
    \ |>\n<| c |>\nThis doesn't seem to work. `right_angle_triangle(0,0,0)` returns\
    \ `true` but `right_angle_triangle(1,1,1)` returns `false`\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it before posting. Did you try it yourself?\n<|/ c |>\n\
    <| c |>\nYes, I did. `right_angle_triangle(0,0,0)` returns `true` but `right_angle_triangle(1,1,1)`\
    \ returns `false`\n<|/ c |>\n<| c |>\nYes, I did. `right_angle_triangle(0,0,0)`\
    \ returns `true` but `right_angle_triangle(1,1,1)` returns `false`\n<|/ c |>\n\
    <| c |>\nYes, I did. `right_angle_triangle(0,0,0)` returns `true` but `right_angle_triangle(1,1,1)`\
    \ returns `false`\n<|/ c |>\n<| a dscore=5 |>\nThe other answers here are all\
    \ correct, but they don't explain why they work.\nThe reason is that triangle\
    \ inequalities are symmetric. Thus, if A + B > C, then A + C > B + C. Thus, if\
    \ A + B > C, then A + C > B + C. Thus, if A + B > C, then A + C > B + C. Thus,\
    \ if A + B > C, then A + C > B + C. Thus, if A + B > C, then A + C > B + C. Thus,\
    \ if A + B > C, then A + C > B + C. Thus, if A + B > C, then A + C > B + C. Thus,\
    \ if A + B > C, then A + C > B + C. Thus, if A + B > C, then A + C > B + C. Thus,\
    \ if A + B > C, then A + C > B + C. Thus, if A + B > C, then A + C > B + C. Thus,\
    \ if A + B > C, then A + C > B + C. Th", "    var ab = Math.sqrt(Math.pow(a, 2)\
    \ + Math.pow(b, 2));\n    var ac = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n\
    \    var bc = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n    return (ab + ac\
    \ - bc) == 0;\n}\n</code>\n<|/ a tags=javascript,geometry |>\n<| c |>\nThis doesn't\
    \ work. Try it with the input `[1, 1, 1]`.\n<|/ c |>\n<| c |>\nI see what you\
    \ mean. Thanks for pointing that out. I've updated the answer to fix it.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work. Try it with the input `[1, 1, 1]`.\n<|/ c\
    \ |>\n<| c |>\nI see what you mean. Thanks for pointing that out. I've updated\
    \ the answer to fix it.\n<|/ c |>\n<| c |>\nThis doesn't work. Try it with the\
    \ input `[1, 1, 1]`.\n<|/ c |>\n<| a dscore=4 |>\n<code>", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var acab = ac * ab;\n    var bcac\
    \ = bc * ac;\n    var abac = ab * ac;\n    return ((abac + bcac) == (ab * bc));\n\
    }\n</code>\n<|/ a tags=javascript,math |>\n<| c |>\nThis doesn't work. `right_angle_triangle(5,4,3)`\
    \ returns `true` but `right_angle_triangle(5,4,4)` returns `false`.\n<|/ c |>\n\
    <| c |>\nI fixed the bug and added a link to the original source. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| c |>\nI fixed the bug and added a link to the original\
    \ source. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI fixed the bug and\
    \ added a link to the original source. Thanks for pointing it out.\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var\
    \ bc = b - c;\n    var det = ab * ac - bc * bc;\n    if (det > 0){\n        return\
    \ true;\n    }\n    return false;\n}\n</code>\n<|/ a tags=javascript,geometry,math\
    \ |>\n<| c |>\nThis doesn't answer the question, which is about a triangle with\
    \ three sides parallel to the X and Y axes. Your answer doesn't even attempt to\
    \ answer the question.\n<|/ c |>\n<| c |>\nThis answer is correct. Triangle with\
    \ three sides parallel to the X and Y axes is called right angle triangle. He\
    \ is asking about right angle triangle with three sides parallel to the X and\
    \ Y axes. He is asking about right angle triangle with three sides parallel to\
    \ the X and Y axes. He is asking about right angle triangle with three sides parallel\
    \ to the X and Y axes. He is asking about right angle triangle with three sides\
    \ parallel to the X and Y axes. He is asking about right angle triangle with three\
    \ sides parallel to the X and Y axes. He is asking about right angle triangle\
    \ with three sides parallel to the X and Y axes. He is asking about right angle\
    \ triangle with three sides parallel to the X and Y axes. He is asking about right\
    \ angle triangle with three sides parallel to the X and Y axes. He is asking about\
    \ right angle triangle with three sides parallel to the X and Y axes. He is asking\
    \ about right angle triangle with three sides parallel to the X and Y axes. He\
    \ is asking about right angle triangle with three sides parallel to the X and\
    \ Y axes. He is asking about right angle triangle with three sides parallel to\
    \ the X and Y axes. He is asking about right angle triangle with three sides parallel\
    \ to the X and Y axes. He is asking about right angle triangle with three sides\
    \ parallel to the X and Y axes. He is asking about right angle triangle with three\
    \ sides parallel to the X and Y axes. He is asking about right angle triangle\
    \ with three sides parallel to the X and Y axes. He is asking about right angle\
    \ triangle with three sides parallel to the X and Y axes. He is asking about right\
    \ angle triangle with three sides parallel to the X and Y axes. He is asking about ",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac\
    \ - bc*bc;\n    return det < 0;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis\
    \ doesn't answer the question. OP wants to know if three sides form a right angled\
    \ triangle, not if they are all right angled.\n<|/ c |>\n<| c |>\nThe question\
    \ was edited after I posted my answer. My answer was based on the original question.\
    \ My answer was also based on the original question. My answer was based on the\
    \ original question. My answer was based on the original question. My answer was\
    \ based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. My answer was based\
    \ on the original question. My answer was based on the original question. My answer\
    \ was based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. My answer was based\
    \ on the original question. My answer was based on the original question. My answer\
    \ was based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. My answer was based\
    \ on the original question. My answer was based on the original question. My answer\
    \ was based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. My answer was based\
    \ on the original question. My answer was based on the original question. My answer\
    \ was based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. My answer was based\
    \ on the original question. My answer was based on the original question. My answer\
    \ was based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. My answer was based\
    \ on the original question. My answer was based on the original question. My answer\
    \ was based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. My answer was based\
    \ on the original question. My answer was based on the original question. My answer\
    \ was based on the original question. My answer was based on the original question.\
    \ My answer was based on the original question. My answer was based on the original\
    \ question. My answer was based on the original question. ", "    var ab = a -\
    \ b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n\
    \    if (det < 0){\n        return false;\n    }\n    var s = ab / det;\n    var\
    \ t = ac / det;\n    var u = bc;\n    var v = (bc*bc) / det;\n    return Math.acos(Math.abs(u*u\
    \ + v*v - s*s)) < Math.PI/2;\n}\n", "\tif((b - a) * (c - b) <= 0){\n\t\treturn\
    \ false;\n\t}\n\tif((b - c) * (a - b) <= 0){\n\t\treturn false;\n\t}\n\treturn\
    \ true;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var det = ab*ac - bc*bc;\n    return det > 0;\n}\n", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n", "    var ab\
    \ = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var ab_ac = ab * ac;\n\
    \    var bc_ab = b * bc;\n    var ab_ab = ab * ab;\n    var bc_bc = bc * bc;\n\
    \    var ab_bc = ab * bc;\n    var bc_ab_bc = bc * ab_bc;\n    var ab_ab_bc =\
    \ ab * ab_bc;\n    return ab_ac >= bc_ab_bc && ab_ac >= ab_bc && ab_ac >= ab_bc_bc\
    \ && ab_ac >= bc_ab_bc_ab_bc;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ seem to work. `right_angle_triangle(1,1,1)` returns `true` but `right_angle_triangle(1,1,2)`\
    \ returns `false`\n<|/ c |>\n<| c |>\nI see what you mean. I've updated the answer\
    \ to account for that case.\n<|/ c |>\n<| c |>\nThis doesn't seem to work. `right_angle_triangle(1,1,1)`\
    \ returns `true` but `right_angle_triangle(1,1,2)` returns `false`\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've updated the answer to account for that case.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n\
    \    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n\
    \    return is_right_angle;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ det = ab * ac - bc * bc;\n    if(det < 0){\n        return false;\n    }\n \
    \   var s = (bc * ac + ab * bc) / det;\n    var t = (ab * ac - bc * ab) / det;\n\
    \    return Math.abs(s) == Math.abs(t);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var det = ab * ac - bc * bc;\n    return det > 0;\n}\n", "    var ab = a\
    \ - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n</code>\n<|/\
    \ a tags=javascript,geometry |>\n<| c |>\nThis doesn't take into account the fact\
    \ that one side is longer than the other. Also, it doesn't take into account the\
    \ fact that one side is longer than the other.\n<|/ c |>\n<| c |>\nI added a version\
    \ that does take into account the fact that one side is longer than the other.\n\
    <|/ c |>\n<| c |>\nI added a version that does take into account the fact that\
    \ one side is longer than the other.\n<|/ c |>\n<| c |>\nI added a version that\
    \ does take into account the fact that one side is longer than the other.\n<|/\
    \ c |>\n<| a tags=javascript,geometry |>\n<code>", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n    return det\
    \ > 0;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var is_right_angle = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n\
    \    return is_right_angle;\n}\n", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n\
    \    var c1 = Math.abs(c);\n    var angle = Math.acos((a1 * b1 + b1 * a1 + c1\
    \ * a1) / 2);\n    return angle <= Math.PI/2;\n}\n", "    var ab = a - b;\n  \
    \  var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n  \
    \  if(det < 0){\n        return false;\n    }\n    var s = Math.sqrt(ab * ab +\
    \ ac * ac + bc * bc + det * det);\n    return Math.abs(s / (a + b + c));\n}\n",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know if three sides form a right angled triangle, not if they are all equal.\n\
    <|/ c |>\n<| c |>\nThe OP wants to know if three sides form a right angled triangle,\
    \ not if they are all equal. The function I gave does exactly that.\n<|/ c |>\n\
    <| c |>\nThe OP wants to know if three sides form a right angled triangle, not\
    \ if they are all equal. The function I gave does exactly that.\n<|/ c |>\n<|\
    \ c |>\nThe OP wants to know if three sides form a right angled triangle, not\
    \ if they are all equal. The function I gave does exactly that.\n<|/ c |>\n<|\
    \ c |>\nThe OP wants to know if three sides form a right angled triangle, not\
    \ if they are all equal. The function I gave does exactly that.\n<|/ c |>\n<|\
    \ a tags=javascript,trigonometry,math |>\n<code>", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac);\n\
    \    return is_right_angle;\n}\n", "  var ab = a - b;\n  var ac = a - c;\n  var\
    \ bc = b - c;\n  var det = ab * ac - bc * bc;\n  if(det < 0){\n    return false;\n\
    \  }\n  return true;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var\
    \ bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac);\n    return\
    \ is_right_angle;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc\
    \ = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n\
    \    return is_right_angle;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n\
    \    var bc = b - c;\n    var det = ab*ac - bc*bc;\n    if(det < 0){\n       \
    \ return false;\n    }\n    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n\
    \    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab\
    \ + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var\
    \ det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n\
    \    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab\
    \ + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var\
    \ det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n\
    \    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab\
    \ + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var\
    \ det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n\
    \    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab\
    \ + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var\
    \ det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n\
    \    var sq = ab*ab + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab\
    \ + ac*ac;\n    var det = ab*ac - bc*bc;\n    var sq = ab*ab + ac*ac;\n    var\
    \ de", "    return Math.abs(Math.atan2(b,a) - Math.atan2(c,b)) < Math.PI/2;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI believe this would return true if the\
    \ triangle is right angled, not if the triangle is right angled clockwise.\n<|/\
    \ c |>\n<| c |>\nYes, you are right. My mistake. Thanks for pointing it out. Corrected\
    \ my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle1 = Math.acos((a1\
    \ * b1 + c1 * a1 - a1 * c1) / (a1 * b1 - a1 * c1));\n    var angle2 = Math.acos((a1\
    \ * b1 - a1 * c1) / (a1 * b1 - a1 * c1));\n    return angle1 < angle2;\n}\n",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acab = ac\
    \ * ab;\n    var bcac = bc * ac;\n    var abac = ab * ac;\n    var abbc = ab *\
    \ bc;\n    var acbc = ac * bc;\n    var acabbc = acab * bcac;\n    var acabac\
    \ = acab * abac;\n    var acabbcac = acabbc * abac;\n    var acabacbc = acabac\
    \ * abbc;\n    var acabacbcac = acabacbc * abac;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * abbc;\n    var acabacbcac = acabacbc\
    \ * abbc;\n    var acabacbcac = acabacbc * ", "    var ab = a - b;\n    var ac\
    \ = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac)\
    \ + Math.abs(bc);\n    return is_right_angle;\n}\n", "    var ab = a - b;\n  \
    \  var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n", "\tif(a==b){\n\
    \t\treturn c==b;\n\t}\n\tif(a==c){\n\t\treturn b==c;\n\t}\n\tif(b==c){\n\t\treturn\
    \ false;\n\t}\n\tvar ab = a-b;\n\tvar ac = a-c;\n\tvar bc = b-c;\n\tvar det =\
    \ ab*ac - bc*bc;\n\tif(det>0){\n\t\treturn false;\n\t}\n\tvar sq = ab*ab + ac*ac;\n\
    \tvar det = ab*ac - bc*bc;\n\tif(sq>0){\n\t\treturn false;\n\t}\n\tvar t1 = (ab*ac\
    \ - bc*bc)/det;\n\tvar t2 = (ab*bc - ac*ab)/det;\n\treturn t1>0 && t2>0;\n}\n",
  "    var ab = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    var ac = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n    var bc = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\
    \    return (ab + ac - bc) == 0;\n}\n</code>\n<|/ a tags=javascript,math |>\n\
    <| c |>\nThis doesn't answer the question. The question asks for an algorithm\
    \ to determine if a triangle is right angled, not for a JavaScript implementation.\n\
    <|/ c |>\n<| c |>\nThis doesn't answer the question. The question asks for an\
    \ algorithm to determine if a triangle is right angled, not for a JavaScript implementation.\n\
    <|/ c |>\n<| c |>\nThis doesn't answer the question. The question asks for an\
    \ algorithm to determine if a triangle is right angled, not for a JavaScript implementation.\n\
    <|/ c |>\n<| a tags=javascript,math |>\n<code>", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n    if(det\
    \ < 0){\n        return false;\n    }\n    var s = (bc * bc) - (ac * ac);\n  \
    \  if(s < 0){\n        return false;\n    }\n    var u = (ab * ac) - (bc * bc);\n\
    \    if(u < 0){\n        return false;\n    }\n    var v = (ab * b) - (bc * ac);\n\
    \    if(v < 0){\n        return false;\n    }\n    var w = ((ab * bc) - (ac *\
    \ b)) / det;\n    if(w < 0){\n        return false;\n    }\n    return true;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know if three sides form a right angled triangle, not if they form a right\
    \ angled triangle with any angle. Your code will tell you if they form a right\
    \ angled triangle with any angle.\n<|/ c |>\n<| c |>\nI believe this does answer\
    \ the question. OP wants to know if three sides form a right angled triangle,\
    \ not if they form a right angled triangle with any angle. Your code will tell\
    \ you if they form a right angled triangle with any angle.\n<|/ c |>\n<| c |>\n\
    No, it doesn't. OP wants to know if three sides form a right angled triangle,\
    \ not if they form a right angled triangle with any angle. Your code will tell\
    \ you if they form a right angled triangle with any angle.\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. OP wants to know if three sides form\
    \ a right angled triangle, not if they form a right angled triangle with any angle.\
    \ Your code will tell you if they form a right angled triangle with any angle.\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. OP wants to know if\
    \ three sides form a right angled triangle, not if they form a right angled triangle\
    \ with any angle. Your code will tell you if they form a right angled triangle\
    \ with any angle.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    if(a1 == b1 && b1 ==\
    \ c1){\n        return true;\n    }\n    if(a1 == c1 && c1 == b1){\n        return\
    \ true;\n    }\n    if(a1 == b1 && b1 == a1){\n        return true;\n    }\n \
    \   if(a1 == c1 && c1 == a1){\n        return true;\n    }\n    return false;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. The\
    \ question asks how to determine if a triangle is right angled, not whether a\
    \ triangle is equilateral.\n<|/ c |>\n<| c |>\nThis answer does not answer the\
    \ question. As far as I can tell, it does not answer the question at all. As far\
    \ as I can tell, the question asks how to determine if a triangle is right angled,\
    \ not whether a triangle is equilateral.\n<|/ c |>\n<| c |>\nThe question asks\
    \ how to determine if a triangle is right angled, not whether a triangle is equilateral.\
    \ Your answer does not answer the question.\n<|/ c |>\n<| c |>\nThe question asks\
    \ how to determine if a triangle is right angled, not whether a triangle is equilateral.\
    \ Your answer does not answer the question.\n<|/ c |>\n<| c |>\nThe question asks\
    \ how to determine if a triangle is right angled, not whether a triangle is equilateral.\
    \ Your answer does not answer the question.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,geometry |>\n<code>", "  \
    \  var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acb = ac\
    \ * bc;\n    var abc = ab * bc;\n    var acbc = acb * bc;\n    var abbc = abb\
    \ * bc;\n    var acbcbc = acbcb * bc;\n    var abcbc = abcb * bc;\n    var acbcbcbc\
    \ = acbcbcb * bc;\n    var abcbcbc = abcbcb * bc;\n    var acbcbcbcbc = acbcbcbcb\
    \ * bc;\n    var abcbcbcbc = abcbcbcb * bc;\n    var acbcbcbcbcbc = acbcbcbcbcb\
    \ * bc;\n    var abcbcbcbcbc = abcbcbcbcb * bc;\n    var acbcbcbcbcbcbc = acbcbcbcbcbcb\
    \ * bc;\n    var abcbcbcbcbcbc = abcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbc = abcbcbcbcbcbcb * bc;\n  \
    \  var acbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcb\
    \ * bc;\n    var abcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcb\
    \ * bc;\n    var acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcb\
    \ * bc;\n    var abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbcbcbc\
    \ = ", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n\
    }", "    if (Math.abs(Math.atan2(b,a) - Math.atan2(c,b)) > Math.PI){\n       \
    \ return false;\n    }\n    return true;\n}\n", "    var a1 = Math.abs(a);\n \
    \   var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var a2 = a1*a1;\n  \
    \  var b2 = b1*b1;\n    var c2 = c1*c1;\n    var det = a1*b2 - a2*b1;\n    if\
    \ (det > 0){\n        return (a1*c2 - b1*a2) > (b1*c2 - a1*b2);\n    }\n    return\
    \ false;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work. Try it with\
    \ the triangle `[1,1,1]`.\n<|/ c |>\n<| c |>\nI believe this fails for `[1,1,1]`\
    \ because `a1*b2 - a2*b1 > 0` but `a1*c2 - b1*a2 > 0` because `a1*c2 - b1*a2 >\
    \ 0` so `a1*c2 - b1*a2 > 0` > 0 but `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2 > 0` > 0 so `a1*c2 - b1*a2\
    \ > 0` > 0 so `a1*", "\tvar a1 = Math.abs(a);\n\tvar b1 = Math.abs(b);\n\tvar\
    \ c1 = Math.abs(c);\n\tif(a1 == b1 && b1 == c1)\n\t\treturn true;\n\tif(a1 ==\
    \ c1 && c1 == b1)\n\t\treturn true;\n\tif(a1 == b1 && b1 == a1)\n\t\treturn true;\n\
    \tif(a1 == c1 && c1 == c1)\n\t\treturn true;\n\treturn false;\n}\n", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac\
    \ - bc * bc;\n    return det < 0;\n}\n", "    var ab = a - b;\n    var ac = a\
    \ - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac)\
    \ + Math.abs(bc);\n    return is_right_angle;\n}\n", "    var ab = a - b;\n  \
    \  var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n</code>\n<|/\
    \ a tags=javascript,math |>\n<| c |>\nThis doesn't work. Try it with `right_angle_triangle(5,5,5)`\n\
    <|/ c |>\n<| c |>\nIt works fine for me. Try it here: https://jsfiddle.net/jz9L0q3x/\n\
    <|/ c |>\n<| c |>\nIt doesn't work for me in Chrome Version 63.0.3239.132 (Official\
    \ Build) (64-bit)\n<|/ c |>\n<| c |>\nIt works for me in Chrome Version 63.0.3239.132\
    \ (Official Build) (64-bit) on Windows 10. Try it here: https://jsfiddle.net/jz9L0q3x/\n\
    <|/ c |>\n<| c |>\nIt works for me in Chrome Version 63.0.3239.132 (Official Build)\
    \ (64-bit) on Windows 10. Try it here: https://jsfiddle.net/jz9L0q3x/\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n\
    \    var c1 = Math.abs(c);\n    var a2 = a1 + b1;\n    var b2 = b1 + c1;\n   \
    \ var c2 = c1 + a1;\n    return a2 > b2 && a2 > c2 || b2 > c2 || c2 > a2;\n}\n",
  "\tif(a>b+c || b>a+c || c>a+b){\n\t\treturn false;\n\t}\n\treturn true;\n}", "\t\
    if((b - a) * (c - b) <= 0){\n\t\treturn false;\n\t}\n\telse{\n\t\treturn true;\n\
    \t}\n}\n", "\tvar ab = a - b;\n\tvar ac = a - c;\n\tvar bc = b - c;\n\treturn\
    \ (ab > ac && ab > bc);\n}\n", "    var ab = a - b;\n    var ac = a - c;\n   \
    \ var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n\
    \    return is_right_angle;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `right_angle_triangle(0,0,0)`\n<|/ c |>\n<| c |>\nI see what\
    \ you mean. Thanks for pointing that out. I've updated my answer.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var\
    \ bc = b - c;\n    var abc = ab + ac;\n    var bca = b + ca;\n    var bcb = b\
    \ + cb;\n    var acb = ac + bc;\n    var abca = ab + ca;\n    var abcc = ab +\
    \ cc;\n    var acbc = ac + cb;\n    var accc = ac + cc;\n    var bcca = bc + ca;\n\
    \    var bcbb = bc + cb;\n    var bcac = bc + ca;\n    var bcacb = bc + ca;\n\
    \    var bcacbc = bc + ca;\n    var bcacbca = bc + ca;\n    var bcacbcc = bc +\
    \ ca;\n    var bcacbccb = bc + ca;\n    var bcacbccbc = bc + ca;\n    var bcacbccbca\
    \ = bc + ca;\n    var bcacbccbcc = bc + ca;\n    var bcacbccbccb = bc + ca;\n\
    \    var bcacbccbccbc = bc + ca;\n    var bcacbccbccbca = bc + ca;\n    var bcacbccbccbcc\
    \ = bc + ca;\n    var bcacbccbccbccb = bc + ca;\n    var bcacbccbccbccbc = bc\
    \ + ca;\n    var bcacbccbccbccbca = bc + ca;\n    var bcacbccbccbccbcc = bc +\
    \ ca;\n    var bcacbccbccbccbccb = bc + ca;\n    var bcacbccbccbccbccbc = bc +\
    \ ca;\n    var bcacbccbccbccbccbca = bc + ca;\n    var bcacbccbccbccbccbcc = bc\
    \ + ca;\n    var bcacbccbccbccbccbccb = bc + ca;\n    var bcacbccbccbccbccbccbc\
    \ = bc + ca;\n    var bcacbccbccbccbccbccbca = bc + ca;\n    var bcacbccbccbccbccbccbcc\
    \ = bc + ca;\n    var bcacbccbccbccbccbccbccb = bc + ca;\n    var bcacbccbccbccbccbccbccbc\
    \ = bc + ca;\n    var bcacb", "    var ab = a - b;\n    var ac = a - c;\n    var\
    \ bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n\
    \    return is_right_angle;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n\
    \    var bc = b - c;\n    var acb = ac * bc;\n    var abc = ab * bc;\n    var\
    \ acbc = acb * bc;\n    var acbc_abc = acbc - abc;\n    return Math.abs(acbc_abc)\
    \ < 0.000000001;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc\
    \ = b - c;\n    var abc = ab + ac + bc;\n    return abc > 0;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants to know if\
    \ three sides form a right angled triangle, not if they are all equal.\n<|/ c\
    \ |>\n<| c |>\nYes, I know. That's why I wrote \"Given the lengths of the three\
    \ sides of a triangle. Return True if the three sides form a right-angled triangle,\
    \ False otherwise.\"\n<|/ c |>\n<| c |>\nYes, but your function returns true if\
    \ the three sides are equal, which is clearly not the case here.\n<|/ c |>\n<|\
    \ c |>\nYes, I know. That's why I wrote \"Given the lengths of the three sides\
    \ of a triangle. Return True if the three sides form a right-angled triangle,\
    \ False otherwise.\"\n<|/ c |>\n<| c |>\nYes, I know. That's why I wrote \"Given\
    \ the lengths of the three sides of a triangle. Return True if the three sides\
    \ form a right-angled triangle, False otherwise.\"\n<|/ c |>\n<| a tags=javascript,math\
    \ |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var det = ab * ac - bc * bc;\n    return det < 0;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't answer the question. He wants to know if three sides\
    \ form a right angled triangle, not if three sides form a right triangle. Your\
    \ code only checks if three sides form a right triangle.\n<|/ c |>\n<| c |>\n\
    This answer doesn't answer the question. He wants to know if three sides form\
    \ a right angled triangle, not if three sides form a right triangle. Your code\
    \ only checks if three sides form a right triangle.\n<|/ c |>\n<| c |>\nThis answer\
    \ doesn't answer the question. He wants to know if three sides form a right angled\
    \ triangle, not if three sides form a right triangle. Your code only checks if\
    \ three sides form a right triangle.\n<|/ c |>\n<| a dscore=1 |>\n<code>", " \
    \   var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n\
    }\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var\
    \ acbc = ac + bc;\n    var abac = ab + ac;\n    var abbc = (ab*bc) - (ab*ac);\n\
    \    var acbc = ac + bc;\n    var acbc_abac = acbc + abac;\n    var acbc_abbc\
    \ = acbc + abbc;\n    var acbc_abac_bc = acbc + abac + abbc;\n    var acbc_abac_bc_abbc\
    \ = acbc + abac + abbc + acbc;\n    var acbc_abac_bc_abac = acbc + abac + abbc\
    \ + acbc + abac;\n    var acbc_abac_bc_abac_bc = acbc + abac + abbc + acbc + abac\
    \ + abbc;\n    var acbc_abac_bc_abac_bc_abbc = acbc + abac + abbc + acbc + abac\
    \ + abbc + acbc;\n    var acbc_abac_bc_abac_bc_abac = acbc + abac + abbc + acbc\
    \ + abac + abbc + acbc + abac;\n    var acbc_abac_bc_abac_bc_abac_bc = acbc +\
    \ abac + abbc + acbc + abac + abbc + acbc + abac + abbc;\n    var acbc_abac_bc_abac_bc_abac_bc_abbc\
    \ = acbc + abac + abbc + acbc + abac + abbc + acbc + abac + abbc + acbc;\n   \
    \ var acbc_abac_bc_abac_bc_abac_bc_abac = acbc + abac + abbc + acbc + abac + abbc\
    \ + acbc + abac + abbc + acbc + abac;\n    var acbc_abac_bc_abac_bc_abac_bc_abac_bc\
    \ = acbc + abac + abbc + acbc + abac + abbc + acbc + abac + abbc + acbc + abac\
    \ + abbc;\n    var acbc_abac_bc_abac_bc_abac_bc_abac_bc_abbc = acbc + abac + abbc\
    \ + acbc + abac + abbc + acbc + ", "    if (Math.abs(Math.sqrt(Math.pow(a, 2)\
    \ + Math.pow(b, 2)) - Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2)) ) < 0.00001){\n        return true;\n    }\n    return\
    \ false;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var det = ab * ac - bc * bc;\n    if(det < 0){\n        return false;\n \
    \   }\n    var s = Math.sqrt(ab * ab + ac * ac + bc * bc + 1);\n    return Math.abs(s\
    \ / (2 * det)) == 1;\n}\n</code>\n<|/ a tags=javascript,geometry,math |>\n<| c\
    \ |>\nThis doesn't work. Try it with the points `(0,0), (1,0), (1,1)`\n<|/ c |>\n\
    <| c |>\nIt does work. Try it with the points `(0,0), (1,0), (1,1)`\n<|/ c |>\n\
    <| c |>\nIt does work. Try it with the points `(0,0), (1,0), (1,1)`\n<|/ c |>\n\
    <| c |>\nIt does work. Try it with the points `(0,0), (1,0), (1,1)`\n<|/ c |>\n\
    <| c |>\nIt does work. Try it with the points `(0,0), (1,0), (1,1)`\n<|/ c |>\n\
    <| a tags=javascript,geometry,math |>\n<code>", "    var ab = a - b;\n    var\
    \ ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n    var bca = b +\
    \ ca;\n    var acb = ac + bc;\n    var abca = ab + ca;\n    var abbc = ab + bc;\n\
    \    var acbc = ac + bc;\n    var abcab = ab + cab;\n    var abcabc = ab + cabc;\n\
    \    var abcabcb = ab + cabcb;\n    var abcabcbc = ab + cabcbc;\n    var abcabcbca\
    \ = ab + cabcbca;\n    var abcabcbcab = ab + cabcbcab;\n    var abcabcbcabc =\
    \ ab + cabcbcabc;\n    var abcabcbcabcb = ab + cabcbcabcb;\n    var abcabcbcabcbc\
    \ = ab + cabcbcabcbc;\n    var abcabcbcabcbca = ab + cabcbcabcbca;\n    var abcabcbcabcbcab\
    \ = ab + cabcbcabcbcab;\n    var abcabcbcabcbcabc = ab + cabcbcabcbcabc;\n   \
    \ var abcabcbcabcbcabcb = ab + cabcbcabcbcabcb;\n    var abcabcbcabcbcabcbc =\
    \ ab + cabcbcabcbcabcbc;\n    var abcabcbcabcbcabcbca = ab + cabcbcabcbcabcbca;\n\
    \    var abcabcbcabcbcabcbcab = ab + cabcbcabcbcabcbcab;\n    var abcabcbcabcbcabcbcabc\
    \ = ab + cabcbcabcbcabcbcabc;\n    var abcabcbcabcbcabcbcabcb = ab + cabcbcabcbcabcbcabcb;\n\
    \    var abcabcbcabcbcabcbcabcbc = ab + cabcbcabcbcabcbcabcbc;\n    var abcabcbcabcbcabcbcabcbca\
    \ = ab + cabcbcabcbcabcbcabcbca;\n    var abcabcbcabcbcabcbcabcbcab = ab + cabcbcabcbcabcbcabcbcab;\n\
    \    var abcabcbcabcbcabcbcabcbcabc = ab + cabcbcabcbcabcbcabcbcabc;\n    var\
    \ abcabcbcabcbcabcbcabcbcabcb = ab + cabcbcabcbcabcbcabcbcabcb;\n    var abcabcbcabcbcabcbcabcbcabcbc\
    \ = ab + cabcbcabcbcabcbcabcbcabcbc;\n    var abcabcbcabcb", "\tvar ab = a - b;\n\
    \tvar ac = a - c;\n\tvar bc = b - c;\n\tvar abc = ab + ac;\n\tvar bca = b + ca;\n\
    \tvar cab = ac + bc;\n\treturn (abc > bca) && (abc > cab);\n}\n", "    var ab\
    \ = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac -\
    \ bc * bc;\n    return det < 0;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis\
    \ doesn't work. Try it with the triangle `[1, 1, 1]`.\n<|/ c |>\n<| c |>\nIt works.\
    \ I tested it with the triangle `[1, 1, 1]`. What is the problem?\n<|/ c |>\n\
    <| c |>\nIt doesn't work. Try it with the triangle `[1, 1, 1]`.\n<|/ c |>\n<|\
    \ c |>\nIt works. I tested it with the triangle `[1, 1, 1]`. What is the problem?\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with the triangle `[1, 1, 1]`.\n<|/\
    \ c |>\n<| a tags=javascript,geometry,trigonometry |>\n<code>", "    var ab =\
    \ a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc\
    \ * bc;\n    return det < 0;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n\
    \    var bc = b - c;\n    var det = ab * ac - bc * bc;\n    return det < 0;\n\
    }\n</code>\n<|/ a tags=javascript,trigonometry |>\n<| c |>\nThis doesn't seem\
    \ to work when `a` is greater than `b`\n<|/ c |>\n<| c |>\nIt works fine for me.\
    \ Can you give an example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested\
    \ it with `a = 3, b = 2, c = 3` and it returned `true`\n<|/ c |>\n<| c |>\nI tested\
    \ it with `a = 3, b = 2, c = 3` and it returned `true`\n<|/ c |>\n<| c |>\nI tested\
    \ it with `a = 3, b = 2, c = 3` and it returned `true`\n<|/ c |>\n<| a tags=javascript,trigonometry\
    \ |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var acb = ac * bc;\n    var abc = ab * bc;\n    return Math.abs(acb) >= Math.abs(abc);\n\
    }\n", "\tif((b - a) * (c - b) <= 0){\n\t\treturn false;\n\t}\n\telse{\n\t\treturn\
    \ true;\n\t}\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b\
    \ - c;\n    var acb = ac * bc;\n    var abc = ab * bc;\n    var acbc = acb * bc;\n\
    \    var abbc = abb * bc;\n    var acbcbc = acbcb * bc;\n    var abcbc = abcb\
    \ * bc;\n    var acbcbcbc = acbcbcb * bc;\n    var abcbcbc = abcbcb * bc;\n  \
    \  var acbcbcbcbc = acbcbcbcb * bc;\n    var abcbcbcbc = abcbcbcb * bc;\n    var\
    \ acbcbcbcbcbc = acbcbcbcbcb * bc;\n    var abcbcbcbcbc = abcbcbcbcb * bc;\n \
    \   var acbcbcbcbcbcbc = acbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbc = abcbcbcbcbcb\
    \ * bc;\n    var acbcbcbcbcbcbcbc = acbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcb * bc;\n\
    \    var abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcb\
    \ * bc;\n    var acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcb\
    \ * bc;\n    var abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbcb * bc;\n    var acbcbcbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbcbcbcb * bc;\n    var abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbcb\
    \ * bc;\n    var acbcbcbcbcbcbcbcbcbcbc = ", "\tvar ab = a - b;\n\tvar ac = a\
    \ - c;\n\tvar bc = b - c;\n\tvar abc = ab + ac;\n\tvar bcd = bc + ab;\n\treturn\
    \ (abc <= bcd);\n}\n", "    var a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n\
    \    var c1 = Math.abs(c);\n    var angle1 = Math.acos((a1 * b1 + c1 * b1) / 2);\n\
    \    var angle2 = Math.acos((a1 * c1 + c1 * c1) / 2);\n    return angle2 >= angle1;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know if any two sides are equal, not if all three sides are equal. The question\
    \ is not about trigonometry, it's about a mathematical concept.\n<|/ c |>\n<|\
    \ c |>\nI agree with you. My answer was a mathematical concept and I thought it\
    \ would be helpful to OP to know about this concept in programming.\n<|/ c |>\n\
    <| c |>\nI agree with you. My answer was a mathematical concept and I thought\
    \ it would be helpful to OP to know about this concept in programming.\n<|/ c\
    \ |>\n<| c |>\nI agree with you. My answer was a mathematical concept and I thought\
    \ it would be helpful to OP to know about this concept in programming.\n<|/ c\
    \ |>\n<| c |>\nI agree with you. My answer was a mathematical concept and I thought\
    \ it would be helpful to OP to know about this concept in programming.\n<|/ c\
    \ |>\n<| a tags=math,trigonometry,javascript |>\n<code>", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1\
    \ * b1 + c1) / (a1 * b1 + c1 + a1 * c1));\n    return angle < Math.PI/2;\n}\n",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acb = ac\
    \ * bc;\n    var abc = ab * bc;\n    return (abc + acb > 0);\n}\n", "    var ab\
    \ = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    var ac = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n    var bc = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\
    \    return (ab + ac == bc);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ answer the question at all. OP wants to know if three sides form a right angled\
    \ triangle, not if three sides form a right angled triangle. Your code doesn't\
    \ do that.\n<|/ c |>\n<| c |>\nI thought the question was \"Given the lengths\
    \ of the three sides of a triangle. Return True if the three sides form a right-angled\
    \ triangle, False otherwise.\"\n<|/ c |>\n<| c |>\nThe question says \"Return\
    \ True if the three sides form a right-angled triangle, False otherwise.\"\n<|/\
    \ c |>\n<| c |>\nI guess I misunderstood the question. I'll edit my answer.\n\
    <|/ c |>\n<| c |>\nI edited my answer. Sorry for the confusion.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc\
    \ = b - c;\n    var acb = ac * bc;\n    var abc = ab * bc;\n    var acbc = acb\
    \ * bc;\n    var abbc = abb * bc;\n    return ((abbc > acbc) && (abbc > abc));\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true` when it should return `false`.\n<|/ c |>\n<| c |>\nYes, I missed\
    \ that case. Thanks for pointing out. Updated the answer.\n<|/ c |>\n<| c |>\n\
    This doesn't work. `right_angle_triangle(1,1,1)` returns `true` when it should\
    \ return `false`.\n<|/ c |>\n<| c |>\nYes, I missed that case. Thanks for pointing\
    \ out. Updated the answer.\n<|/ c |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true` when it should return `false`.\n<|/ c |>\n<| a |>\n<code>", " \
    \   var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab\
    \ * ac - bc * bc;\n    return det < 0;\n}\n</code>\n<|/ a tags=javascript,geometry\
    \ |>\n<| c |>\nThis doesn't answer the question. OP asked for \"a triangle that\
    \ has 3 sides parallel to the x-axis\"\n<|/ c |>\n<| c |>\nThe question was \"\
    Given the lengths of the three sides of a triangle. Return True if the three sides\
    \ form a right-angled triangle, False otherwise.\"\n<|/ c |>\n<| c |>\nThe question\
    \ was \"Given the lengths of the three sides of a triangle. Return True if the\
    \ three sides form a right-angled triangle, False otherwise.\"\n<|/ c |>\n<| c\
    \ |>\nThe question was \"Given the lengths of the three sides of a triangle. Return\
    \ True if the three sides form a right-angled triangle, False otherwise.\"\n<|/\
    \ c |>\n<| c |>\nThe question was \"Given the lengths of the three sides of a\
    \ triangle. Return True if the three sides form a right-angled triangle, False\
    \ otherwise.\"\n<|/ c |>\n<| a |>\n<code>", "    if (Math.abs(b * b - 4 * a *\
    \ c) < 0.000000001){\n        return true;\n    }\n    return false;\n}\n</cell>\n\
    <cell>\n# Write a Python program to find the area of a triangle given three sides\
    \ a, b and c.\n# \n# Input:\n# a = float(input(\"Enter the length of side a: \"\
    ))\n# b = float(input(\"Enter the length of side b: \"))\n# c = float(input(\"\
    Enter the length of side c: \"))\n# \n# Output:\n# Area of the triangle\n# \n\
    # Example:\n# Enter the length of side a: 5\n# Enter the length of side b: 4\n\
    # Enter the length of side c: 3\n# Area of the triangle = 12\n</cell>\n<cell>\n\
    # Write a Python program to find the area of a triangle given three sides a, b\
    \ and c.\n# \n# Input:\n# a = float(input(\"Enter the length of side a: \"))\n\
    # b = float(input(\"Enter the length of side b: \"))\n# c = float(input(\"Enter\
    \ the length of side c: \"))\n# \n# Output:\n# Area of the triangle\n# \n# Example:\n\
    # Enter the length of side a: 5\n# Enter the length of side b: 4\n# Enter the\
    \ length of side c: 3\n# Area of the triangle = 12\n</cell>\n<cell>\n# Write a\
    \ Python program to find the area of a triangle given three sides a, b and c.\n\
    # \n# Input:\n# a = float(input(\"Enter the length of side a: \"))\n# b = float(input(\"\
    Enter the length of side b: \"))\n# c = float(input(\"Enter the length of side\
    \ c: \"))\n# \n# Output:\n# Area of the triangle\n# \n# Example:\n# Enter the\
    \ length of side a: 5\n# Enter the length of side b: 4\n# Enter the length of\
    \ side c: 3\n# Area of the triangle = 12\n</cell>\n<cell>\n# Write a Python program\
    \ to find the area of a triangle given three sides a, b and c.\n# \n# Input:\n\
    # a = float(input(\"Enter the length of side a: \"))\n# b = float(input(\"Enter\
    \ the length of side b: \"))\n# c = float(input(\"Enter the length of side c:\
    \ \"))\n# \n# Output:\n# Area of the triangle\n# \n# Example:\n# Enter the length\
    \ of side a: 5\n# Enter the length of side b: 4\n# Enter the length of side c:\
    \ 3\n# Area of the triangle = 12\n</cell>\n<cell>\n# Write a Python program to\
    \ find the area of a triangle given three ", "    var a1 = Math.abs(a);\n    var\
    \ b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1\
    \ * b1 + c1 * b1 - a1 * c1) / ( a1 * b1 - a1 * c1 ));\n    return angle < Math.PI\
    \ / 2;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work. `Math.acos(-1)`\
    \ returns `NaN`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated\
    \ the answer to account for that.\n<|/ c |>\n<| a tags=javascript,trigonometry,geometry\
    \ |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n\
    \    var is_right_angle = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return\
    \ is_right_angle;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var bc\
    \ = b - c;\n    var is_right_angle = Math.abs(ab + ac - bc) <= Math.sqrt(ab*ab\
    \ + ac*ac + bc*bc);\n    return is_right_angle;\n}\n", "    if (Math.abs(Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2)))<=0.1){\n\
    \        return true;\n    }\n    return false;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=javascript,geometry,trigonometry |>\n<code>", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac - bc*bc;\n    return\
    \ det < 0;\n}\n</code>\n<|/ a tags=javascript,geometry |>\n<| c |>\nThis doesn't\
    \ answer the question. He wants to know if the sides are right angled, not if\
    \ the triangle is right angled.\n<|/ c |>\n<| c |>\nThis answer doesn't answer\
    \ the question. He wants to know if the sides are right angled, not if the triangle\
    \ is right angled.\n<|/ c |>\n<| c |>\nThis answer doesn't answer the question.\
    \ He wants to know if the sides are right angled, not if the triangle is right\
    \ angled.\n<|/ c |>\n<| c |>\nThis answer doesn't answer the question. He wants\
    \ to know if the sides are right angled, not if the triangle is right angled.\n\
    <|/ c |>\n<| c |>\nThis answer doesn't answer the question. He wants to know if\
    \ the sides are right angled, not if the triangle is right angled.\n<|/ c |>\n\
    <| a tags=javascript,geometry |>\n<code>", "    var ab = a - b;\n    var ac =\
    \ a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n    if(det <\
    \ 0){\n        return false;\n    }\n    var s = Math.sqrt(ab * ab + ac * ac +\
    \ bc * bc);\n    return Math.abs(det - s) <= 0.1;\n}\n", "  var ab = a - b;\n\
    \  var ac = a - c;\n  var bc = b - c;\n  var is_right_angle = Math.abs(ab) > Math.abs(ac)\
    \ + Math.abs(bc);\n  return is_right_angle;\n}\n", "\tif((b - a) * (c - b) <=\
    \ 0){\n\t\treturn false;\n\t}\n\telse{\n\t\treturn true;\n\t}\n}", "    var ab\
    \ = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle =\
    \ Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\
    </code>\n<|/ a tags=javascript,trigonometry,geometry |>\n<| c |>\nThis doesn't\
    \ work. `Math.atan2` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan2(y, x)` expects two arguments.\
    \ `Math.atan2(y, x)` expects two arguments. `Math.atan", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n</code>\n<|/\
    \ a tags=javascript,math |>\n<| c |>\nThis doesn't seem to work. `right_angle_triangle(1,1,1)`\
    \ returns `false`, but `right_angle_triangle(1,1,2)` returns `true`.\n<|/ c |>\n\
    <| c |>\nI believe this should work. Can you post the code you tried that didn't\
    \ work?\n<|/ c |>\n<| c |>\nI added my code to the question. Thanks for your help!\n\
    <|/ c |>\n<| c |>\nI updated my answer to include a solution that should work.\n\
    <|/ c |>\n<| c |>\nThis doesn't seem to work. `right_angle_triangle(1,1,1)` returns\
    \ `false`, but `right_angle_triangle(1,1,2)` returns `true`.\n<|/ c |>\n<| a dscore=2\
    \ |>\nI believe this should work:\n<code>", "    var a1 = Math.abs(a);\n    var\
    \ b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle1 = Math.acos((a1\
    \ * b1 + c1 * b1 - a1 * c1 - c1 * a1) / 2);\n    var angle2 = Math.acos((a1 *\
    \ b1 - c1 * b1 + a1 * c1 - c1 * a1) / 2);\n    return (angle1 < angle2);\n}\n",
  "    var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1\
    \ * b1 + c1 * b1) / (a1 * c1 + b1 * c1));\n    return angle < Math.PI;\n}\n",
  "\tvar ab = a - b;\n\tvar ac = c - a;\n\tvar bc = b - c;\n\tvar acb = ac * bc;\n\
    \treturn (ab > acb) && (acb > 0);\n}\n", "    var a1 = Math.abs(a);\n    var b1\
    \ = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a1 * b1\
    \ + c1 * a1 - a1 * c1) / ( a1 * b1 - a1 * c1 ));\n    return angle <= Math.PI/2;\n\
    }\n</code>\n<|/ a tags=javascript,trigonometry,geometry |>\n<| c |>\nThis doesn't\
    \ work. `Math.acos(1)` returns `NaN`, which is not less than `Math.PI/2`.\n<|/\
    \ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code.\n<|/ c |>\n\
    <| a dscore=2 |>\nI believe that your code is correct, but you have a typo in\
    \ your code. \n<code>\nvar angle = Math.acos((a1 * b1 + c1 * a1 - a1 * c1) / (\
    \ a1 * b1 - a1 * c1 ));\n</code>\nshould be\n<code>\nvar angle = Math.acos((a1\
    \ * b1 + c1 * a1 - a1 * c1) / ( a1 * b1 + a1 * c1 ));\n</code>\n<|/ a tags=javascript,trigonometry,geometry\
    \ |>\n<| c |>\nThanks for pointing that out. I've fixed the code.\n<|/ c |>\n\
    <| a dscore=2 |>\nI believe that your code is correct, but you have a typo in\
    \ your code. \n<code>\nvar angle = Math.acos((a1 * b1 + c1 * a1 - a1 * c1) / (\
    \ a1 * b1 - a1 * c1 ));\n</code>\nshould be\n<code>\nvar angle = Math.acos((a1\
    \ * b1 + c1 * a1 - a1 * c1) / ( a1 * b1 + a1 * c1 ));\n</code>\n<|/ a tags=javascript,trigonometry,geometry\
    \ |>\n<| a dscore=2 |>\n<code>", "    var ab = a - b;\n    var ac = a - c;\n \
    \   var bc = b - c;\n    return (ab > ac && ab > bc);\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=javascript,geometry |>\n<code>", "    var a1 = Math.abs(a);\n\
    \    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var angle = Math.acos((a*a\
    \ + b*b - c*c)/(2*a*b));\n    return (a1*b1 - b1*a1) > 0 || (a1*c1 - c1*a1) >\
    \ 0;\n}\n", "\tvar ab = a - b;\n\tvar ac = a - c;\n\tvar bc = b - c;\n\treturn\
    \ (ab > ac) && (bc > ab);\n}\n", "    var ab = a - b;\n    var ac = a - c;\n \
    \   var bc = b - c;\n    var det = ab * ac - bc * bc;\n    if(det < 0){\n    \
    \    return false;\n    }\n    var s = (-b + Math.sqrt(det)) / (2 * a);\n    var\
    \ t = (-b - Math.sqrt(det)) / (2 * a);\n    return Math.abs(s) == Math.abs(t);\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. Try it with the triangle\
    \ `(-5, -5, 5)`\n<|/ c |>\n<| c |>\nI tested it and it works. I used the triangle\
    \ `(-5, -5, 5)` and it returned `true`.\n<|/ c |>\n<| c |>\nIt doesn't work for\
    \ `(-5, -5, -5)`\n<|/ c |>\n<| c |>\nI tested it and it works. I used the triangle\
    \ `(-5, -5, -5)` and it returned `true`.\n<|/ c |>\n<| c |>\nIt doesn't work for\
    \ `(-5, -5, -5)`\n<|/ c |>\n<| a tags=javascript,geometry |>\n<code>", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acab = ac * ab;\n\
    \    var bcab = bc * ab;\n    var acbc = ac * bc;\n    var abac = ab * ac;\n \
    \   var abbc = ab * bc;\n    var acabbc = ac * abbc;\n    var acbcab = ac * bcab;\n\
    \    var accabbc = ac * cabbc;\n    var abacab = ab * acab;\n    var abacbc =\
    \ ab * acbc;\n    var abcabc = ab * cabc;\n    var acabcab = ac * abcab;\n   \
    \ var acabbcab = ac * abbcab;\n    var acbcabbc = ac * bcabbc;\n    var abacabbc\
    \ = ab * acabbc;\n    var abaccabbc = ab * accabbc;\n    var abcabcab = ab * cabcab;\n\
    \    var acabcabbc = ac * abcabbc;\n    var acabbcabbc = ac * abbcabbc;\n    var\
    \ acbcabcab = ac * bcabcab;\n    var accabbcabc = ac * cabbcab;\n    var abacabcabbc\
    \ = ab * acabbcabbc;\n    var abacabbcabbc = ab * acabbcabbc;\n    var abacbcabcab\
    \ = ab * acbcabcab;\n    var acabcabbcabc = ac * abcabbcabc;\n    var acabbcabcabc\
    \ = ac * abbcabcabc;\n    var acbcabcabcab = ac * bcabcabcab;\n    var accabbcabcabc\
    \ = ac * cabbcabcab;\n    var abacabcabbcabc = ab * acabbcabbcabc;\n    var abacabbcabbcabc\
    \ = ab * acabbcabbcabc;\n    var abacbcabcabcab = ab * acbcabcabcab;\n    var\
    \ acabcabbcabcabc = ac * abcabbcabcabc;\n    var acabbcabcabcab = ac * abbcabcabcab;\n\
    \    var acbcabcabcabbc = ac * cabcabbcabbc;\n    var accabbcabcabbc = ac * cabcabbcabbc;\n\
    \    var abacabcabcabbcabc = ab * acabcabbcabbcabc;\n    var abacabbcab", "  \
    \  var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle\
    \ = Math.abs(ab) > Math.abs(ac) && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if the triangle is rotated 180\
    \ degrees. In that case, the triangle is considered a right angle triangle but\
    \ its sides aren't actually right angles.\n<|/ c |>\n<| c |>\nI believe this answer\
    \ should be updated to reflect this change. Thanks!\n<|/ c |>\n<| a dscore=5 |>\n\
    The simplest way to check if a triangle is right angle is by using the dot product\
    \ of the vectors formed by the three points. If the dot product is zero, then\
    \ the triangle is right angle. \n<code>", "  var a1 = Math.abs(a);\n  var b1 =\
    \ Math.abs(b);\n  var c1 = Math.abs(c);\n  var angle = Math.acos((a1 * b1 + c1\
    \ * a1 - c1 * b1) / (2 * a1 * c1));\n  return angle < Math.PI/2;\n}\n", "\tvar\
    \ ab = a - b;\n\tvar ac = a - c;\n\tvar bc = b - c;\n\tvar abc = ab + ac + bc;\n\
    \treturn (abc >= 0);\n}\n", "    var ab = a - b;\n    var ac = a - c;\n    var\
    \ bc = b - c;\n    var acb = ac * bc;\n    var abc = ab * bc;\n    var abbc =\
    \ ab * bc;\n    var acbc = ac * bc;\n    var acbc_abc = acbc * abc;\n    var abc_acb\
    \ = abc * acb;\n    var abc_acbc = abc * acbc;\n    var acbc_abbc = acbc * abbc;\n\
    \    var acbc_abc_abc = acbc_abc * abc;\n    var abc_acbc_abbc = abc_acbc * abbc;\n\
    \    var abc_acbc_abc_abc = abc_acbc_abc * abc;\n    var acbc_abc_abbc_acb = acbc_abc_abbc\
    \ * acb;\n    var acbc_abc_abbc_acbc = acbc_abc_abbc * acbc;\n    var acbc_abc_abbc_acbc_abc\
    \ = acbc_abc_abbc * acbc_abc;\n    var acbc_abc_abbc_acbc_abc_abc = acbc_abc_abbc\
    \ * acbc_abc * abc;\n    var acbc_abc_abbc_acbc_abc_abc_abc = acbc_abc_abbc *\
    \ acbc_abc * abc * abc;\n    var acbc_abc_abbc_acbc_abc_abc_abc_abc = acbc_abc_abbc\
    \ * acbc_abc * abc * abc * abc;\n    var acbc_abc_abbc_acbc_abc_abc_abc_abc_abc\
    \ = acbc_abc_abbc * acbc_abc * abc * abc * abc * abc;\n    var acbc_abc_abbc_acbc_abc_abc_abc_abc_abc_abc\
    \ = acbc_abc_abbc * acbc_abc * abc * abc * abc * abc * abc;\n    var acbc_abc_abbc_acbc_abc_abc_abc_abc_abc_abc_abc\
    \ = acbc_abc_abbc * acbc_abc * abc * abc * abc * abc * abc * abc;\n    var acbc_abc_abbc_acbc_abc_abc_abc_abc_abc_abc_abc_abc\
    \ = acbc_", "    if (Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(b, 2)) - Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2)) ) < 0.00001){\n\
    \        return true;\n    }\n    return false;\n}\n", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=javascript,geometry |>\n<code>", "\tif((b - a) * (c\
    \ - b) <= 0){\n\t\treturn false;\n\t}\n\telse{\n\t\treturn true;\n\t}\n}\n", " \
    \   return (((b - a) * (c - b)) > 0)\n}\n", "    var ab = a - b;\n    var ac =\
    \ a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab) > Math.abs(ac)\
    \ && Math.abs(bc) > Math.abs(ab);\n    return is_right_angle;\n}\n</code>\n<|/\
    \ a tags=javascript,geometry,math |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `false` instead of `true`.\n<|/ c |>\n<| c |>\nThanks for pointing that\
    \ out. I've updated the answer to fix the bug.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. `right_angle_triangle(1,1,1)` returns `false` instead of `true`.\n<|/\
    \ c |>\n<| c |>\nThanks for pointing that out. I've updated the answer to fix\
    \ the bug.\n<|/ c |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `false` instead of `true`.\n<|/ c |>\n<| a dscore=5 |>\n<code>", " \
    \   var ab = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    var ac = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n    var bc = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\
    \    return (ab + ac - bc) == 0;\n}\n</code>\n<|/ a tags=javascript,geometry,math\
    \ |>\n<| c |>\nThis doesn't work. Try it with the triangle `(-2, -1, 0)`.\n<|/\
    \ c |>\n<| c |>\nI didn't downvote, but I suspect it's because you didn't explain\
    \ what it does. Also, your function doesn't return `true` if the triangle is `(-2,\
    \ -1, 0)`.\n<|/ c |>\n<| c |>\nI added a description of the algorithm.\n<|/ c\
    \ |>\n<| c |>\nI added a description of the algorithm.\n<|/ c |>\n<| c |>\nI added\
    \ a description of the algorithm.\n<|/ c |>\n<| a |>\n<code>", "    var ab = a\
    \ - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle = Math.abs(ab\
    \ - ac) <= Math.abs(bc - ab);\n    return is_right_angle;\n}\n", "    var ab =\
    \ a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var acb = ac * bc;\n \
    \   var abc = ab * bc;\n    return ((ab > 0 && ac > 0 && abc > acb) || (ab < 0\
    \ && ac < 0 && abc < acb));\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't\
    \ work. Try it with the triangle `(-10, -10, 10)`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. Try it with the triangle `(-10, -10, 10)`\n<|/ c |>\n<| c |>\nIt works.\
    \ I tested it with the triangle (-10, -10, 10)\n<|/ c |>\n<| c |>\nIt works. I\
    \ tested it with the triangle (-10, -10, 10)\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it with the triangle (-10, -10, 10)\n<|/ c |>\n<| a dscore=1 |>\n<code>", " \
    \   var ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var ab_ac =\
    \ Math.sqrt(ab*ab + ac*ac);\n    var bc_ac = Math.sqrt(bc*bc + ac*ac);\n    var\
    \ ab_bc = Math.sqrt(ab*ab + bc*bc);\n    return ab_ac >= bc_ac && ab_bc >= ab_ac;\n\
    }\n</code>\n<|/ a tags=javascript,math |>\n<| c |>\nThis doesn't seem to work\
    \ for me. `right_angle_triangle(5,5,5)` returns `true` but `right_angle_triangle(5,5,4)`\
    \ returns `false`\n<|/ c |>\n<| c |>\nThis doesn't seem to work for me. `right_angle_triangle(5,5,5)`\
    \ returns `true` but `right_angle_triangle(5,5,4)` returns `false`\n<|/ c |>\n\
    <| c |>\nI added a link to my answer that explains why this works.\n<|/ c |>\n\
    <| c |>\nI added a link to my answer that explains why this works.\n<|/ c |>\n\
    <| c |>\nI added a link to my answer that explains why this works.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>", "    if (Math.abs(Math.sin(a)) < Math.abs(Math.sin(b))\
    \ && Math.abs(Math.sin(a)) < Math.abs(Math.sin(c))){\n        return true;\n \
    \   }\n    return false;\n}\n</code>\n<|/ a tags=javascript,trigonometry,math\
    \ |>\n<| c |>\nThis doesn't work. `Math.sin(a)` will always be `0` because `a`\
    \ is an angle in radians.\n<|/ c |>\n<| c |>\nI didn't say it wouldn't, I said\
    \ it wouldn't. `Math.sin(a)` will always be `0` because `a` is an angle in radians.\
    \ `Math.sin(a)` will always be `0` because `a` is an angle in radians. `Math.sin(a)`\
    \ will always be `0` because `a` is an angle in radians. `Math.sin(a)` will always\
    \ be `0` because `a` is an angle in radians. `Math.sin(a)` will always be `0`\
    \ because `a` is an angle in radians. `Math.sin(a)` will always be `0` because\
    \ `a` is an angle in radians. `Math.sin(a)` will always be `0` because `a` is\
    \ an angle in radians. `Math.sin(a)` will always be `0` because `a` is an angle\
    \ in radians. `Math.sin(a)` will always be `0` because `a` is an angle in radians.\
    \ `Math.sin(a)` will always be `0` because `a` is an angle in radians. `Math.sin(a)`\
    \ will always be `0` because `a` is an angle in radians. `Math.sin(a)` will always\
    \ be `0` because `a` is an angle in radians. `Math.sin(a)` will always be `0`\
    \ because `a` is an angle in radians. `Math.sin(a)` will always be `0` because\
    \ `a` is an angle in radians. `Math.sin(a)` will always be `0` because `a` is\
    \ an angle in radians. `Math.sin(a)` will always be `0` because `a` is an angle\
    \ in radians. `Math.sin(a)` will always be `0` because `a` is an angle in radians.\
    \ `Math.sin(a)` will always be `0` because `a` is an angle in radians. `Math.sin(a)`\
    \ will always be `0` because `a` is an angle in radians. `Math.sin(a)` will always\
    \ be `0` because `a` is an angle in radians. `Math.sin(a)` will always be `0`\
    \ because `a` is an angle in radians. `Math.sin(a)` will always be ", "    var\
    \ ab = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var det = ab*ac -\
    \ bc*bc;\n    return det < 0;\n}\n", "    var ab = a - b;\n    var ac = a - c;\n\
    \    var bc = b - c;\n    var abc = ab + ac + bc;\n    return abc > 0;\n}\n</code>\n\
    <|/ a tags=javascript,math |>\n<| c |>\nThis doesn't work. `right_angle_triangle(3,5,6)`\
    \ returns `true` but `right_angle_triangle(3,5,4)` returns `false`.\n<|/ c |>\n\
    <| c |>\nI fixed the bug, thanks for pointing it out. Now it works.\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>", "\tif((Math.abs(a) > Math.abs(b) && Math.abs(a) > Math.abs(c))\
    \ || (Math.abs(b) > Math.abs(a) && Math.abs(b) > Math.abs(c)) || (Math.abs(c)\
    \ > Math.abs(a) && Math.abs(c) > Math.abs(b))){\n\t\treturn false;\n\t}\n\telse{\n\
    \t\treturn true;\n\t}\n}", "    var ab = a - b;\n    var ac = a - c;\n    var\
    \ bc = b - c;\n    var acb = ac * bc;\n    var abc = ab * bc;\n    var acbc =\
    \ acb * bc;\n    var abbc = abb * bc;\n    var acbcbc = acbcb * bc;\n    var abcbc\
    \ = abcb * bc;\n    var acbcbcbc = acbcbcb * bc;\n    var abcbcbc = abcbcb * bc;\n\
    \    var acbcbcbcbc = acbcbcbcb * bc;\n    var abcbcbcbc = abcbcbcb * bc;\n  \
    \  var acbcbcbcbcbc = acbcbcbcbc * bc;\n    var abcbcbcbcbc = abcbcbcbc * bc;\n\
    \    var acbcbcbcbcbcbc = acbcbcbcbcbc * bc;\n    var abcbcbcbcbcbc = abcbcbcbcbc\
    \ * bc;\n    var acbcbcbcbcbcbcbc = acbcbcbcbcbcbc * bc;\n    var abcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbc * bc;\n    var acbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbc * bc;\n\
    \    var abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbc * bc;\n    var acbcbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbcbc * bc;\n    var abcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbc\
    \ * bc;\n    var acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbc * bc;\n    var\
    \ abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbc * bc;\n    var acbcbcbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbcbcbcbc * bc;\n    var abcbcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbcbc\
    \ * bc;\n    var acbcbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbcbc * bc;\n \
    \   var abcbcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbcbcbc * bc", "  var ab = a\
    \ - b;\n  var ac = a - c;\n  var bc = b - c;\n  var is_right_angle = Math.abs(ab)\
    \ > Math.abs(ac) + Math.abs(bc);\n  return is_right_angle;\n}\n", "    var ab\
    \ = a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var is_right_angle =\
    \ Math.abs(ab) > Math.abs(ac) + Math.abs(bc);\n    return is_right_angle;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>", "    var a1 = Math.abs(a);\n   \
    \ var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n    var a2 = a1 + b1;\n  \
    \  var b2 = b1 + c1;\n    var c2 = c1 + a1;\n    return ((a2 + b2 <= c2) || (a2\
    \ + c2 <= b2) || (b2 + c2 <= a2));\n}\n", "\tif(a==b){\n\t\treturn c==b;\n\t}\n\
    \tif(a==c){\n\t\treturn b==c;\n\t}\n\treturn a==b||a==c||b==c;\n}\n", "    var\
    \ a1 = Math.abs(a);\n    var b1 = Math.abs(b);\n    var c1 = Math.abs(c);\n  \
    \  var angle = Math.acos((a*a + b*b + c*c)/(a1*b1 + c1*c1));\n    return angle\
    \ < Math.PI/2;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "    var ab =\
    \ a - b;\n    var ac = a - c;\n    var bc = b - c;\n    var abc = ab + ac;\n \
    \   var bcd = bc + ab;\n    var abdc = ab + bc;\n    var acbc = ac + bc;\n   \
    \ var abcab = abc + ab;\n    var abcbc = abc + bc;\n    var abccb = abc + cb;\n\
    \    var acbca = acbc + ab;\n    var accab = acbc + ac;\n    var acccb = acbc\
    \ + cb;\n    var acccab = accab + ac;\n    var acccba = accab + cb;\n    var acccbc\
    \ = acccba + ac;\n    var acccbb = acccba + cb;\n    var acccabc = acccbb + ac;\n\
    \    var acccabb = acccbb + cb;\n    var acccbacd = acccabc + ac;\n    var acccbca\
    \ = acccabc + cb;\n    var acccbacd = acccbca;\n    var acccbacd = acccbacd +\
    \ ac;\n    var acccbacd = acccbacd + cb;\n    var acccbacd = acccbacd + ac;\n\
    \    var acccbacd = acccbacd + cb;\n    var acccbacd = acccbacd + ac;\n    var\
    \ acccbacd = acccbacd + cb;\n    var acccbacd = acccbacd + ac;\n    var acccbacd\
    \ = acccbacd + cb;\n    var acccbacd = acccbacd + ac;\n    var acccbacd = acccbacd\
    \ + cb;\n    var acccbacd = acccbacd + ac;\n    var acccbacd = acccbacd + cb;\n\
    \    var acccbacd = acccbacd + ac;\n    var acccbacd = acccbacd + cb;\n    var\
    \ acccbacd = acccbacd + ac;\n    var acccbacd = acccbacd + cb;\n    var acccbacd\
    \ = acccbacd + ac;\n    var acccbacd = acccbacd + cb;\n    var acccbacd = acccbacd\
    \ + ac;\n    var acccbacd = acccbacd + cb;\n    var acccbacd = acccbacd + ac;\n\
    \    var acccbacd = acccbacd + cb;\n    var acccbacd = acccbacd + ac;\n    var\
    \ acccbacd = acccbacd + cb;\n    var acccbacd = accc", "    var ab = a - b;\n\
    \    var ac = a - c;\n    var bc = b - c;\n    var det = ab * ac - bc * bc;\n\
    \    if(det < 0){\n        return false;\n    }\n    var s = Math.sqrt(ab * ab\
    \ + ac * ac + bc * bc);\n    var angle = Math.acos((ab * ac + bc * bc) / s); \n\
    \    return Math.abs(angle - 90) < 0.1;\n}\n</code>\n<|/ a |>\n<| c |>\nThis is\
    \ not the right answer. Your code returns true if the triangle is right angled,\
    \ not if the triangle is right angled or 90 degree.\n<|/ c |>\n<| c |>\nI believe\
    \ that is the right answer. Can you give an example of a triangle that is not\
    \ right angled?\n<|/ c |>\n<| c |>\nThe triangle is right angled if the hypotenuse\
    \ is greater than the adjacent sides. So the triangle is right angled if its hypotenuse\
    \ is greater than the adjacent sides. If the hypotenuse is less than the adjacent\
    \ sides, then the triangle is not right angled.\n<|/ c |>\n<| c |>\nI believe\
    \ that is the right answer. Can you give an example of a triangle that is not\
    \ right angled?\n<|/ c |>\n<| c |>\nI believe that is the right answer. Can you\
    \ give an example of a triangle that is not right angled?\n<|/ c |>\n<| a tags=geometry,javascript,trigonometry,math\
    \ |>\nThe answer by is correct, but I thought I'd post my own answer because I\
    \ wanted to see how it compared to the other answers. \nI used the formula from\
    \ Wikipedia to calculate the area of a right angled triangle. \n<code>"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_85_add
language: js
results:
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      even.push(lst[i]);\n   \
    \ }\n  }\n  return even;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp9lu6lpkl.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9lu6lpkl.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n          \
    \  even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpkypeud98.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkypeud98.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpmqqxpmhg.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmqqxpmhg.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i< lst.length; i++){\n        if(lst[i] % 2 === 0){\n       \
    \     even.push(lst[i]);\n        }\n    }\n    return even;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpa297j9j4.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa297j9j4.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for (let\
    \ i = 0; i < lst.length; i++){\n    if (i % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpd79edkoj.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpd79edkoj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp5daxi039.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5daxi039.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i]%2 === 0){\n      even.push(lst[i]);\n\
    \    }\n  }\n  return even;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplmfwsm14.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmplmfwsm14.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpejj11sor.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpejj11sor.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpywvaszgp.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpywvaszgp.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpestzb1ek.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpestzb1ek.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpxsjch81i.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxsjch81i.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i< lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp3aeodk6l.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3aeodk6l.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpi8cv6f39.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi8cv6f39.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  var\
    \ odd = [];\n  for(var i=0; i<lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i]);\n\
    \    }else{\n      odd.push(lst[i]);\n    }\n  }\n  return even.concat(odd);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpnq9p4esq.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnq9p4esq.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = []\n  for(var\
    \ i = 0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpleykfykw.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpleykfykw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpdjq9mvw_.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdjq9mvw_.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp_0rgazwn.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_0rgazwn.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      even.push(lst[i]);\n\
    \    }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp2wazm1zo.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2wazm1zo.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpe5kp4fyq.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe5kp4fyq.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp9vtlv3w6.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9vtlv3w6.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n</code>\n<|/ a tags=arrays,javascript,function\
    \ |>\n<| a tags=arrays,javascript,function |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8e_jjesu.js:12\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp5hjz6zkg.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5hjz6zkg.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n           \
    \ evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpgp67j8m1.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgp67j8m1.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n           \
    \ even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmp3nhenopz.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp3nhenopz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i< lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpxhoosafb.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxhoosafb.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i< lst.length; i++){\n        if(lst[i]%2 === 0){\n         \
    \   even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpbkr9uwy3.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbkr9uwy3.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmp45vqv2u0.js:12:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp45vqv2u0.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpujbeb4wu.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpujbeb4wu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpz55oo2i6.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz55oo2i6.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpaapa6eet.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaapa6eet.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpiud8n9vx.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiud8n9vx.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpl76w3npc.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl76w3npc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp6y0n91fm.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6y0n91fm.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpdyadzdyf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdyadzdyf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp6chu15y0.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6chu15y0.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpue7qtyg7.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpue7qtyg7.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpby7g73l5.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpby7g73l5.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp6pf760ri.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6pf760ri.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpqpddw079.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqpddw079.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    for(var i = 0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 === 1){\n            lst[i] += lst[i-1];\n      \
    \      lst[i-1] = 0;\n        }\n    }\n    return lst;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp7uummfsd.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7uummfsd.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmper_3x7ml.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmper_3x7ml.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n         \
    \   evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp8kcfo5cf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8kcfo5cf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpy1f2e1vw.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy1f2e1vw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ var odd = [];\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 ===\
    \ 0){\n            even.push(lst[i]);\n        }else{\n            odd.push(lst[i]);\n\
    \        }\n    }\n    return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplev3v5az.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmplev3v5az.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  let odd\
    \ = []\n  for (let i = 0; i < lst.length; i++){\n    if (i % 2 === 0){\n     \
    \ even.push(lst[i])\n    } else {\n      odd.push(lst[i])\n    }\n  }\n  return\
    \ even.concat(odd)\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp_4xxq0k6.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_4xxq0k6.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n           \
    \ even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmplm3n2u0y.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmplm3n2u0y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpczujief7.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpczujief7.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp95h9aafn.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp95h9aafn.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\n</code>\n<|/ a tags=javascript,arrays,function\
    \ |>\n<| a tags=javascript,arrays,function |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprhoz10zr.js:12\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpk3j9omvf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk3j9omvf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpblnnhjq_.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpblnnhjq_.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpccg8rdfv.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpccg8rdfv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = [];\n  let\
    \ odd  = [];\n  for(let i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n \
    \     even.push(lst[i]);\n    }else{\n      odd.push(lst[i]);\n    }\n  }\n  return\
    \ even.concat(odd);\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpj3vmoirf.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj3vmoirf.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpkjysizp9.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkjysizp9.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpw3ulfpmu.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw3ulfpmu.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpg_zphb2k.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg_zphb2k.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpk_369f3k.js:12\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]%2==0){\n            lst[i]+=lst[i+1];\n            lst[i+1]=0;\n\
    \        }\n    }\n    return lst;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp7ndimjsf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7ndimjsf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ is not the best solution. `filter` will create a new array and `map` will create\
    \ a new array too. `reduce` will create a new array and `forEach` will create\
    \ a new array too. `reduceRight` will create a new array and `every` will create\
    \ a new array too. `some` will create a new array and `every` will create a new\
    \ array too. `some` will create a new array and `every` will create a new array\
    \ too. `some` will create a new array and `every` will create a new array too.\
    \ `some` will create a new array and `every` will create a new array too. `some`\
    \ will create a new array and `every` will create a new array too. `some` will\
    \ create a new array and `every` will create a new array too. `some` will create\
    \ a new array and `every` will create a new array too. `some` will create a new\
    \ array and `every` will create a new array too. `some` will create a new array\
    \ and `every` will create a new array too. `some` will create a new array and\
    \ `every` will create a new array too. `some` will create a new array and `every`\
    \ will create a new array too. `some` will create a new array and `every` will\
    \ create a new array too. `some` will create a new array and `every` will create\
    \ a new array too. `some` will create a new array and `every` will create a new\
    \ array too. `some` will create a new array and `every` will create a new array\
    \ too. `some` will create a new array and `every` will create a new array too.\
    \ `some` will create a new array and `every` will create a new array too. `some`\
    \ will create a new array and `every` will create a new array too. `some` will\
    \ create a new array and `every` will create a new array too. `some` will create\
    \ a new array and `every` will create a new array too. `some` will create a new\
    \ array and `every` will create a new array too. `some` will create a new array\
    \ and `every` will create a new array too. `some` will create a new array and\
    \ `every` will create a new array too. `some` will create a new array and `every`\
    \ will create a new array too. `some` will create a new array and `every` will\
    \ create a new array too. `some` will create a new array and `every` will create\
    \ a new array too. `some` will create a new array and `every` will create a new\
    \ array too. `\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpogk8eio4.js:12\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp705pawm_.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp705pawm_.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp3s52fibm.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3s52fibm.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n          \
    \  even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp6vp00n8k.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6vp00n8k.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpmjfdvbny.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmjfdvbny.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpxyfrhgg2.js:11:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpxyfrhgg2.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpdwv6qn0h.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdwv6qn0h.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n     \
    \       evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplmm3tq2m.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmplmm3tq2m.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpefso6hxo.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpefso6hxo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp2qxxyz1z.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2qxxyz1z.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp1avbftts.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1avbftts.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpr3cuevrn.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3cuevrn.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n           \
    \ evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp43upq2cx.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp43upq2cx.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpet78cyyn.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpet78cyyn.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i]%2==0){\n      even.push(lst[i]);\n \
    \   }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpz2wo86fw.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz2wo86fw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmptpc910hy.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmptpc910hy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpt8myb6af.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt8myb6af.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = [];\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i]);\n\
    \    }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpdt38o9la.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdt38o9la.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var evens = [];\n  for(var\
    \ i = 0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      evens.push(lst[i]);\n\
    \    }\n  }\n  return evens;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwl80ogiz.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwl80ogiz.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i<lst.length; i++){\n        if(lst[i] % 2 === 0){\n        \
    \    even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp4y2j5i2n.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4y2j5i2n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpq6umxd32.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpq6umxd32.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\nvar arr = [1, 2, 3, 4, 5];\nvar even = [];\nvar\
    \ odd = [];\n\nfor (var i = 0; i <= arr.length; i++) {\n  if (arr[i] % 2 === 0)\
    \ {\n    even.push(arr[i]);\n  } else {\n    odd.push(arr[i]);\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp78k91ixi.js:12\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpkshi5g2a.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpkshi5g2a.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplbk4_soj.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmplbk4_soj.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    for(let i=0; i<lst.length;\
    \ i++){\n        if(lst[i]%2==0){\n            lst[i]+=lst[i+1];\n           \
    \ lst[i+1]=0;\n        }\n    }\n    return lst;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpqjhad95z.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjhad95z.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpuxmmyqiy.js:12:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpuxmmyqiy.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp8xr8wy4t.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8xr8wy4t.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp2dqm_a37.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2dqm_a37.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpmvru0xf2.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmvru0xf2.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0){\n            lst[i] += lst[lst.length-1];\n\
    \            lst.pop();\n        }\n    }\n    return lst;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  92\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmp7ebq17j3.js:17:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp7ebq17j3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 92 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwcu59jr1.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwcu59jr1.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = []\n  for(var\
    \ i = 0; i<lst.length; i++){\n    if(lst[i]%2==0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpzc7rz57z.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzc7rz57z.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpqv4busup.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqv4busup.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwpsmckaf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwpsmckaf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmprjmz4hno.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmprjmz4hno.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmppx5j9c_z.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmppx5j9c_z.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp7pl1pr8w.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7pl1pr8w.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n     \
    \       evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp2n4b81zf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2n4b81zf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpubo_n6q8.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpubo_n6q8.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp4nde3ycl.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4nde3ycl.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpgidojpkr.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgidojpkr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n     \
    \       evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmphbdougar.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmphbdougar.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpp71ywqb4.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp71ywqb4.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n         \
    \   evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpmrx38vlt.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmrx38vlt.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n           \
    \ evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7w2_7mbq.js:12\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp8haps4lz.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8haps4lz.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  let odd\
    \ = []\n  for(let i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n\
    \    }else{\n      odd.push(lst[i])\n    }\n  }\n  return even.concat(odd)\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpvys32ow7.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvys32ow7.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpiicx31di.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiicx31di.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp2go7ohpy.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2go7ohpy.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpl4snjuyj.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl4snjuyj.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpeervlijc.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeervlijc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpgmh_90pp.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgmh_90pp.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp50xfpwk_.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp50xfpwk_.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp6n8dh7ok.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6n8dh7ok.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var evens = [];\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      evens.push(lst[i]);\n  \
    \  }\n  }\n  return evens;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp1x3tgw4n.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1x3tgw4n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpq25c9h6a.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq25c9h6a.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for (let\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp80a2k5jo.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp80a2k5jo.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp8jb61k_q.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8jb61k_q.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpv2kn6lyj.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv2kn6lyj.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    for(var i = 0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 === 0){\n            lst[i] += lst[i-1];\n      \
    \      lst[i-1] = 0;\n        }\n    }\n    return lst;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  NaN,\n\
    \  '-1': 0\n]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp23skibla.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp23skibla.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, NaN,\
    \ '-1': 0 ],\n  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n          \
    \  evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpstgx9o0_.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpstgx9o0_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpkn0qs3r8.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkn0qs3r8.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ var odd = [];\n    for(var i = 0; i<lst.length; i++){\n        if(lst[i]%2 ===\
    \ 0){\n            even.push(lst[i]);\n        }else{\n            odd.push(lst[i]);\n\
    \        }\n    }\n    return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmphgd6bve4.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphgd6bve4.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpy1l8_2u2.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy1l8_2u2.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i<lst.length; i++){\n        if(lst[i] % 2 === 0){\n        \
    \    even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpqakmamgg.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqakmamgg.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpn821dw9a.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn821dw9a.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = []\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      even.push(lst[i])\n    }\n\
    \  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpg9u0wdhc.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg9u0wdhc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = []\n  for(var\
    \ i=0; i<lst.length; i++){\n    if(lst[i]%2==0){\n      even.push(lst[i])\n  \
    \  }\n  }\n  return even\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp29dhyklv.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp29dhyklv.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp4bxaikev.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4bxaikev.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmppj0of2po.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmppj0of2po.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = [];\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i]);\n\
    \    }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpuho9d9q9.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpuho9d9q9.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp1iqc2udw.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1iqc2udw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpqylc4260.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqylc4260.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpgii9zleh.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgii9zleh.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpgdj4bpwv.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgdj4bpwv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpyvbm1c3p.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyvbm1c3p.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpqqalfv58.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqqalfv58.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i< lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpslntttyv.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpslntttyv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpopwsna3w.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpopwsna3w.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = []\n  for(var\
    \ i = 0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmphdpho1nf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmphdpho1nf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    for(var i = 0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 != 0){\n            lst[i] += lst[i];\n        }\n\
    \    }\n    return lst;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpsj7i2dbp.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsj7i2dbp.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  for(var\
    \ i = 0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      even.push(lst[i]);\n\
    \    }\n  }\n  return even;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwreubl1y.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwreubl1y.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i=0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i]);\n\
    \        }\n    }\n    return even;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwugh_pgp.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwugh_pgp.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpo8q45mt6.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo8q45mt6.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpq0xmma6d.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq0xmma6d.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmppo7gcocz.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmppo7gcocz.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp9iyz2bgw.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9iyz2bgw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplibvgznd.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmplibvgznd.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpq2lc675z.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq2lc675z.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp3eo_ag4y.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3eo_ag4y.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  let odd\
    \  = []\n  for(let i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n\
    \    }else{\n      odd.push(lst[i])\n    }\n  }\n  return even.concat(odd)\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp97pezal9.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp97pezal9.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp_d1y2g_h.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_d1y2g_h.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpxzst1vs1.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxzst1vs1.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n          \
    \  evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmp0s6yzib5.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp0s6yzib5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  let odd\
    \ = []\n  for(let i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n\
    \    }else{\n      odd.push(lst[i])\n    }\n  }\n  return even.concat(odd)\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpvswga3gp.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvswga3gp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp0ge07pej.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0ge07pej.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i=0; i<lst.length; i++){\n        if(lst[i]%2==0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp476ynux7.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp476ynux7.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpfu1xoec7.js:11:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpfu1xoec7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpndw2qd_9.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpndw2qd_9.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpfoawpw97.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpfoawpw97.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ let odd  = [];\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 ===\
    \ 0){\n            even.push(lst[i]);\n        }else{\n            odd.push(lst[i]);\n\
    \        }\n    }\n    return even.concat(odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmptyl862ao.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmptyl862ao.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmppr9acx9c.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmppr9acx9c.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  var\
    \ odd = [];\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2==0){\n      even.push(lst[i]);\n\
    \    }else{\n      odd.push(lst[i]);\n    }\n  }\n  return even.concat(odd);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpaa7w97d1.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaa7w97d1.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwmctiyju.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwmctiyju.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  let odd\
    \  = []\n  lst.forEach((el, i) => {\n    if (i % 2 === 0){\n      even.push(el)\n\
    \    }else{\n      odd.push(el)\n    }\n  })\n  return even.concat(odd)\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n\
    \  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpnq8zm5pe.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnq8zm5pe.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp1eqotf5i.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1eqotf5i.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n     \
    \       evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp8_9dhu7v.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8_9dhu7v.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for (let\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpn94zx8g2.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn94zx8g2.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp97s_nfvk.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp97s_nfvk.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    let\
    \ odd = []\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n\
    \            even.push(lst[i])\n        }else{\n            odd.push(lst[i])\n\
    \        }\n    }\n    return even.concat(odd)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmplnhmujlf.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmplnhmujlf.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpnrxaajeu.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnrxaajeu.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmph1l_ajzf.js:11:10)\n   \
    \ at Object.<anonymous> (/tmp/tmph1l_ajzf.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for (let\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpy5ios8iq.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy5ios8iq.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpo0vutmbp.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo0vutmbp.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  var even = [];\n  for(var\
    \ i = 0; i<lst.length; i++){\n    if(lst[i]%2 === 0){\n      even.push(lst[i]);\n\
    \    }\n  }\n  return even;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmph1dqngpv.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmph1dqngpv.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    let\
    \ odd = []\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n\
    \            even.push(lst[i])\n        }else{\n            odd.push(lst[i])\n\
    \        }\n    }\n    return even.concat(odd)\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp4qd7q01l.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4qd7q01l.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n     \
    \       evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpszuhnan3.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpszuhnan3.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp8c3xyphn.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8c3xyphn.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp1guh848v.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1guh848v.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n     \
    \       evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpzi6ood3a.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzi6ood3a.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0; i<lst.length; i++){\n        if(lst[i] % 2 === 0){\n         \
    \   evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpap69w0lc.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpap69w0lc.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpjdoecauk.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjdoecauk.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwk_250lm.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwk_250lm.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i< lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpgpfubkyf.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgpfubkyf.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = [];\n   \
    \ for(var i = 0; i<lst.length; i++){\n        if(lst[i] % 2 === 0){\n        \
    \    even.push(lst[i]);\n        }\n    }\n    return even;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpn1mczslw.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn1mczslw.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    for(var i = 0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 === 0){\n            lst[i] += lst[(i+1)%lst.length];\n\
    \            lst[(i+1)%lst.length] = 0;\n        }\n    }\n    return lst;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
    \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  92\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpwxpl6zue.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwxpl6zue.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 92 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpjkn6_0zt.js:11:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpjkn6_0zt.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpha6dn0nw.js:12:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpha6dn0nw.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i]%2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpnbhomxeh.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnbhomxeh.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    let\
    \ odd = []\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n\
    \            even.push(lst[i])\n        }else{\n            odd.push(lst[i])\n\
    \        }\n    }\n    return even.concat(odd)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpn0p6ud21.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn0p6ud21.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    let\
    \ odd  = []\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n\
    \            even.push(lst[i])\n        }else{\n            odd.push(lst[i])\n\
    \        }\n    }\n    return even.concat(odd)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpbs7283y3.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbs7283y3.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    \n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpfo3609xf.js:12:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpfo3609xf.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let evens = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n     \
    \       evens.push(lst[i]);\n        }\n    }\n    return evens;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpf72d1hqd.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf72d1hqd.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpttepnxpv.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpttepnxpv.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var even = []\n    for(var\
    \ i = 0; i<lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmppv7dcr1b.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmppv7dcr1b.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n      \
    \      even.push(lst[i]);\n        }\n    }\n    return even;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = add;\n \
    \ assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4, 5,\
    \ 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
    \ 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmph7s5h5ym.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmph7s5h5ym.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n  let even = []\n  for(let\
    \ i = 0; i < lst.length; i++){\n    if(i % 2 === 0){\n      even.push(lst[i])\n\
    \    }\n  }\n  return even\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4, 88]),88);\n\
    \  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n88\n    at test (/tmp/tmpr7v5_9q5.js:17:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpr7v5_9q5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmp6ydj02xn.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6ydj02xn.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    var evens = [];\n  \
    \  for(var i=0;i<lst.length;i++){\n        if(lst[i]%2==0){\n            evens.push(lst[i]);\n\
    \        }\n    }\n    return evens;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpmiw1vthb.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmiw1vthb.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a non-empty list of integers lst. add the even elements that are\
    \ at odd indices..\n// Examples:\nfunction add(lst){\n    let even = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0){\n            even.push(lst[i])\n\
    \        }\n    }\n    return even\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = add;\n  assert.deepEqual(candidate([4,\
    \ 88]),88);\n  assert.deepEqual(candidate([4, 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4,\
    \ 0, 6, 7]),0);\n  assert.deepEqual(candidate([4, 4, 6, 8]),12);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  88\n\
    ]\n\nshould loosely deep-equal\n\n88\n    at test (/tmp/tmpp9cxki4k.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp9cxki4k.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 88 ],\n\
    \  expected: 88,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

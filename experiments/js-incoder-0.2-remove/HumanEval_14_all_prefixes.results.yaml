name: HumanEval_14_all_prefixes
language: js
results:
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmph_14msi9.js:17:10)\n    at Object.<anonymous> (/tmp/tmph_14msi9.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp8ptm3gmz.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8ptm3gmz.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ !== prefix){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n  }\n\
    \  prefixes.push(prefix);\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp4a3i43ss.js:21:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4a3i43ss.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tprefixes.push(string.slice(0, i));\n\t}\n\treturn prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvtj3zwpv.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvtj3zwpv.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var current_prefix = \"\
    \";\n  for(var i = 0; i < string.length; i++){\n    if(string[i] === \" \" ||\
    \ string[i] === \"\\t\" || string[i] === \"\\n\"){\n      prefixes.push(current_prefix);\n\
    \      current_prefix = \"\";\n    }else{\n      current_prefix += string[i];\n\
    \    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmppyyb0fio.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmppyyb0fio.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var current_prefix = \"\
    \";\n  for(var i=0;i<string.length;i++){\n    if(string[i]===\" \"){\n      prefixes.push(current_prefix);\n\
    \      current_prefix = \"\";\n    }else{\n      current_prefix += string[i];\n\
    \    }\n  }\n  prefixes.push(current_prefix);\n  return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpknip2y1x.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpknip2y1x.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] === string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmprbf2v682.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprbf2v682.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp9m1gsxm7.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9m1gsxm7.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpe9s82jye.js:16:10)\n    at Object.<anonymous> (/tmp/tmpe9s82jye.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpyvgzl_de.js:21:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpyvgzl_de.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    var i = 0;\n    while(i < len){\n        prefixes.push(string.substr(i, len));\n\
    \        i += len;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpbskldmhf.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbskldmhf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpn5pi300v.js:17:10)\n    at Object.<anonymous> (/tmp/tmpn5pi300v.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i <= string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpu1qy13em.js:15:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpu1qy13em.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var i = string.length;\n\
    \  while (i--){\n    prefixes.unshift(string.substr(0,i));\n  }\n  return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpf0h350d9.js:17:10)\n    at Object.<anonymous> (/tmp/tmpf0h350d9.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    var current_prefix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char == \" \"){\n  \
    \          prefixes.push(current_prefix);\n            prefix_length++;\n    \
    \        current_prefix = \"\";\n        }else{\n            current_prefix +=\
    \ char;\n        }\n    }\n    prefixes.push(current_prefix);\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpp96vnk67.js:25:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpp96vnk67.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp063fob9b.js:16:10)\n    at Object.<anonymous> (/tmp/tmp063fob9b.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i=0;i<string.length;i++){\n        prefix = prefix + string[i];\n\
    \        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i<len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmptekvhmto.js:17:10)\n    at Object.<anonymous> (/tmp/tmptekvhmto.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpxrt7wqya.js:16:10)\n    at Object.<anonymous> (/tmp/tmpxrt7wqya.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp8y_e_kra.js:16:10)\n    at Object.<anonymous> (/tmp/tmp8y_e_kra.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var i = 0;\n    while(i\
    \ < string.length){\n        prefixes.push(string.substr(i, string.length));\n\
    \        i += 1;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp0u_ycldz.js:18:10)\n    at Object.<anonymous> (/tmp/tmp0u_ycldz.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'sdfgh', 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] === string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp434sg13p.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp434sg13p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar prefix = '';\n\tvar\
    \ i = 0;\n\twhile(i < string.length){\n\t\tprefix = prefix + string.charAt(i);\n\
    \t\ti++;\n\t\tif(string.charAt(i) == string.charAt(string.length - 1)){\n\t\t\t\
    prefixes.push(prefix);\n\t\t\tprefix = '';\n\t\t}\n\t}\n\treturn prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfg'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpj7xj_cvc.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj7xj_cvc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string.charAt(i);\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.length == 0 || prefixes[prefixes.length-1].length < prefix.length){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpbo9drfcx.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbo9drfcx.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i<string.length;\
    \ i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpnpxjf9ia.js:16:10)\n    at Object.<anonymous> (/tmp/tmpnpxjf9ia.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] === string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmppkmpd687.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppkmpd687.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpkbs35g2h.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkbs35g2h.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp22ywbtxj.js:17:10)\n    at Object.<anonymous> (/tmp/tmp22ywbtxj.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tprefixes.push(string.substring(0, i));\n\t}\n\treturn prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpi8tw0gte.js:16:10)\n    at Object.<anonymous> (/tmp/tmpi8tw0gte.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp1b__ipc8.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1b__ipc8.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i=0; i<string.length; i++){\n        prefix += string[i];\n     \
    \   prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        prefix_length = prefix_length\
    \ + string.charAt(i).length;\n        prefixes.push(string.substr(0, i));\n  \
    \  }\n    prefixes.push(string.substr(0, prefix_length));\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkb02u4r5.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpkb02u4r5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpb5t7oaqd.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb5t7oaqd.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    while(i<string.length){\n        prefix = prefix + string.charAt(i);\n\
    \        if(prefixes.length == 0){\n            prefixes.push(prefix);\n     \
    \   }\n        else{\n            for(var j=0; j<prefixes.length; j++){\n    \
    \            if(prefixes[j].length < prefix.length){\n                    prefixes.splice(j,0,prefix);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     i++;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh',\n\
    \  'asdfg',\n  'asdf',\n  'asd',\n  'as',\n  'a'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpextr51ef.js:30:10)\n    at Object.<anonymous> (/tmp/tmpextr51ef.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh',\
    \ 'asdfg', 'asdf', 'asd', 'as', 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i <= string.length;\
    \ i++){\n\t\tprefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmps0uc4g92.js:15:10)\n   \
    \ at Object.<anonymous> (/tmp/tmps0uc4g92.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i=0;i<len;i++){\n        prefixes.push(string.substr(0,i));\n   \
    \ }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp04pezz6u.js:17:10)\n    at Object.<anonymous> (/tmp/tmp04pezz6u.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar prefix_length = 0;\n\
    \tvar current_prefix = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\t\
    current_prefix = current_prefix + string[i];\n\t\tprefix_length = prefix_length\
    \ + string[i].length;\n\t\tprefixes.push(current_prefix);\n\t}\n\treturn prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var length = string.length;\n\
    \    for(var i = 0; i < length; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp9py0wqrk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9py0wqrk.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp1a6d4jeg.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1a6d4jeg.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp91byaj5p.js:16:10)\n    at Object.<anonymous> (/tmp/tmp91byaj5p.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        var prefix = string.substr(0, i);\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp36h9yflu.js:20:10)\n    at Object.<anonymous> (/tmp/tmp36h9yflu.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var currentLength\
    \ = string.length;\n    while(currentLength > 0){\n        var currentPrefix =\
    \ string.substr(0, currentLength);\n        prefixes.push(currentPrefix);\n  \
    \      currentLength = currentPrefix.length;\n    }\n    return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var length = string.length;\n\
    \    for(var i = 0; i < length; i++){\n        var prefix = string.substr(0, i);\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpv2r0kbl_.js:20:10)\n    at Object.<anonymous> (/tmp/tmpv2r0kbl_.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpyt9x4jeu.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyt9x4jeu.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var prefix = \"\";\n \
    \ for(var i = 0; i < string.length; i++){\n    prefix = prefix + string[i];\n\
    \    if(prefixes.indexOf(prefix) == -1){\n      prefixes.push(prefix);\n    }\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i<string.length;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpg6ie31l9.js:16:10)\n    at Object.<anonymous> (/tmp/tmpg6ie31l9.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substring(0, i));\n    }\n\
    \    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpbpqp1hjr.js:16:10)\n    at Object.<anonymous> (/tmp/tmpbpqp1hjr.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpz871xgo7.js:16:10)\n    at Object.<anonymous> (/tmp/tmpz871xgo7.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    var current_length = 1;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] != current_prefix){\n            prefixes.push(current_prefix);\n\
    \            current_length = current_prefix.length;\n            current_prefix\
    \ = string[i];\n        }\n    }\n    prefixes.push(current_prefix);\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpb8v2ixw1.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpb8v2ixw1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var length = string.length;\n\
    \    var i = 0;\n    while(i < length){\n        prefixes.push(string.substr(i,length));\n\
    \        i += length;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpx7wx_ok6.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx7wx_ok6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var length = string.length;\n\
    \    for(var i = 0; i <= length; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpj_ap3cme.js:16:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpj_ap3cme.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i<len; i++){\n    prefixes.push(string.substr(0,i));\n  }\n\
    \  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgqkub2j4.js:17:10)\n    at Object.<anonymous> (/tmp/tmpgqkub2j4.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpreqk61u1.js:17:10)\n    at Object.<anonymous> (/tmp/tmpreqk61u1.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    var i = 0;\n    while(i < len){\n        prefixes.push(string.substr(i, len));\n\
    \        i += len;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp3vq866ee.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3vq866ee.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmphoxe5_gc.js:16:10)\n    at Object.<anonymous> (/tmp/tmphoxe5_gc.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp5fe6f06a.js:17:10)\n    at Object.<anonymous> (/tmp/tmp5fe6f06a.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmprvust8r4.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmprvust8r4.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp1f1wubk0.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1f1wubk0.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substring(0, i));\n    }\n\
    \    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpixpre666.js:16:10)\n    at Object.<anonymous> (/tmp/tmpixpre666.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        current += string[i];\n\
    \        if(!prefixes.includes(current)){\n            prefixes.push(current);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    while(i < string.length){\n        prefix = prefix + string.charAt(i);\n\
    \        if(!prefixes.includes(prefix)){\n            prefixes.push(prefix);\n\
    \        }\n        i++;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        prefix_length +=\
    \ string[i].length;\n        prefixes.push(string.substr(0, i));\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpkv43nu5q.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkv43nu5q.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string.charAt(i);\n\
    \        if(string[i] != string.charAt(i-1)){\n            prefixes.push(prefix);\n\
    \            prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpv36qs77v.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv36qs77v.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    while(i < string.length){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.length == 0){\n            prefixes.push(prefix);\n     \
    \   }\n        else{\n            var j = 0;\n            while(j < prefixes.length){\n\
    \                if(prefixes[j] == prefix){\n                    break;\n    \
    \            }\n                else{\n                    j++;\n            \
    \    }\n            }\n            if(j == prefixes.length){\n               \
    \ prefixes.push(prefix);\n            }\n        }\n        i++;\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmplhbtcob5.js:16:10)\n    at Object.<anonymous> (/tmp/tmplhbtcob5.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var prefix_length = 0;\n\
    \  var current_prefix = \"\";\n  for(var i = 0; i < string.length; i++){\n   \
    \ if(string[i] === \"-\"){\n      if(current_prefix !== \"\"){\n        prefixes.push(current_prefix);\n\
    \      }\n      current_prefix = \"\";\n      prefix_length = 0;\n    }\n    else{\n\
    \      current_prefix += string[i];\n      prefix_length++;\n    }\n  }\n  if(current_prefix\
    \ !== \"\"){\n    prefixes.push(current_prefix);\n  }\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpm5or216i.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm5or216i.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        current_prefix\
    \ += string.charAt(i);\n        if(current_prefix.length > 0){\n            prefixes.push(current_prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char === prefixes[prefix_length]){\n            prefix_length++;\n\
    \        }else{\n            prefix_length = 0;\n            prefixes.push(char);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_1b05c1i.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1b05c1i.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        prefix_length +=\
    \ string[i].length;\n        prefixes.push(string.substr(0, i));\n    }\n    prefixes.push(string.substr(0,\
    \ prefix_length));\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp4bpzae8r.js:18:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4bpzae8r.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar current_prefix = \"\
    \";\n\tvar current_length = 1;\n\tfor(var i = 0; i < string.length; i++){\n\t\t\
    current_prefix = current_prefix + string.charAt(i);\n\t\tcurrent_length++;\n\t\
    \tif(current_length == string.length){\n\t\t\tprefixes.push(current_prefix);\n\
    \t\t\tcurrent_length = 1;\n\t\t\tcurrent_prefix = \"\";\n\t\t}\n\t}\n\treturn\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfg'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpuvnoqo42.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuvnoqo42.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = \"\"\
    ;\n    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string.charAt(i);\n\
    \        if(prefixes.length == 0 || prefixes[prefixes.length-1].length < string.length){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(char == current_prefix){\n            prefixes.push(current_prefix);\n\
    \        }\n        current_prefix = char;\n    }\n    return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpsf6rpkpl.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsf6rpkpl.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp8t9m19ih.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8t9m19ih.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp9hj11sxt.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9hj11sxt.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var i = 0;\n  var len\
    \ = string.length;\n  while(i < len){\n    prefixes.push(string.substr(i, 1));\n\
    \    i += 1;\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpuiz52ewc.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuiz52ewc.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpulanuoqp.js:17:10)\n    at Object.<anonymous> (/tmp/tmpulanuoqp.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpf5hyx0pw.js:16:10)\n    at Object.<anonymous> (/tmp/tmpf5hyx0pw.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    var current_prefix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char === \" \"){\n \
    \           prefixes.push(current_prefix);\n            prefix_length++;\n   \
    \         current_prefix = \"\";\n        }\n        else{\n            current_prefix\
    \ += char;\n        }\n    }\n    prefixes.push(current_prefix);\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpcmyv8sc6.js:26:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpcmyv8sc6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ '-'){\n            prefixes.push('-');\n            prefix_length++;\n     \
    \   }\n        else{\n            prefixes.push(string.substr(0, i));\n      \
    \      prefix_length = i;\n        }\n    }\n    return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpmq1u0bp9.js:24:10)\n    at Object.<anonymous> (/tmp/tmpmq1u0bp9.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string.charAt(i);\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    for(i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string.charAt(i);\n        if(prefixes.indexOf(prefix) === -1){\n        \
    \    prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpr254z1aw.js:16:10)\n    at Object.<anonymous> (/tmp/tmpr254z1aw.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpfyi3u2k4.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfyi3u2k4.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpdcfje7np.js:17:10)\n    at Object.<anonymous> (/tmp/tmpdcfje7np.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var prefix_length = 0;\n\
    \  var i = 0;\n  while(i < string.length){\n    prefix_length = prefix_length\
    \ + string.substr(i, 1).length;\n    i++;\n  }\n  for(i = prefix_length; i < string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmph0qdhil2.js:22:10)\n    at Object.<anonymous> (/tmp/tmph0qdhil2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpg12afzgo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpg12afzgo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string.charAt(i);\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    for(var i = 0; i < string.length; i++){\n        if(string[i] !=\
    \ current_prefix){\n            prefixes.push(current_prefix);\n            current_prefix\
    \ = string[i];\n        }\n    }\n    prefixes.push(current_prefix);\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp3f_2j6l_.js:20:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp3f_2j6l_.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp__dvxvp9.js:16:10)\n    at Object.<anonymous> (/tmp/tmp__dvxvp9.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpcintq_31.js:17:10)\n    at Object.<anonymous> (/tmp/tmpcintq_31.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i=0;i<string.length;i++){\n\
    \t\tprefixes.push(string.substr(0,i));\n\t}\n\treturn prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpdod7qll3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdod7qll3.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        prefix_length +=\
    \ string[i].length;\n        prefixes.push(string.substr(0, i));\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpk2caw4zn.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk2caw4zn.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substring(0, i));\n    }\n\
    \    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmplvn9x_mo.js:16:10)\n    at Object.<anonymous> (/tmp/tmplvn9x_mo.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        for(var j = 0; j < string.length; j++){\n    \
    \        if(string[i] == string[j]){\n                prefixes.push(string[i]);\n\
    \            }\n        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp2t25ixdc.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2t25ixdc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    for(i = 0; i<string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        prefixes.push(prefix);\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i=0;i<len;i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpzwo473ui.js:17:10)\n    at Object.<anonymous> (/tmp/tmpzwo473ui.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        prefix_length +=\
    \ string[i].length;\n        prefixes.push(string.substr(0, i));\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpxxbewvqv.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxxbewvqv.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpn9hgkwoo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpn9hgkwoo.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i <= string.length;\
    \ i++){\n\t\tprefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpfbhfvyk0.js:15:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpfbhfvyk0.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    for(i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpg5ky140s.js:17:10)\n    at Object.<anonymous> (/tmp/tmpg5ky140s.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i<string.length;\
    \ i++){\n    prefixes.push(string.substr(0,i));\n  }\n  return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp4tba20_k.js:16:10)\n    at Object.<anonymous> (/tmp/tmp4tba20_k.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.length == 0 || prefixes[prefixes.length-1].length < prefix.length){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpzdz5hwv4.js:17:10)\n    at Object.<anonymous> (/tmp/tmpzdz5hwv4.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        var prefix = string.substr(0, i);\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp1dowc1wk.js:20:10)\n    at Object.<anonymous> (/tmp/tmp1dowc1wk.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var currentLength = string.length;\n\
    \  while(currentLength > 0){\n    prefixes.unshift(string.substr(0,currentLength));\n\
    \    currentLength = currentLength - 1;\n  }\n  return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var currentLength\
    \ = string.length;\n    while(currentLength > 0){\n        prefixes.unshift(string.substr(0,currentLength));\n\
    \        currentLength = currentLength - 1;\n    }\n    return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string.charAt(i);\n\
    \        if(string[i] === string.charAt(i) && string[i+1] === string.charAt(i+1)){\n\
    \            prefixes.push(prefix);\n            prefix = '';\n        }\n   \
    \ }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpxycuq4_u.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxycuq4_u.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar prefix_length = 0;\n\
    \tvar current_prefix = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\t\
    if(string[i] != \" \"){\n\t\t\tcurrent_prefix += string[i];\n\t\t\tprefix_length++;\n\
    \t\t}\n\t\telse{\n\t\t\tprefixes.push(current_prefix);\n\t\t\tcurrent_prefix =\
    \ \"\";\n\t\t\tprefix_length = 0;\n\t\t}\n\t}\n\tprefixes.push(current_prefix);\n\
    \treturn prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpl0ywoyx1.js:26:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpl0ywoyx1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i <= string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmppas4tq2o.js:15:10)\n   \
    \ at Object.<anonymous> (/tmp/tmppas4tq2o.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    for(i = 0; i <= string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.length == 0){\n            prefixes.push(prefix);\n\
    \        }\n        else{\n            for(i = 0; i <= string.length; i++){\n\
    \                prefix = prefix + string[i];\n                prefixes.push(prefix);\n\
    \            }\n        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'undefined'\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpmjeqdh9f.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmjeqdh9f.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'undefined'\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tprefixes.push(string.substring(0, i));\n\t}\n\treturn prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp00hn1xpe.js:16:10)\n    at Object.<anonymous> (/tmp/tmp00hn1xpe.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpf9iezt6u.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf9iezt6u.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgpdv4i6h.js:16:10)\n    at Object.<anonymous> (/tmp/tmpgpdv4i6h.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    while(i < string.length){\n        prefix = prefix + string.charAt(i);\n\
    \        i++;\n        if(i < string.length){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpovm8gu98.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpovm8gu98.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpt4erqaen.js:17:10)\n    at Object.<anonymous> (/tmp/tmpt4erqaen.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] === string[0]){\n            prefixes.push(prefix);\n   \
    \         prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmptsckirsl.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptsckirsl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i = 0;\n    while(i < string.length){\n        prefix = prefix + string.charAt(i);\n\
    \        if(string.length == i){\n            prefixes.push(prefix);\n       \
    \ }\n        i++;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp2wnvgezc.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2wnvgezc.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != prefix){\n            prefixes.push(prefix);\n       \
    \     prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpetdoiwn6.js:21:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpetdoiwn6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    var current_prefix = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        var char = string.charAt(i);\n        if(char === \".\" || char\
    \ === \"/\" || char === \":\" || char === \";\" || char === \":\" || char ===\
    \ \",\" || char === \";\" || char === \".\" || char === \"/\" || char === \":\"\
    \ || char === \",\" || char === \";\" || char === \":\" || char === \".\" || char\
    \ === \"/\" || char === \":\" || char === \".\" || char === \"/\" || char ===\
    \ \":\" || char === \";\" || char === \":\" || char === \".\" || char === \"/\"\
    \ || char === \":\" || char === \".\" || char === \"/\" || char === \":\" || char\
    \ === \";\"){\n            prefixes[prefixes.length] = current_prefix;\n     \
    \       prefix_length++;\n            current_prefix = \"\";\n        }else{\n\
    \            current_prefix += char;\n        }\n    }\n    prefixes[prefixes.length]\
    \ = current_prefix;\n    prefix_length++;\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpdmw5jwj7.js:26:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpdmw5jwj7.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpy1vspw_m.js:21:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpy1vspw_m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var currentLength\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        currentLength +=\
    \ string[i].length;\n        prefixes.push(string.substr(0, i));\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpl1hirlu8.js:18:10)\n    at Object.<anonymous> (/tmp/tmpl1hirlu8.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar prefix = '';\n\t\n\
    \tfor(var i=0;i<string.length;i++){\n\t\tprefix = prefix + string[i];\n\t\tprefixes.push(prefix);\n\
    \t}\n\t\n\treturn prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i<string.length;\
    \ i++){\n        prefixes.push(string.substr(0,i));\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmphyuhle5e.js:16:10)\n    at Object.<anonymous> (/tmp/tmphyuhle5e.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp9cq00sq0.js:16:10)\n    at Object.<anonymous> (/tmp/tmp9cq00sq0.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0, i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpc5pjmn6b.js:17:10)\n    at Object.<anonymous> (/tmp/tmpc5pjmn6b.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpgn2xh_nq.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgn2xh_nq.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i<string.length;\
    \ i++){\n        prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpan4qfqkm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpan4qfqkm.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar current_prefix = \"\
    \";\n\tfor(var i = 0; i < string.length; i++){\n\t\tcurrent_prefix += string.charAt(i);\n\
    \t\tif(current_prefix.length == string.length){\n\t\t\tprefixes.push(current_prefix);\n\
    \t\t\tcurrent_prefix = \"\";\n\t\t}\n\t}\n\treturn prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpiy275opq.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiy275opq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var length = string.length;\n\
    \    for(var i = 0; i < length; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpc2cpa57u.js:17:10)\n    at Object.<anonymous> (/tmp/tmpc2cpa57u.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar prefix = '';\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tprefix += string[i];\n\t\tif(prefixes.indexOf(prefix)\
    \ == -1){\n\t\t\tprefixes.push(prefix);\n\t\t}\n\t}\n\treturn prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = \"\"\
    ;\n    var i = 0;\n    for(i = 0; i <= string.length; i++){\n        prefix =\
    \ prefix + string.charAt(i);\n        if(prefixes.indexOf(prefix) === -1){\n \
    \           prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp746kgtvg.js:20:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp746kgtvg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(prefixes.length == 0 || prefixes[prefixes.length-1].length < string.length){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp86fq6g5k.js:17:10)\n    at Object.<anonymous> (/tmp/tmp86fq6g5k.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    prefixes.push(prefix);\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp0bel18s7.js:21:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp0bel18s7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp4u_i3zdi.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4u_i3zdi.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar prefix_length = 0;\n\
    \tvar index = 0;\n\twhile(index < string.length){\n\t\tvar character = string.charAt(index);\n\
    \t\tif(character == \" \"){\n\t\t\tindex++;\n\t\t\tcontinue;\n\t\t}\n\t\tvar prefix\
    \ = string.substr(index, prefix_length);\n\t\tindex++;\n\t\tprefixes.push(prefix);\n\
    \t\tprefix_length = prefix.length;\n\t}\n\treturn prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  '',\n\
    \  '',\n  '',\n  '',\n  ''\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp94z2nywf.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp94z2nywf.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', '',\
    \ '', '', '', '' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.slice(0, i));\n    }\n  \
    \  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpvjfbwylh.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvjfbwylh.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmplmkc8k5a.js:17:10)\n    at Object.<anonymous> (/tmp/tmplmkc8k5a.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp9mik5sqc.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9mik5sqc.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i < string.length;\
    \ i++){\n    prefixes.push(string.substr(0, i));\n  }\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmps5r2xudy.js:16:10)\n    at Object.<anonymous> (/tmp/tmps5r2xudy.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.slice(0, i));\n    }\n  \
    \  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmprvoz_2es.js:16:10)\n    at Object.<anonymous> (/tmp/tmprvoz_2es.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var len = string.length;\n\
    \  for(var i = 0; i <= len; i++){\n    prefixes.push(string.substring(0, i));\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxmlliw3z.js:16:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpxmlliw3z.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix_length\
    \ = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] ===\
    \ '-'){\n            prefixes.push('-');\n            prefix_length++;\n     \
    \   }\n        else{\n            prefixes.push(string.substr(0, i));\n      \
    \      prefix_length = i;\n        }\n    }\n    return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp8f2hj3ro.js:24:10)\n    at Object.<anonymous> (/tmp/tmp8f2hj3ro.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.length == 0 || prefixes[prefixes.length-1].length < string.length){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.slice(0, i));\n    }\n  \
    \  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpqqae4gr_.js:16:10)\n    at Object.<anonymous> (/tmp/tmpqqae4gr_.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  for(var i = 0; i <= string.length;\
    \ i++){\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpgoj_77mg.js:15:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpgoj_77mg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    var i = 0;\n    while(i < len){\n        prefixes.push(string.substr(i, len));\n\
    \        i += len;\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpegdgfixe.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpegdgfixe.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var i;\n    for(i = 0; i < string.length; i++){\n        prefix = prefix\
    \ + string[i];\n        if(prefixes.length == 0 || prefixes[prefixes.length-1].length\
    \ < string.length){\n            prefixes.push(prefix);\n        }\n    }\n  \
    \  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tprefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpm1fljntg.js:16:10)\n    at Object.<anonymous> (/tmp/tmpm1fljntg.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i=0; i<string.length; i++){\n        prefix = prefix + string.charAt(i);\n\
    \        if(prefixes.indexOf(prefix) == -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.indexOf(prefix) === -1){\n            prefixes.push(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpo0cuxhna.js:17:10)\n    at Object.<anonymous> (/tmp/tmpo0cuxhna.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string.charAt(i);\n\
    \        if(string[i] === string.charAt(i) && string[i] !== string.charAt(i -\
    \ 1)){\n            prefixes.push(prefix);\n            prefix = '';\n       \
    \ }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpsww2gm7j.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsww2gm7j.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current = \"\"\
    ;\n    for(var i = 0; i < string.length; i++){\n        current += string[i];\n\
    \        if(prefixes.indexOf(current) == -1){\n            prefixes.push(current);\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tprefixes.push(string.substring(0, i));\n\t}\n\treturn prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpevurbz7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpevurbz7o.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === current){\n\
    \            prefixes.push(current);\n            current = '';\n        } else\
    \ {\n            current += string[i];\n        }\n    }\n    prefixes.push(current);\n\
    \    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpohnos6ad.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpohnos6ad.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix = prefix + string[i];\n\
    \        if(prefixes.length == 0 || prefixes[prefixes.length-1].length < prefix.length){\n\
    \            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tprefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpfww7793m.js:16:10)\n    at Object.<anonymous> (/tmp/tmpfww7793m.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i < len; i++){\n        var char = string.charAt(i);\n   \
    \     if(char.match(/[a-z]/i)){\n            prefixes.push(char);\n        }\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpiifg2ie6.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiifg2ie6.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    var suffix = '';\n    for(var i = 0; i < string.length; i++){\n        prefix\
    \ = prefix + string[i];\n        suffix = string.substr(i);\n        if(string[i]\
    \ === suffix){\n            prefixes.push(prefix);\n        }\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp_fhd413i.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_fhd413i.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var current_prefix\
    \ = \"\";\n    var current_length = 1;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string[i] === \" \" || string[i] === \"-\"){\n           \
    \ current_length++;\n        }\n        else{\n            current_length = 1;\n\
    \        }\n        if(current_length >= current_prefix){\n            prefixes.push(current_prefix);\n\
    \        }\n        current_prefix = current_length;\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  1,\n\
    \  1,\n  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb9ca9tlp.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb9ca9tlp.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 1, 1,\
    \ 1, 1, 1 ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n \
    \ operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var prefix = '';\n\
    \    for(var i = 0; i < string.length; i++){\n        prefix += string[i];\n \
    \       if(string[i] != string[0]){\n            prefixes.push(prefix);\n    \
    \        prefix = '';\n        }\n    }\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpt2v_7kgd.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt2v_7kgd.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp_hbjyh3u.js:16:10)\n    at Object.<anonymous> (/tmp/tmp_hbjyh3u.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n  var prefixes = [];\n  var prefix = '';\n  for(var\
    \ i = 0; i < string.length; i++){\n    prefix += string[i];\n    if(string[i]\
    \ === string[0]){\n      prefixes.push(prefix);\n      prefix = '';\n    }\n \
    \ }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp3jo9ac9c.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3jo9ac9c.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tfor(var i = 0; i <= string.length;\
    \ i++){\n\t\tprefixes.push(string.substr(0, i));\n\t}\n\treturn prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpnb7zdmem.js:15:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpnb7zdmem.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i = 0; i <\
    \ string.length; i++){\n        prefixes.push(string.substr(0, i));\n    }\n \
    \   return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpx3q8fmvr.js:16:10)\n    at Object.<anonymous> (/tmp/tmpx3q8fmvr.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    for(var i=0;i<string.length;i++){\n\
    \        prefixes.push(string.substr(0,i));\n    }\n    return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmphhzqroyw.js:16:10)\n    at Object.<anonymous> (/tmp/tmphhzqroyw.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n\tvar prefixes = [];\n\tvar prefix = '';\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tprefix += string[i];\n\t\tif(string[i]\
    \ != string[0]){\n\t\t\tprefixes.push(prefix);\n\t\t\tprefix = '';\n\t\t}\n\t\
    }\n\treturn prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n \
    \ 'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpftfn3brz.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpftfn3brz.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'd',\
    \ 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    function all_prefixes(string){\n    var prefixes = [];\n    var len = string.length;\n\
    \    for(var i = 0; i<len; i++){\n        prefixes.push(string.substr(0,i));\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpxm4e4luf.js:17:10)\n    at Object.<anonymous> (/tmp/tmpxm4e4luf.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

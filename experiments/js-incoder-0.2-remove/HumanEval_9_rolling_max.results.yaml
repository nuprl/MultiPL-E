name: HumanEval_9_rolling_max
language: js
results:
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    var rolling_numbers = [];\n\t\tfor(var j=0; j<numbers.length; j++){\n\t\t\trolling_numbers.push(numbers[j]);\n\
    \t\t}\n\t\trolling_numbers.sort(function(a, b){\n\t\t\treturn b-a;\n\t\t});\n\t\
    \tvar rolling_max = rolling_numbers[0];\n\t\tfor(var j=1; j<rolling_numbers.length;\
    \ j++){\n\t\t\tif(rolling_numbers[j] > rolling_max){\n\t\t\t\trolling_max = rolling_numbers[j];\n\
    \t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(rolling_max);\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpwnuxyxvk.js:30:10)\n    at Object.<anonymous> (/tmp/tmpwnuxyxvk.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar rolling_max = [];\n\tfor(var i in numbers){\n\t\trolling_max.push(Math.max.apply(null,\
    \ numbers));\n\t}\n\treturn rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpuz0s_mb3.js:17:10)\n    at Object.<anonymous> (/tmp/tmpuz0s_mb3.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\t\tmax_rolling\
    \ = Math.max(max_rolling,numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp8zw1dojj.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8zw1dojj.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    max_rolling_numbers.push(Math.max.apply(null, numbers));\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpbjxw2tqv.js:17:10)\n    at Object.<anonymous> (/tmp/tmpbjxw2tqv.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(numbers[i] > max_rolling){\n            max_rolling = numbers[i];\n\
    \            max_rolling_numbers = [numbers[i]];\n        }\n        else if(numbers[i]\
    \ == max_rolling){\n            max_rolling_numbers.push(numbers[i]);\n      \
    \  }\n    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpun979o94.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpun979o94.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_numbers_index = 0;\n \
    \   for(var i=0; i<numbers.length; i++){\n        if(numbers[i] > max_rolling_numbers[max_rolling_numbers_index]){\n\
    \            max_rolling_numbers[max_rolling_numbers_index] = numbers[i];\n  \
    \      }\n        else{\n            max_rolling_numbers_index++;\n        }\n\
    \    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpk6bdk1gt.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk6bdk1gt.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    var max_rolling_number = numbers[i];\n\t\tfor(var j=i+1; j<numbers.length; j++){\n\
    \t\t\tif(numbers[j] > max_rolling_number){\n\t\t\t\tmax_rolling_number = numbers[j];\n\
    \t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(max_rolling_number);\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp707biskw.js:23:10)\n    at Object.<anonymous> (/tmp/tmp707biskw.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tmax_rolling_numbers.push(numbers[i]);\n\t\tmax_rolling = Math.max(max_rolling,\
    \ numbers[i]);\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpej2qp14h.js:20:10)\n    at Object.<anonymous> (/tmp/tmpej2qp14h.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar max_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] > max_number){\n\t\t\tmax_number = numbers[i];\n\t\t\
    }\n\t}\n\tresult.push(max_number);\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpssb8qs3o.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpssb8qs3o.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var rolling_max = [];\n    var rolling_max_index = 0;\n    var rolling_max_value\
    \ = numbers[0];\n    var rolling_max_index2 = 0;\n    var rolling_max_value2 =\
    \ numbers[0];\n    var rolling_max_index3 = 0;\n    var rolling_max_value3 = numbers[0];\n\
    \    var rolling_max_index4 = 0;\n    var rolling_max_value4 = numbers[0];\n \
    \   var rolling_max_index5 = 0;\n    var rolling_max_value5 = numbers[0];\n  \
    \  var rolling_max_index6 = 0;\n    var rolling_max_value6 = numbers[0];\n   \
    \ var rolling_max_index7 = 0;\n    var rolling_max_value7 = numbers[0];\n    var\
    \ rolling_max_index8 = 0;\n    var rolling_max_value8 = numbers[0];\n    var rolling_max_index9\
    \ = 0;\n    var rolling_max_value9 = numbers[0];\n    var rolling_max_index10\
    \ = 0;\n    var rolling_max_value10 = numbers[0];\n    var rolling_max_index11\
    \ = 0;\n    var rolling_max_value11 = numbers[0];\n    var rolling_max_index12\
    \ = 0;\n    var rolling_max_value12 = numbers[0];\n    var rolling_max_index13\
    \ = 0;\n    var rolling_max_value13 = numbers[0];\n    var rolling_max_index14\
    \ = 0;\n    var rolling_max_value14 = numbers[0];\n    var rolling_max_index15\
    \ = 0;\n    var rolling_max_value15 = numbers[0];\n    var rolling_max_index16\
    \ = 0;\n    var rolling_max_value16 = numbers[0];\n    var rolling_max_index17\
    \ = 0;\n    var rolling_max_value17 = numbers[0];\n    var rolling_max_index18\
    \ = 0;\n    var rolling_max_value18 = numbers[0];\n    var rolling_max_index19\
    \ = 0;\n    var rolling_max_value19 = numbers[0];\n    var rolling_max_index20\
    \ = 0;\n    var rolling_max_value20 = numbers[0];\n    var rolling_max_index21\
    \ = 0;\n    var rolling_max_value21 = numbers[0];\n    var rolling_max_index22\
    \ = 0;\n    var rolling_max_value22 = numbers[0];\n    var rolling_max_index23\
    \ = 0;\n    var rolling_max_value23 = numbers[0];\n    var rolling_max_index24\
    \ = 0;\n    var rolling_max_value24 = numbers[0];\n    var rolling_max_index25\
    \ = 0;\n    var rolling_max_value25 = numbers[0];\n    var rolling_max_index26\
    \ = 0;\n    var rolling_max_value26 = numbers[0];\n    var rolling_max_index27\
    \ = 0;\n    var rolling_max_value27 = numbers[0];\n    var rolling_max_index28\
    \ = 0;\n    var rolling_max_value28 = numbers[0];\n    var rolling_max_index29\
    \ = 0;\n    var rolling_max_value29 = numbers[0];\n    var roll\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "/tmp/tmpkayodfk3.js:75\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling_numbers.push(numbers[i]);\n\t\tif(numbers[i] > max_rolling){\n\
    \t\t\tmax_rolling = numbers[i];\n\t\t}\n\t}\n\treturn max_rolling_numbers;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpythznrnd.js:22:10)\n    at Object.<anonymous> (/tmp/tmpythznrnd.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var rolling_max_index = 0;\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        if(numbers[i] > max_rolling_max){\n  \
    \          max_rolling_max = numbers[i];\n            rolling_max_index = i;\n\
    \        }\n    }\n    return rolling_max_index;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmph3xh_whc.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph3xh_whc.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rolling_max = Math.max(rolling_max, numbers[i]);\n        result.push(rolling_max);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    var max_index = 0;\n\
    \    var i;\n    for(i = 0; i < numbers.length; i++){\n        if(numbers[i] >\
    \ max_number){\n            max_number = numbers[i];\n            max_index =\
    \ i;\n        }\n    }\n    for(i = max_index; i < numbers.length; i++){\n   \
    \     result.push(numbers[i]);\n    }\n    return result;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpytxk0ug8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpytxk0ug8.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_number = 0;\n\tvar max_rolling_number_index = 0;\n\tfor(var\
    \ i = 0; i<numbers.length; i++){\n\t\tmax_rolling_number = Math.max(max_rolling_number,\
    \ numbers[i]);\n\t\tmax_rolling_number_index = i;\n\t}\n\treturn max_rolling_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpntqtzipw.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpntqtzipw.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i = 0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling_numbers.push(numbers[i]);\n\t\tmax_rolling = Math.max(max_rolling,\
    \ numbers[i]);\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpldufiyjt.js:20:10)\n    at Object.<anonymous> (/tmp/tmpldufiyjt.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_number = 0;\n\tvar max_rolling_number_index = 0;\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\tmax_rolling_number = Math.max(max_rolling_number,\
    \ numbers[i]);\n\t\tmax_rolling_number_index = i;\n\t}\n\treturn max_rolling_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpu8jz6a84.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu8jz6a84.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_elements = [];\n    var max_elements_index = 0;\n    var current_element\
    \ = 0;\n    var current_index = 0;\n    for(var i = 0; i<numbers.length; i++){\n\
    \        if(numbers[i] > current_element){\n            max_elements[max_elements_index]\
    \ = current_element;\n            max_elements_index++;\n            current_element\
    \ = numbers[i];\n            current_index = i;\n        }\n    }\n    return\
    \ max_elements;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpx3dnpmv9.js:25:10)\n    at Object.<anonymous> (/tmp/tmpx3dnpmv9.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_elements = [];\n\tvar max_number = numbers[0];\n\tfor(var i = 1; i <\
    \ numbers.length; i++){\n\t\tif(numbers[i] > max_number){\n\t\t\tmax_elements.push(max_number);\n\
    \t\t\tmax_number = numbers[i];\n\t\t}else{\n\t\t\tmax_number = numbers[i];\n\t\
    \t}\n\t}\n\tmax_elements.push(max_number);\n\treturn max_elements;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpnipp9j6d.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnipp9j6d.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_numbers_index = 0;\n \
    \   var current_max_rolling_number = 0;\n    var current_max_rolling_number_index\
    \ = 0;\n    for(var i=0; i<numbers.length; i++){\n        if(numbers[i] > current_max_rolling_number){\n\
    \            max_rolling_numbers[current_max_rolling_number_index] = numbers[i];\n\
    \            current_max_rolling_number = numbers[i];\n            current_max_rolling_number_index\
    \ = i;\n        }\n    }\n    return max_rolling_numbers;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  3,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test\
    \ (/tmp/tmp0tw0pw03.js:24:10)\n    at Object.<anonymous> (/tmp/tmp0tw0pw03.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 3, 4\
    \ ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar max_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] > max_number){\n\t\t\tmax_number = numbers[i];\n\t\t\
    }\n\t}\n\tresult.push(max_number);\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpn3zoufxs.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn3zoufxs.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var max_rolling_max_index = 0;\n    var rolling_max_index\
    \ = 0;\n    for(var i=0; i<numbers.length; i++){\n        if(numbers[i]>max_rolling_max){\n\
    \            max_rolling_max = numbers[i];\n            max_rolling_max_index\
    \ = i;\n        }\n        if(numbers[i]==max_rolling_max){\n            rolling_max_index\
    \ = i;\n        }\n    }\n    return max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp2r3r8v2q.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2r3r8v2q.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\t\tmax_rolling\
    \ = Math.max(max_rolling,numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpz2s5m0wz.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz2s5m0wz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\t\tmax_rolling_numbers.push(Math.max.apply(Math,numbers));\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpf3m8mfao.js:17:10)\n    at Object.<anonymous> (/tmp/tmpf3m8mfao.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i = 0; i<numbers.length; i++){\n\t\t\
    max_rolling_numbers.push(Math.max.apply(null, numbers));\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpis7pxsmj.js:17:10)\n    at Object.<anonymous> (/tmp/tmpis7pxsmj.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    max_rolling_numbers.push(Math.max.apply(null, numbers));\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmppjx20z27.js:17:10)\n    at Object.<anonymous> (/tmp/tmppjx20z27.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_number = 0;\n\tvar max_index = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_number = Math.max(max_number,numbers[i]);\n\t\tmax_index = i;\n\t}\n\t\
    return max_index;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpjgjhethf.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjgjhethf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tvar rolling_number = Math.max.apply(null, numbers);\n\t\tmax_rolling_numbers.push(rolling_number);\n\
    \t\tnumbers = numbers.filter(function(x){return x!=rolling_number});\n\t}\n\t\
    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpiedec6pq.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiedec6pq.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3 ],\n\
    \  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    max_rolling_numbers.push(Math.max.apply(null, numbers));\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp8t3k60gm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8t3k60gm.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers=[];\n\tvar max_rolling_numbers_index=0;\n\tvar max_rolling_numbers_value=0;\n\
    \tfor(var i=0;i<numbers.length;i++){\n\t\tmax_rolling_numbers_value=numbers[i];\n\
    \t\tfor(var j=i+1;j<numbers.length;j++){\n\t\t\tif(numbers[j]>max_rolling_numbers_value){\n\
    \t\t\t\tmax_rolling_numbers_value=numbers[j];\n\t\t\t\tmax_rolling_numbers_index=j;\n\
    \t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(max_rolling_numbers_value);\n\t}\n\
    \treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpm7hfnf86.js:26:10)\n    at Object.<anonymous> (/tmp/tmpm7hfnf86.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar rolling_max = [];\n\tvar rolling_max_index = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\trolling_max[rolling_max_index] = Math.max(numbers[i]);\n\t\trolling_max_index++;\n\
    \t}\n\treturn rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpgttt1ifz.js:20:10)\n    at Object.<anonymous> (/tmp/tmpgttt1ifz.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    for(var i = 1; i\
    \ < numbers.length; i++){\n        if(numbers[i] > max_number){\n            max_number\
    \ = numbers[i];\n        }\n    }\n    result.push(max_number);\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpzy8f7qrr.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzy8f7qrr.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_number = 0;\n\tvar rolling_max_number = numbers[0];\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] > rolling_max_number){\n\
    \t\t\trolling_max_number = numbers[i];\n\t\t}\n\t}\n\treturn rolling_max_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp4spi4ltj.js:19:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp4spi4ltj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar max_number = numbers[0];\n\tvar max_index = 0;\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] > max_number){\n\t\t\tmax_number\
    \ = numbers[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\tresult.push(max_number);\n\
    \tfor(var i = max_index + 1; i < numbers.length; i++){\n\t\tresult.push(numbers[i]);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpsgkiky4t.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsgkiky4t.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tvar max_rolling_numbers_index = 0;\n\tfor(var\
    \ i=0;i<numbers.length;i++){\n\t\tvar current_rolling_numbers = rolling_numbers(numbers,i);\n\
    \t\tfor(var j=0;j<current_rolling_numbers.length;j++){\n\t\t\tif(max_rolling_numbers_index\
    \ == current_rolling_numbers[j]){\n\t\t\t\tmax_rolling_numbers.push(numbers[i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "/tmp/tmpb7vqfkiz.js:7\n\t\tvar current_rolling_numbers = rolling_numbers(numbers,i);\n\
    \t\t                              ^\n\nReferenceError: rolling_numbers is not\
    \ defined\n    at rolling_max (/tmp/tmpb7vqfkiz.js:7:33)\n    at test (/tmp/tmpb7vqfkiz.js:24:20)\n\
    \    at Object.<anonymous> (/tmp/tmpb7vqfkiz.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: ReferenceError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var rolling_max = [];\n    var rolling_max_index = 0;\n    var rolling_max_value\
    \ = numbers[0];\n    var rolling_max_count = 0;\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > rolling_max_value){\n            rolling_max_value\
    \ = numbers[i];\n            rolling_max_index = i;\n            rolling_max_count\
    \ = 1;\n        }\n        else if(numbers[i] == rolling_max_value){\n       \
    \     rolling_max_count++;\n        }\n        else{\n            rolling_max.push(rolling_max_value);\n\
    \            rolling_max_value = numbers[i];\n            rolling_max_index =\
    \ i;\n            rolling_max_count = 1;\n        }\n    }\n    rolling_max.push(rolling_max_value);\n\
    \    return rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpmwqaqhq3.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmwqaqhq3.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i=0;i<numbers.length;i++){\n\
    \        rolling_max = Math.max(numbers[i]);\n        result.push(rolling_max);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpa4cymltn.js:20:10)\n    at Object.<anonymous> (/tmp/tmpa4cymltn.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var current_max = 0;\n    var current_index = 0;\n\
    \    for(var i=0;i<numbers.length;i++){\n        if(numbers[i]>current_max){\n\
    \            current_max = numbers[i];\n            current_index = i;\n     \
    \   }\n    }\n    result.push(current_max);\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(numbers[i]==current_max){\n            result.push(numbers[current_index]);\n\
    \            current_index++;\n        }\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpfj11ovkg.js:28:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpfj11ovkg.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tvar rolling_number =\
    \ 0;\n\tfor(var i=0; i<numbers.length; i++){\n\t\trolling_number = numbers[i];\n\
    \t\tmax_rolling = Math.max(max_rolling, rolling_number);\n\t\tmax_rolling_number\
    \ = Math.max(max_rolling_number, rolling_number);\n\t}\n\treturn max_rolling_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpzgjel2g9.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzgjel2g9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling_number = Math.max(max_rolling_number,numbers[i]);\n\t\tmax_rolling\
    \ = Math.max(max_rolling,max_rolling_number);\n\t}\n\treturn max_rolling;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp4bvm91ga.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4bvm91ga.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    var max_index = 0;\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n            max_index = i;\n        }\n\
    \    }\n    result.push(max_number);\n    for(var i = max_index + 1; i < numbers.length;\
    \ i++){\n        result.push(numbers[i]);\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp9_eheovi.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9_eheovi.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var rolling_max = [];\n    for(var i=0;i<numbers.length;i++){\n        rolling_max.push(numbers[i]);\n\
    \    }\n    rolling_max = rolling_max.sort(function(a,b){return b-a});\n    for(var\
    \ i=0;i<numbers.length;i++){\n        rolling_max[i] = rolling_max[i]>numbers[i]\
    \ && rolling_max[i]>numbers[numbers.length-1-i] ? rolling_max[i] : numbers[numbers.length-1-i];\n\
    \    }\n    return rolling_max;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpol_qh9z6.js:20:10)\n    at Object.<anonymous> (/tmp/tmpol_qh9z6.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        if(numbers[i] > max_rolling){\n      \
    \      max_rolling = numbers[i];\n        }\n        if(numbers[i] > max_rolling\
    \ && numbers[i] <= max_rolling_numbers[max_rolling_numbers.length-1]){\n     \
    \       max_rolling_numbers.push(numbers[i]);\n        }\n    }\n    return max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpxps0pims.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxps0pims.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    for(var i = 0; i<numbers.length; i++){\n\
    \        max_rolling_numbers.push(numbers[i]);\n    }\n    for(var i = 0; i<numbers.length;\
    \ i++){\n        max_rolling_numbers.push(Math.max(numbers[i], max_rolling_numbers[i-1]));\n\
    \    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  NaN,\n  2,\n  3,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n\
    \  2,\n  3,\n  4\n]\n    at test (/tmp/tmppcl7oqdn.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppcl7oqdn.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n      1,\
    \ 2, 3, 4,\n    NaN, 2, 3, 4\n  ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar current_max = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tcurrent_max = Math.max(numbers[i],current_max);\n\t\tresult.push(current_max);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number\
    \ = Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpwczt_57a.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwczt_57a.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_number = 0;\n\tvar max_index = 0;\n\tfor(var i in numbers){\n\t\tif(i\
    \ == 0){\n\t\t\tmax_number = numbers[i];\n\t\t\tmax_index = i;\n\t\t}\n\t\telse{\n\
    \t\t\tif(numbers[i] > max_number){\n\t\t\t\tmax_number = numbers[i];\n\t\t\t\t\
    max_index = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_index;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp66wfzwap.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp66wfzwap.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i = 0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number\
    \ = Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpql_56r57.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpql_56r57.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar rolling_max = [];\n\tfor(var i in numbers){\n\t\tvar rolling_max_element\
    \ = numbers[i];\n\t\tfor(var j in numbers){\n\t\t\tif(j != i){\n\t\t\t\tif(numbers[j]\
    \ > rolling_max_element){\n\t\t\t\t\trolling_max_element = numbers[j];\n\t\t\t\
    \t}\n\t\t\t}\n\t\t}\n\t\trolling_max.push(rolling_max_element);\n\t}\n\treturn\
    \ rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp6p4pamrl.js:25:10)\n    at Object.<anonymous> (/tmp/tmp6p4pamrl.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var rolling_max_number = 0;\n    for(var\
    \ i=0;i<numbers.length;i++){\n        if(numbers[i]>rolling_max_number){\n   \
    \         rolling_max_number = numbers[i];\n        }\n    }\n    max_rolling_numbers.push(rolling_max_number);\n\
    \    for(var i=0;i<numbers.length;i++){\n        if(numbers[i]>rolling_max_number){\n\
    \            rolling_max_number = numbers[i];\n        }\n        if(numbers[i]==rolling_max_number){\n\
    \            max_rolling_numbers.push(rolling_max_number);\n        }\n    }\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpwam9jmrz.js:28:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpwam9jmrz.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar current_max = 0;\n\tfor(var i=0; i<numbers.length; i++){\n\
    \t\tcurrent_max = Math.max(numbers[i], current_max);\n\t\tresult.push(current_max);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i in numbers){\n\t\tresult.push(Math.max.apply(null,\
    \ numbers));\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmphtaz8565.js:17:10)\n    at Object.<anonymous> (/tmp/tmphtaz8565.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    var current_number\
    \ = numbers[1];\n    for(var i=2; i<numbers.length; i++){\n        if(numbers[i]\
    \ > current_number){\n            result.push(current_number);\n            current_number\
    \ = numbers[i];\n        }\n        else{\n            current_number = numbers[i];\n\
    \        }\n    }\n    result.push(current_number);\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpd73ddvbw.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd73ddvbw.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number\
    \ = Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmprnvud8_y.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprnvud8_y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number =\
    \ Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpeviijh3y.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeviijh3y.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        rolling_max = numbers[i];\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(numbers[j] > rolling_max){\n                rolling_max\
    \ = numbers[j];\n            }\n        }\n        result.push(rolling_max);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpbh_5a2_g.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbh_5a2_g.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling_numbers.push(numbers[i]);\n\t\tmax_rolling = Math.max(max_rolling,numbers[i]);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmp_uw0zckt.js:20:10)\n    at Object.<anonymous> (/tmp/tmp_uw0zckt.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_num = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tif(numbers[i] > max_rolling_num){\n\t\t\tmax_rolling_num = numbers[i];\n\t\
    \t\tmax_rolling = i;\n\t\t}\n\t}\n\treturn max_rolling;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmplbnyyt29.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplbnyyt29.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var current_max = numbers[0];\n    var current_index\
    \ = 0;\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] >\
    \ current_max){\n            result.push(current_max);\n            current_max\
    \ = numbers[i];\n            current_index = i;\n        }\n    }\n    result.push(current_max);\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp5rebg2jv.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5rebg2jv.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number\
    \ = Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp_6nsl2gi.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_6nsl2gi.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tresult.push(Math.max.apply(null,\
    \ numbers));\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmps1x3bel5.js:17:10)\n    at Object.<anonymous> (/tmp/tmps1x3bel5.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\t\tmax_rolling_numbers.push(Math.max.apply(Math,numbers));\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpmy7ipb8n.js:17:10)\n    at Object.<anonymous> (/tmp/tmpmy7ipb8n.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    var current_rolling\
    \ = 0;\n    var current_rolling_numbers = [];\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(numbers[i]>max_rolling){\n            max_rolling = numbers[i];\n\
    \        }\n        if(numbers[i]>max_rolling){\n            current_rolling_numbers.push(numbers[i]);\n\
    \        }\n        if(numbers[i]==max_rolling){\n            current_rolling_numbers.push(numbers[i]);\n\
    \        }\n        if(numbers[i]<max_rolling){\n            current_rolling =\
    \ numbers[i];\n        }\n    }\n    max_rolling_numbers = current_rolling_numbers;\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n    at test (/tmp/tmpbztm9vwk.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbztm9vwk.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var rolling_max = [];\n    var max_index = 0;\n    var max_value = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n            max_index = i;\n        }\n\
    \    }\n    rolling_max.push(max_value);\n    rolling_max.push(max_index);\n \
    \   return rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp0cusro79.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0cusro79.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 0 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tvar max_rolling_numbers_index = 0;\n\tfor(var\
    \ i=0;i<numbers.length;i++){\n\t\tmax_rolling_numbers.push(numbers[i]);\n\t\t\
    if(max_rolling_numbers_index == 0){\n\t\t\tmax_rolling_numbers_index = i;\n\t\t\
    }\n\t\telse{\n\t\t\tif(numbers[i] > max_rolling_numbers[max_rolling_numbers_index]){\n\
    \t\t\t\tmax_rolling_numbers[max_rolling_numbers_index] = numbers[i];\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n\
    \  3,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpfd_okqxq.js:26:10)\n    at Object.<anonymous> (/tmp/tmpfd_okqxq.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 4, 3,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max = 0;\n    var rolling_max_index = 0;\n\
    \    for(var i=0;i<numbers.length;i++){\n        rolling_max = Math.max(rolling_max,numbers[i]);\n\
    \        if(numbers[i] == rolling_max){\n            result.push(rolling_max);\n\
    \            rolling_max_index = i;\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n    at test (/tmp/tmpzbnoqjr_.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzbnoqjr_.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tvar max_rolling_number_index\
    \ = 0;\n\tfor(var i=0; i<numbers.length; i++){\n\t\tmax_rolling = Math.max(max_rolling,\
    \ numbers[i]);\n\t\tmax_rolling_number = Math.max(max_rolling_number, numbers[i]);\n\
    \t\tmax_rolling_number_index = i;\n\t}\n\treturn [max_rolling, max_rolling_number,\
    \ max_rolling_number_index];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpnq9jqplx.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnq9jqplx.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 0\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_element;\n    for(var i = 0; i<numbers.length;\
    \ i++){\n        max_element = numbers[i];\n        for(var j=i; j<numbers.length;\
    \ j++){\n            if(numbers[j] > max_element){\n                max_element\
    \ = numbers[j];\n            }\n        }\n        result.push(max_element);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpyqxb03av.js:24:10)\n    at Object.<anonymous> (/tmp/tmpyqxb03av.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max = 0;\n    for(var i=0; i<numbers.length;\
    \ i++){\n        rolling_max = Math.max(rolling_max, numbers[i]);\n        result.push(rolling_max);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var max_rolling_max_index = 0;\n    var rolling_max_index\
    \ = 0;\n    var rolling_max_value = 0;\n    var rolling_max_value_found = false;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] > rolling_max_value){\n\
    \            rolling_max_value = numbers[i];\n            rolling_max_index =\
    \ i;\n            rolling_max_value_found = true;\n        }\n    }\n    while(rolling_max_value_found){\n\
    \        if(numbers[rolling_max_index] > max_rolling_max){\n            max_rolling_max\
    \ = numbers[rolling_max_index];\n            max_rolling_max_index = rolling_max_index;\n\
    \        }\n        rolling_max_index++;\n        if(rolling_max_index >= numbers.length){\n\
    \            rolling_max_index = 0;\n            rolling_max_value_found = false;\n\
    \        }\n    }\n    return max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpu54mtq_f.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu54mtq_f.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tfor(var i = 0; i<numbers.length; i++){\n\t\tmax_rolling\
    \ = Math.max(max_rolling, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp9odz9w_d.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9odz9w_d.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] > rolling_max){\n            rolling_max = numbers[i];\n\
    \        }\n    }\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ > rolling_max){\n            result.push(rolling_max);\n            rolling_max\
    \ = numbers[i];\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmposyu1f80.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmposyu1f80.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    var rolling_max_value;\n    var\
    \ rolling_max_index;\n    var i;\n    for(i = 0; i < numbers.length; i++){\n \
    \       rolling_max_value = numbers[i];\n        rolling_max_index = i;\n    \
    \    rolling_max = 0;\n        for(j = i; j < numbers.length; j++){\n        \
    \    if(numbers[j] > rolling_max_value){\n                rolling_max_value =\
    \ numbers[j];\n                rolling_max_index = j;\n                rolling_max\
    \ = 0;\n            }\n        }\n        result.push(rolling_max_index);\n  \
    \  }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  3,\n\
    \  3,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpyolocb_2.js:31:10)\n    at Object.<anonymous> (/tmp/tmpyolocb_2.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 3, 3,\
    \ 3 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_max = 0;\n\tvar max_rolling_max_index = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling_max = Math.max(max_rolling_max, numbers[i]);\n\t\tmax_rolling_max_index\
    \ = i;\n\t}\n\treturn max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpnfpn9njt.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnfpn9njt.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tvar rolling_numbers = rolling_max(numbers[i+1]);\n\t\tfor(var j=0;j<rolling_numbers.length;j++){\n\
    \t\t\tif(rolling_numbers[j] > max_rolling){\n\t\t\t\tmax_rolling = rolling_numbers[j];\n\
    \t\t\t\tmax_rolling_numbers = rolling_numbers;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyuxmafwa.js:6\n\tfor(var i=0;i<numbers.length;i++){\n\t       \
    \               ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n\
    \    at rolling_max (/tmp/tmpyuxmafwa.js:6:24)\n    at rolling_max (/tmp/tmpyuxmafwa.js:7:25)\n\
    \    at test (/tmp/tmpyuxmafwa.js:24:20)\n    at Object.<anonymous> (/tmp/tmpyuxmafwa.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number =\
    \ Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp4dy1j6vb.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4dy1j6vb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tvar max_rolling_numbers_index = 0;\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\tmax_rolling_numbers[max_rolling_numbers_index]\
    \ = Math.max(numbers[i], max_rolling_numbers[max_rolling_numbers_index]);\n\t\t\
    max_rolling_numbers_index++;\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  NaN,\n  NaN,\n\
    \  NaN,\n  NaN\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n\
    \    at test (/tmp/tmpbnjaoaiw.js:19:10)\n    at Object.<anonymous> (/tmp/tmpbnjaoaiw.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ NaN, NaN,\
    \ NaN, NaN ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar rolling_max = [];\n\tvar max_element = 0;\n\tfor(var i in numbers){\n\t\t\
    rolling_max.push(numbers[i]);\n\t\tmax_element = numbers[i];\n\t}\n\tfor(var i\
    \ = numbers.length - 1; i >= 0; i--){\n\t\trolling_max[i] = Math.max(rolling_max[i],\
    \ max_element);\n\t}\n\treturn rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp0k442tkk.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0k442tkk.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling_number = Math.max(max_rolling_number,numbers[i]);\n\t\tmax_rolling\
    \ = Math.max(max_rolling,max_rolling_number);\n\t}\n\treturn max_rolling;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpl1adb2oq.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl1adb2oq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tvar max_rolling_numbers_index = 0;\n\tvar current_rolling_number\
    \ = 0;\n\tfor(var i=0; i<numbers.length; i++){\n\t\tcurrent_rolling_number = numbers[i];\n\
    \t\tmax_rolling_numbers_index = 0;\n\t\tfor(var j=0; j<numbers.length; j++){\n\
    \t\t\tif(j != i){\n\t\t\t\tif(current_rolling_number > numbers[j]){\n\t\t\t\t\t\
    max_rolling_numbers[max_rolling_numbers_index] = current_rolling_number;\n\t\t\
    \t\t\tmax_rolling_numbers_index++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test\
    \ (/tmp/tmpm8vc2gb0.js:28:10)\n    at Object.<anonymous> (/tmp/tmpm8vc2gb0.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4\
    \ ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_max = 0;\n\tvar rolling_max = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\trolling_max = Math.max(rolling_max, numbers[i]);\n\t\tmax_rolling_max\
    \ = Math.max(max_rolling_max, rolling_max);\n\t}\n\treturn max_rolling_max;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpkndmtmld.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkndmtmld.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\tvar max_value\
    \ = numbers[i];\n\t\tfor(var j=i+1; j<numbers.length; j++){\n\t\t\tif(numbers[j]\
    \ > max_value){\n\t\t\t\tmax_value = numbers[j];\n\t\t\t}\n\t\t}\n\t\tresult.push(max_value);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpa2cheln2.js:23:10)\n    at Object.<anonymous> (/tmp/tmpa2cheln2.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\t\tvar\
    \ max_rolling_number = numbers[i];\n\t\tfor(var j=i+1;j<numbers.length;j++){\n\
    \t\t\tif(numbers[j] > max_rolling_number){\n\t\t\t\tmax_rolling_number = numbers[j];\n\
    \t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(max_rolling_number);\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmphse7gl9b.js:23:10)\n    at Object.<anonymous> (/tmp/tmphse7gl9b.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\tvar max_element\
    \ = numbers[i];\n\t\tfor(var j=i+1; j<numbers.length; j++){\n\t\t\tif(numbers[j]\
    \ > max_element){\n\t\t\t\tmax_element = numbers[j];\n\t\t\t}\n\t\t}\n\t\tresult.push(max_element);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpow444rb5.js:23:10)\n    at Object.<anonymous> (/tmp/tmpow444rb5.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tvar rolling_number = numbers[i];\n\t\tfor(var j in numbers){\n\t\t\tif(j >\
    \ i){\n\t\t\t\tvar rolling_number_2 = numbers[j];\n\t\t\t\tif(rolling_number >\
    \ rolling_number_2){\n\t\t\t\t\tmax_rolling = rolling_number;\n\t\t\t\t\tmax_rolling_numbers\
    \ = [rolling_number];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ max_rolling;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpn0r5czkh.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn0r5czkh.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_number = 0;\n\tvar max_index = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_number = Math.max(max_number,numbers[i]);\n\t\tmax_index = i;\n\t}\n\t\
    return max_number;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpro6kie2t.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpro6kie2t.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tvar rolling_numbers = rolling_max(numbers[i-1]);\n\t\tfor(var j in rolling_numbers){\n\
    \t\t\tif(rolling_numbers[j] > max_rolling){\n\t\t\t\tmax_rolling = rolling_numbers[j];\n\
    \t\t\t\tmax_rolling_numbers = rolling_numbers;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmp39asbu27.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp39asbu27.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_numbers_index = 0;\n \
    \   var current_rolling_numbers_index = 0;\n    \n    for(var i=0; i<numbers.length;\
    \ i++){\n        if(numbers[i]>max_rolling_numbers[current_rolling_numbers_index]){\n\
    \            max_rolling_numbers[current_rolling_numbers_index] = numbers[i];\n\
    \        }\n        else{\n            current_rolling_numbers_index++;\n    \
    \    }\n    }\n    \n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpbp0y1opr.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbp0y1opr.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_value = numbers[0];\n    var max_index = 0;\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n            max_index = i;\n        }\n\
    \    }\n    result.push(max_value);\n    result.push(numbers[max_index]);\n  \
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  undefined\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmptlbnqan8.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmptlbnqan8.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ undefined ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    var max_rolling_number = numbers[i];\n\t\tfor(var j=i+1; j<numbers.length; j++){\n\
    \t\t\tif(numbers[j] > max_rolling_number){\n\t\t\t\tmax_rolling_number = numbers[j];\n\
    \t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(max_rolling_number);\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmppcxa4tzy.js:23:10)\n    at Object.<anonymous> (/tmp/tmppcxa4tzy.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_max = 0;\n\tvar max_rolling_max_index = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tfor(var j=i;j<numbers.length;j++){\n\t\t\tif(numbers[j] > numbers[i]){\n\t\
    \t\t\tnumbers[j] = numbers[i];\n\t\t\t\tnumbers[i] = max_rolling_max;\n\t\t\t\t\
    max_rolling_max = numbers[j];\n\t\t\t\tmax_rolling_max_index = j;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpqm59si5g.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqm59si5g.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max = 0;\n    for(var i=0; i<numbers.length; i++){\n\
    \        if(numbers[i] > max){\n            max = numbers[i];\n        }\n   \
    \ }\n    for(var i=0; i<numbers.length; i++){\n        if(numbers[i] >= max){\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpw5dclocj.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw5dclocj.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number =\
    \ Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpky65xkvy.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpky65xkvy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_number = 0;\n    var max_rolling_number_index = 0;\n    var\
    \ rolling_max_index = 0;\n    var rolling_max_number = 0;\n    var rolling_max_number_index\
    \ = 0;\n    \n    for(var i=0; i<numbers.length; i++){\n        if(numbers[i]\
    \ > max_rolling_number){\n            max_rolling_number = numbers[i];\n     \
    \       max_rolling_number_index = i;\n        }\n    }\n    \n    for(var i=numbers.length-1;\
    \ i>=0; i--){\n        if(numbers[i] > rolling_max_number){\n            rolling_max_number\
    \ = numbers[i];\n            rolling_max_number_index = i;\n        }\n    }\n\
    \    \n    var rolling_max_array = [];\n    \n    for(var i=max_rolling_number_index;\
    \ i<=rolling_max_number_index; i++){\n        rolling_max_array.push(numbers[i]);\n\
    \    }\n    \n    return rolling_max_array;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmprc29mtdl.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmprc29mtdl.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\tresult.push(Math.max.apply(null,\
    \ numbers));\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp0w7dppc0.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0w7dppc0.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var rolling_max = [];\n    var rolling_max_index = 0;\n    var rolling_max_value\
    \ = 0;\n    var rolling_max_count = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] > rolling_max_value){\n            rolling_max_value\
    \ = numbers[i];\n            rolling_max_index = i;\n            rolling_max_count\
    \ = 1;\n        }\n        else if(numbers[i] == rolling_max_value){\n       \
    \     rolling_max_count++;\n        }\n        else{\n            rolling_max_value\
    \ = numbers[i];\n            rolling_max_index = i;\n            rolling_max_count\
    \ = 1;\n        }\n        rolling_max.push(rolling_max_value);\n    }\n    return\
    \ rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpf8iiufdo.js:34:10)\n    at Object.<anonymous> (/tmp/tmpf8iiufdo.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\t\tmax_rolling\
    \ = Math.max(max_rolling,numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpff30r9ub.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpff30r9ub.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i=0;i<numbers.length;i++){\n\
    \        rolling_max = numbers[i];\n        for(var j=i+1;j<numbers.length;j++){\n\
    \            if(numbers[j] > rolling_max){\n                rolling_max = numbers[j];\n\
    \            }\n        }\n        result.push(rolling_max);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmppucou0_k.js:24:10)\n    at Object.<anonymous> (/tmp/tmppucou0_k.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var current_max = 0;\n    for(var i in numbers){\n\
    \        if(numbers[i] > current_max){\n            current_max = numbers[i];\n\
    \        }\n    }\n    for(var i in numbers){\n        if(numbers[i] <= current_max){\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmppg27r2wp.js:26:10)\n    at Object.<anonymous> (/tmp/tmppg27r2wp.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var max_rolling_max_index = 0;\n    var rolling_max_index\
    \ = 0;\n    var rolling_max_value = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] > rolling_max_value){\n            rolling_max_value\
    \ = numbers[i];\n            rolling_max_index = i;\n        }\n    }\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        if(numbers[i] > rolling_max_value){\n\
    \            rolling_max_value = numbers[i];\n            rolling_max_index =\
    \ i;\n        }\n    }\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ if(numbers[i] > rolling_max_value){\n            rolling_max_value = numbers[i];\n\
    \            rolling_max_index = i;\n        }\n    }\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        if(numbers[i] > rolling_max_value){\n       \
    \     rolling_max_value = numbers[i];\n            rolling_max_index = i;\n  \
    \      }\n    }\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ > rolling_max_value){\n            rolling_max_value = numbers[i];\n       \
    \     rolling_max_index = i;\n        }\n    }\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] > rolling_max_value){\n            rolling_max_value\
    \ = numbers[i];\n            rolling_max_index = i;\n        }\n    }\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        if(numbers[i] > rolling_max_value){\n\
    \            rolling_max_value = numbers[i];\n            rolling_max_index =\
    \ i;\n        }\n    }\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ if(numbers[i] > rolling_max_value){\n            rolling_max_value = numbers[i];\n\
    \            rolling_max_index = i;\n        }\n    }\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        if(numbers[i] > rolling_max_value){\n       \
    \     rolling_max_value = numbers[i];\n            rolling_max_index = i;\n  \
    \      }\n    }\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i]\
    \ > rolling_max_value){\n            rolling_max_value = numbers[i];\n       \
    \     rolling_max_index = i;\n        }\n    }\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] > rolling_max_value){\n            rolling_max_value\
    \ = numbers[i];\n            rolling_max_index = i;\n        }\n    }\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        if(numbers[i] > rolling_max_value){\n\
    \            rolling_max_value = numbers[i];\n            rolling_max_index =\
    \ i;\n        }\n    }\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ if(numbers[i] > rolling_max_value){\n            rolling_max_value = numbers[i];\n\
    \            rolling_max_index = i;\n        }\n    }\n    for\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "/tmp/tmp34tmhy_6.js:87\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_number = 0;\n\tvar max_rolling_number_index = 0;\n\tfor(var\
    \ i=0;i<numbers.length;i++){\n\t\tmax_rolling_number = Math.max(max_rolling_number,numbers[i]);\n\
    \t\tmax_rolling_number_index = i;\n\t}\n\treturn max_rolling_number;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp1nec6mrh.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1nec6mrh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_number = numbers[0];\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_rolling_number){\n\
    \            max_rolling_number = numbers[i];\n        }\n    }\n    max_rolling_numbers.push(max_rolling_number);\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpl4a5fy1c.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl4a5fy1c.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_number = numbers[0];\n\
    \    var max_rolling_number_index = 0;\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max_rolling_number){\n            max_rolling_numbers[max_rolling_number_index]\
    \ = max_rolling_number;\n            max_rolling_number = numbers[i];\n      \
    \      max_rolling_number_index = i;\n        }\n    }\n    max_rolling_numbers[max_rolling_number_index]\
    \ = max_rolling_number;\n    return max_rolling_numbers;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpbqzvoo5i.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbqzvoo5i.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i in\
    \ numbers){\n        if(max_rolling < numbers[i]){\n            max_rolling =\
    \ numbers[i];\n            max_rolling_numbers = [];\n        }\n        if(max_rolling\
    \ == numbers[i]){\n            max_rolling_numbers.push(numbers[i]);\n       \
    \ }\n    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmp1f_tqrfv.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1f_tqrfv.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    for(var i = 1; i\
    \ < numbers.length; i++){\n        if(numbers[i] > max_number){\n            max_number\
    \ = numbers[i];\n        }\n    }\n    result.push(max_number);\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp_0m7dh99.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_0m7dh99.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i = 0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_number\
    \ = Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpc3jr_706.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc3jr_706.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i=0;\
    \ i<numbers.length; i++){\n        max_rolling_numbers.push(numbers[i]);\n   \
    \     if(max_rolling < numbers[i]){\n            max_rolling = numbers[i];\n \
    \       }\n    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpzshq9bn1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzshq9bn1.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_number = 0;\n    for(var i=0; i<numbers.length;\
    \ i++){\n        if(numbers[i] > max_rolling_number){\n            max_rolling\
    \ = numbers[i];\n            max_rolling_number = numbers[i];\n        }\n   \
    \ }\n    return max_rolling;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpka84p44r.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpka84p44r.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_number = numbers[0];\n\
    \    var max_rolling_number_index = 0;\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max_rolling_number){\n            max_rolling_number\
    \ = numbers[i];\n            max_rolling_number_index = i;\n        }\n    }\n\
    \    max_rolling_numbers.push(max_rolling_number);\n    max_rolling_numbers.push(max_rolling_number_index);\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp_p2059xt.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_p2059xt.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 0 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_element = 0;\n    var max_index = 0;\n    for(var i=0; i<numbers.length;\
    \ i++){\n        if(numbers[i] > max_element){\n            max_element = numbers[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpvh29fzu_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvh29fzu_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i=0;i<numbers.length;i++){\n\
    \        var rolling_numbers = rolling_max(numbers[i-1],numbers[i]);\n       \
    \ if(rolling_numbers.length>max_rolling.length){\n            max_rolling = rolling_numbers;\n\
    \        }\n    }\n    return max_rolling;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpy1hnregd.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy1hnregd.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var current_max = 0;\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(numbers[i] > current_max){\n            current_max = numbers[i];\n\
    \            result.push(current_max);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n    at test (/tmp/tmp0oubslsr.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0oubslsr.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var rolling_max_number = numbers[0];\n\
    \    var rolling_max_index = -1;\n    for(var i = 1; i < numbers.length; i++){\n\
    \        if(numbers[i] > rolling_max_number){\n            rolling_max_number\
    \ = numbers[i];\n            rolling_max_index = i;\n        }\n    }\n    max_rolling_numbers.push(rolling_max_number);\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp1buavt8m.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1buavt8m.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i=0;i<numbers.length;i++){\n\
    \        rolling_max = numbers[i];\n        for(var j=i;j<numbers.length;j++){\n\
    \            if(numbers[j] > rolling_max){\n                rolling_max = numbers[j];\n\
    \            }\n        }\n        result.push(rolling_max);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp8jp1js64.js:24:10)\n    at Object.<anonymous> (/tmp/tmp8jp1js64.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    max_rolling_numbers.push(Math.max.apply(null, numbers));\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpvj1euju1.js:17:10)\n    at Object.<anonymous> (/tmp/tmpvj1euju1.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(numbers[i]);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpn3y40nae.js:20:10)\n    at Object.<anonymous> (/tmp/tmpn3y40nae.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tfor(var i=0; i<numbers.length; i++){\n\t\tmax_rolling\
    \ = Math.max(max_rolling, numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmptsa6s6ih.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptsa6s6ih.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var rolling_max = [];\n    for(var i=0; i<numbers.length;\
    \ i++){\n        rolling_max.push(numbers[i]);\n        if(numbers[i] > max_rolling_max){\n\
    \            max_rolling_max = numbers[i];\n        }\n    }\n    return rolling_max;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpuxcw9fss.js:22:10)\n    at Object.<anonymous> (/tmp/tmpuxcw9fss.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_elements = [];\n    var max_elements_index = 0;\n    var current_max_element\
    \ = 0;\n    for(var i in numbers){\n        if(numbers[i] > current_max_element){\n\
    \            max_elements[max_elements_index] = numbers[i];\n            max_elements_index++;\n\
    \            current_max_element = numbers[i];\n        }\n    }\n    return max_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n    at test (/tmp/tmppfavzr1k.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmppfavzr1k.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    for(var i = 1; i\
    \ < numbers.length; i++){\n        if(numbers[i] > max_number){\n            max_number\
    \ = numbers[i];\n        }\n    }\n    result.push(max_number);\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp2gvlnf_e.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2gvlnf_e.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling_numbers.push(numbers[i]);\n\t\tif(max_rolling < numbers[i]){\n\
    \t\t\tmax_rolling = numbers[i];\n\t\t}\n\t}\n\treturn max_rolling_numbers;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmp48udy7n5.js:22:10)\n    at Object.<anonymous> (/tmp/tmp48udy7n5.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling = Math.max(max_rolling,numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_number = 0;\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(numbers[i] > max_rolling_number){\n            max_rolling = numbers[i];\n\
    \            max_rolling_number = numbers[i];\n        }\n    }\n    return max_rolling;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp0oklj_5t.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0oklj_5t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tvar max_rolling_numbers_index = 0;\n\tfor(var\
    \ i = 0; i<numbers.length; i++){\n\t\tvar current_rolling_numbers_index = i;\n\
    \t\tfor(var j=i+1; j<numbers.length; j++){\n\t\t\tif(numbers[j] > numbers[current_rolling_numbers_index]){\n\
    \t\t\t\tcurrent_rolling_numbers_index = j;\n\t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(numbers[current_rolling_numbers_index]);\n\
    \t\tmax_rolling_numbers_index = current_rolling_numbers_index;\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp55u0ntnc.js:25:10)\n    at Object.<anonymous> (/tmp/tmp55u0ntnc.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_numbers_index = 0;\n \
    \   for(var i=0;i<numbers.length;i++){\n        if(max_rolling_numbers_index<numbers.length){\n\
    \            if(numbers[i]>max_rolling_numbers[max_rolling_numbers_index]){\n\
    \                max_rolling_numbers[max_rolling_numbers_index] = numbers[i];\n\
    \                max_rolling_numbers_index++;\n            }\n        }\n    }\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpn_lhja5j.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn_lhja5j.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i =\
    \ 0; i<numbers.length; i++){\n        if(numbers[i] > max_rolling){\n        \
    \    max_rolling = numbers[i];\n            max_rolling_numbers = [numbers[i]];\n\
    \        }\n        else if(numbers[i] == max_rolling){\n            max_rolling_numbers.push(numbers[i]);\n\
    \        }\n    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpeitgk7vm.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeitgk7vm.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i=0; i<numbers.length;\
    \ i++){\n        rolling_max = numbers[i];\n        for(var j=i+1; j<numbers.length;\
    \ j++){\n            if(numbers[j] > rolling_max){\n                rolling_max\
    \ = numbers[j];\n            }\n        }\n        result.push(rolling_max);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp8yp17xo8.js:24:10)\n    at Object.<anonymous> (/tmp/tmp8yp17xo8.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i=0;i<numbers.length;i++){\n\t\tresult.push(Math.max.apply(Math,numbers));\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpfr5wk4cr.js:17:10)\n    at Object.<anonymous> (/tmp/tmpfr5wk4cr.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_value = numbers[0];\n    var max_index = 0;\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_value){\n\
    \            max_value = numbers[i];\n            max_index = i;\n        }\n\
    \    }\n    result.push(max_value);\n    result.push(max_index);\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpj7k3mrac.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj7k3mrac.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 0 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    for(var i=0;i<numbers.length;i++){\n \
    \       var max_rolling_number = numbers[i];\n        for(var j=i+1;j<numbers.length;j++){\n\
    \            if(numbers[j] > max_rolling_number){\n                max_rolling_number\
    \ = numbers[j];\n            }\n        }\n        max_rolling_numbers.push(max_rolling_number);\n\
    \    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpfcqwdcn7.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfcqwdcn7.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var rolling_max_number = 0;\n    var rolling_max_index\
    \ = 0;\n    for(var i = 0; i<numbers.length; i++){\n        if(numbers[i] > rolling_max_number){\n\
    \            rolling_max_number = numbers[i];\n            rolling_max_index =\
    \ i;\n        }\n    }\n    max_rolling_numbers.push(rolling_max_number);\n  \
    \  for(var i = rolling_max_index+1; i<numbers.length; i++){\n        if(numbers[i]\
    \ > rolling_max_number){\n            rolling_max_number = numbers[i];\n     \
    \       rolling_max_index = i;\n        }\n    }\n    max_rolling_numbers.push(rolling_max_number);\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpcbd1rgpr.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcbd1rgpr.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_number = 0;\n\tfor(var i=0; i<numbers.length; i++){\n\t\tmax_rolling_number\
    \ = Math.max(max_rolling_number, numbers[i]);\n\t}\n\treturn max_rolling_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpngfjodu8.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpngfjodu8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    var rolling_numbers = [];\n\t\tfor(var j=0; j<numbers.length; j++){\n\t\t\tif(j==i){\n\
    \t\t\t\trolling_numbers.push(numbers[j]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\trolling_numbers.push(Math.max(numbers[j],\
    \ rolling_numbers[rolling_numbers.length-1]));\n\t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(Math.max.apply(null,\
    \ rolling_numbers));\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  NaN,\n\
    \  NaN,\n  NaN\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n\
    \    at test (/tmp/tmpndn57mrm.js:26:10)\n    at Object.<anonymous> (/tmp/tmpndn57mrm.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, NaN,\
    \ NaN, NaN ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i=0;i<numbers.length;i++){\n\
    \        rolling_max = 0;\n        for(var j=0;j<numbers.length;j++){\n      \
    \      if(numbers[j] > rolling_max){\n                rolling_max = numbers[j];\n\
    \            }\n        }\n        result.push(rolling_max);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp75do927_.js:24:10)\n    at Object.<anonymous> (/tmp/tmp75do927_.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\t\tvar max_rolling_number\
    \ = numbers[i];\n\t\tfor(var j in numbers){\n\t\t\tif(j > i){\n\t\t\t\tif(numbers[j]\
    \ > max_rolling_number){\n\t\t\t\t\tmax_rolling_number = numbers[j];\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(max_rolling_number);\n\t}\n\t\
    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp8adgmme6.js:25:10)\n    at Object.<anonymous> (/tmp/tmp8adgmme6.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar rolling_max;\n\tvar rolling_max_index;\n\tvar i;\n\t\
    for(i = 0; i < numbers.length; i++){\n\t\trolling_max = numbers[i];\n\t\trolling_max_index\
    \ = i;\n\t\twhile(rolling_max > numbers[rolling_max_index]){\n\t\t\trolling_max_index++;\n\
    \t\t}\n\t\tresult.push(rolling_max);\n\t\trolling_max = numbers[rolling_max_index];\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmps6frt61q.js:27:10)\n    at Object.<anonymous> (/tmp/tmps6frt61q.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(max_rolling < numbers[i]){\n            max_rolling = numbers[i];\n\
    \            max_rolling_numbers = [numbers[i]];\n        }\n        else if(max_rolling\
    \ == numbers[i]){\n            max_rolling_numbers.push(numbers[i]);\n       \
    \ }\n    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpl6l7ps1v.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl6l7ps1v.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_number = 0;\n    var max_rolling_number_index = 0;\n    var\
    \ rolling_max_index = 0;\n    var rolling_max_value = 0;\n    var rolling_max_value_found\
    \ = false;\n    var rolling_max_value_found_index = 0;\n    var rolling_max_value_found_index2\
    \ = 0;\n    var rolling_max_value_found_index3 = 0;\n    var rolling_max_value_found_index4\
    \ = 0;\n    var rolling_max_value_found_index5 = 0;\n    var rolling_max_value_found_index6\
    \ = 0;\n    var rolling_max_value_found_index7 = 0;\n    var rolling_max_value_found_index8\
    \ = 0;\n    var rolling_max_value_found_index9 = 0;\n    var rolling_max_value_found_index10\
    \ = 0;\n    var rolling_max_value_found_index11 = 0;\n    var rolling_max_value_found_index12\
    \ = 0;\n    var rolling_max_value_found_index13 = 0;\n    var rolling_max_value_found_index14\
    \ = 0;\n    var rolling_max_value_found_index15 = 0;\n    var rolling_max_value_found_index16\
    \ = 0;\n    var rolling_max_value_found_index17 = 0;\n    var rolling_max_value_found_index18\
    \ = 0;\n    var rolling_max_value_found_index19 = 0;\n    var rolling_max_value_found_index20\
    \ = 0;\n    var rolling_max_value_found_index21 = 0;\n    var rolling_max_value_found_index22\
    \ = 0;\n    var rolling_max_value_found_index23 = 0;\n    var rolling_max_value_found_index24\
    \ = 0;\n    var rolling_max_value_found_index25 = 0;\n    var rolling_max_value_found_index26\
    \ = 0;\n    var rolling_max_value_found_index27 = 0;\n    var rolling_max_value_found_index28\
    \ = 0;\n    var rolling_max_value_found_index29 = 0;\n    var rolling_max_value_found_index30\
    \ = 0;\n    var rolling_max_value_found_index31 = 0;\n    var rolling_max_value_found_index32\
    \ = 0;\n    var rolling_max_value_found_index33 = 0;\n    var rolling_max_value_found_index34\
    \ = 0;\n    var rolling_max_value_found_index35 = 0;\n    var rolling_max_value_found_index36\
    \ = 0;\n    var rolling_max_value_found_index37 = 0;\n    var rolling_max_value_found_index38\
    \ = 0;\n    var rolling_max_value_found_index39 = 0;\n    var rolling_max_value_found_index40\
    \ = 0;\n    var rolling_max_value_found_index41 = 0;\n    var rolling_max_value_found_index42\
    \ = 0;\n    var rolling_max_value_found_index43 = 0;\n    var rolling_max_value_found_index44\
    \ = 0;\n    var rolling_max_value_found_index45 = 0;\n    var rolling_max_value_found_index46\
    \ = 0;\n    var rolling_max_value_found_index47 = 0;\n    var rolling_max_value_found_index48\
    \ = 0;\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpo5tm9ni9.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar max_number = numbers[0];\n\tvar max_index = 0;\n\tfor(var\
    \ i = 1; i < numbers.length; i++){\n\t\tif(numbers[i] > max_number){\n\t\t\tmax_number\
    \ = numbers[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\tresult.push(max_number);\n\
    \tfor(var i = max_index + 1; i < numbers.length; i++){\n\t\tresult.push(numbers[i]);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp0p46rmq0.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0p46rmq0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar max_number = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] > max_number){\n\t\t\tmax_number = numbers[i];\n\t\t\
    }\n\t}\n\tresult.push(max_number);\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpmx8vifsj.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmx8vifsj.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var rolling_max = [];\n    for(var i=0; i<numbers.length;\
    \ i++){\n        if(numbers[i] > max_rolling_max){\n            max_rolling_max\
    \ = numbers[i];\n        }\n        rolling_max.push(max_rolling_max);\n    }\n\
    \    return rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_number = 0;\n\tvar max_rolling_number_index = 0;\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\tmax_rolling_number = Math.max(max_rolling_number,\
    \ numbers[i]);\n\t\tmax_rolling_number_index = i;\n\t}\n\treturn max_rolling_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpy4g8hh4w.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy4g8hh4w.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar current_max = 0;\n\tfor(var i in numbers){\n\t\tcurrent_max\
    \ = Math.max(numbers[i], current_max);\n\t\tresult.push(current_max);\n\t}\n\t\
    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var rolling_max = 0;\n    var rolling_max_index\
    \ = 0;\n    for(var i=0; i<numbers.length; i++){\n        if(numbers[i] > rolling_max){\n\
    \            rolling_max = numbers[i];\n            rolling_max_index = i;\n \
    \       }\n    }\n    for(var i=rolling_max_index; i<numbers.length; i++){\n \
    \       if(numbers[i] > rolling_max){\n            rolling_max = numbers[i];\n\
    \        }\n    }\n    return rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpq5ph2j16.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq5ph2j16.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i in numbers){\n    \
    \    rolling_max = 0;\n        for(var j in numbers){\n            if(j > i){\n\
    \                rolling_max = Math.max(rolling_max, numbers[j]);\n          \
    \  }\n        }\n        result.push(rolling_max);\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp2p9hekjq.js:24:10)\n    at Object.<anonymous> (/tmp/tmp2p9hekjq.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 0 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_max = 0;\n\tvar max_rolling_max_index = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling_max = Math.max(max_rolling_max, numbers[i]);\n\t\tmax_rolling_max_index\
    \ = i;\n\t}\n\treturn max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpm58x9ymu.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm58x9ymu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    for(var i = 1; i\
    \ < numbers.length; i++){\n        if(numbers[i] > max_number){\n            max_number\
    \ = numbers[i];\n        }\n    }\n    result.push(max_number);\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpei9ryi5b.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpei9ryi5b.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] > rolling_max){\n            rolling_max = numbers[i];\n\
    \        }\n        result.push(rolling_max);\n    }\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(numbers[i]);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpngyxop04.js:20:10)\n    at Object.<anonymous> (/tmp/tmpngyxop04.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tvar rolling_numbers = rolling_max(numbers[i+1:]);\n\t\tfor(var j=0;\
    \ j<rolling_numbers.length; j++){\n\t\t\tif(rolling_numbers[j] > max_rolling){\n\
    \t\t\t\tmax_rolling = rolling_numbers[j];\n\t\t\t\tmax_rolling_numbers = rolling_numbers;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6xu2vauz.js:7\n\t\tvar rolling_numbers = rolling_max(numbers[i+1:]);\n\
    \t\t                                             ^\n\nSyntaxError: Unexpected\
    \ token ':'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: SyntaxError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_number = 0;\n\tvar max_rolling_number_index = 0;\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\tmax_rolling_number = Math.max(max_rolling_number,\
    \ numbers[i]);\n\t\tmax_rolling_number_index = i;\n\t}\n\treturn max_rolling_number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp1hpue0aj.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1hpue0aj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var rolling_max;\n    for(var i=0; i<numbers.length;\
    \ i++){\n        rolling_max = numbers[i];\n        for(var j=i+1; j<numbers.length;\
    \ j++){\n            if(numbers[j] > rolling_max){\n                rolling_max\
    \ = numbers[j];\n            }\n        }\n        result.push(rolling_max);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp5vy6sbpk.js:24:10)\n    at Object.<anonymous> (/tmp/tmp5vy6sbpk.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    for(var i=0;i<numbers.length;i++){\n        result.push(numbers[i]);\n\
    \    }\n    for(var i=0;i<numbers.length;i++){\n        var max = numbers[i];\n\
    \        for(var j=i;j<numbers.length;j++){\n            if(numbers[j] > max){\n\
    \                max = numbers[j];\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  4,\n  4,\n  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n\
    \  2,\n  3,\n  4\n]\n    at test (/tmp/tmp__1phyux.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp__1phyux.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 3, 4,\n    4, 4, 4, 4\n  ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var max_number = numbers[0];\n    var max_index = -1;\n\
    \    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > max_number){\n\
    \            max_number = numbers[i];\n            max_index = i;\n        }\n\
    \    }\n    result.push(max_number);\n    result.push(max_index);\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  -1\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpc161wnmc.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc161wnmc.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ -1 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\tvar rolling_max\
    \ = numbers[i];\n\t\tfor(var j=i+1; j<numbers.length; j++){\n\t\t\tif(numbers[j]\
    \ > rolling_max){\n\t\t\t\trolling_max = numbers[j];\n\t\t\t}\n\t\t}\n\t\tresult.push(rolling_max);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmph93o09e9.js:23:10)\n    at Object.<anonymous> (/tmp/tmph93o09e9.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_element = 0;\n\tvar max_index = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_element = numbers[i];\n\t\tmax_index = i;\n\t\tfor(var j=i+1;j<numbers.length;j++){\n\
    \t\t\tif(numbers[j] > max_element){\n\t\t\t\tmax_element = numbers[j];\n\t\t\t\
    \tmax_index = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_element;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpyjvwvqq6.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyjvwvqq6.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        if(max_rolling < numbers[i]){\n      \
    \      max_rolling = numbers[i];\n            max_rolling_numbers = [numbers[i]];\n\
    \        }\n        else if(max_rolling == numbers[i]){\n            max_rolling_numbers.push(numbers[i]);\n\
    \        }\n    }\n    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpn2g8wo2o.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn2g8wo2o.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var current_max = 0;\n    var current_index = 0;\n\
    \    for(var i=0;i<numbers.length;i++){\n        if(numbers[i]>current_max){\n\
    \            current_max = numbers[i];\n            current_index = i;\n     \
    \   }\n    }\n    result.push(current_max);\n    for(var i=0;i<numbers.length;i++){\n\
    \        if(numbers[i]>current_max){\n            current_max = numbers[i];\n\
    \            current_index = i;\n        }\n        else if(numbers[i]==current_max){\n\
    \            result.push(current_max);\n            current_max = numbers[i];\n\
    \            current_index = i;\n        }\n    }\n    result.push(current_max);\n\
    \    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n \
    \ assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp2su5ika_.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2su5ika_.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var rolling_max = [];\n    for(var i=0; i<numbers.length;\
    \ i++){\n        if(numbers[i] > max_rolling_max){\n            max_rolling_max\
    \ = numbers[i];\n            rolling_max = [];\n        }\n        rolling_max.push(numbers[i]);\n\
    \    }\n    return rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmp52i3rhw1.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp52i3rhw1.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar current_max = numbers[0];\n\tfor(var i = 1; i < numbers.length;\
    \ i++){\n\t\tif(numbers[i] > current_max){\n\t\t\tcurrent_max = numbers[i];\n\t\
    \t}\n\t}\n\tresult.push(current_max);\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpmt3dcxqw.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmt3dcxqw.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined\
    \ ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling_numbers.push(numbers[i]);\n\t\tif(numbers[i]>max_rolling){\n\t\
    \t\tmax_rolling = numbers[i];\n\t\t}\n\t}\n\treturn max_rolling_numbers;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmpid4lg07u.js:22:10)\n    at Object.<anonymous> (/tmp/tmpid4lg07u.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling = Math.max(max_rolling,numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var max_rolling_max_index = 0;\n    var rolling_max_index\
    \ = 0;\n    for(var i = 0; i<numbers.length; i++){\n        if(numbers[i] > max_rolling_max){\n\
    \            max_rolling_max = numbers[i];\n            max_rolling_max_index\
    \ = i;\n        }\n    }\n    for(var i = 0; i<numbers.length; i++){\n       \
    \ if(numbers[i] > max_rolling_max){\n            rolling_max_index = i;\n    \
    \    }\n    }\n    for(var i = max_rolling_max_index+1; i<numbers.length; i++){\n\
    \        if(numbers[i] > max_rolling_max){\n            max_rolling_max = numbers[i];\n\
    \        }\n    }\n    return max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpnzd8woci.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnzd8woci.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar rolling_max = [];\n\tfor(var i=0;i<numbers.length;i++){\n\t\trolling_max[i]\
    \ = Math.max.apply(Math,numbers);\n\t\tnumbers = numbers.slice(rolling_max[i]);\n\
    \t}\n\treturn rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpylbfgwhu.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpylbfgwhu.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\t\tmax_rolling_numbers.push(numbers[i]);\n\
    \t}\n\tfor(var i = numbers.length - 1; i >= 0; i--){\n\t\tvar rolling_numbers\
    \ = [];\n\t\tfor(var j in max_rolling_numbers){\n\t\t\trolling_numbers.push(max_rolling_numbers[j]);\n\
    \t\t}\n\t\tmax_rolling_numbers = rolling_numbers;\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmptai1xq5k.js:25:10)\n    at Object.<anonymous> (/tmp/tmptai1xq5k.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\t\tvar\
    \ rolling_numbers = [];\n\t\tfor(var j=0;j<numbers.length;j++){\n\t\t\tif(numbers[j]\
    \ >= numbers[i]){\n\t\t\t\trolling_numbers.push(numbers[j]);\n\t\t\t}\n\t\t}\n\
    \t\tmax_rolling_numbers.push(rolling_numbers);\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    1,\n\
    \    2,\n    3,\n    4\n  ],\n  [\n    2,\n    3,\n    4\n  ],\n  [\n    3,\n\
    \    4\n  ],\n  [\n    4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n\
    \  3,\n  4\n]\n    at test (/tmp/tmp4y3c9lot.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4y3c9lot.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 1, 2,\
    \ 3, 4 ], [ 2, 3, 4 ], [ 3, 4 ], [ 4 ] ],\n  expected: [ 1, 2, 3, 4 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var current_max = 0;\n    var current_index = 0;\n\
    \    var current_number = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(current_number > numbers[i]){\n            current_max = numbers[i];\n\
    \            current_index = i;\n        }\n        else if(current_number ==\
    \ numbers[i]){\n            current_max = Math.max(current_max, numbers[i]);\n\
    \        }\n    }\n    result.push(current_max);\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpqdq3usnj.js:26:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpqdq3usnj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_max = 0;\n\tvar max_rolling_max_index = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling_max = Math.max(max_rolling_max, numbers[i]);\n\t\tmax_rolling_max_index\
    \ = i;\n\t}\n\treturn max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmppxsa67x1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppxsa67x1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tvar current_max = 0;\n\tfor(var i in numbers){\n\t\tcurrent_max\
    \ = Math.max(numbers[i], current_max);\n\t}\n\tresult.push(current_max);\n\tfor(var\
    \ i in numbers){\n\t\tcurrent_max = Math.max(numbers[i], current_max);\n\t\tresult.push(current_max);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp1qonpmq3.js:22:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp1qonpmq3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tvar max_rolling_number_count\
    \ = 0;\n\tfor(var i in numbers){\n\t\tmax_rolling_number = Math.max(max_rolling_number,\
    \ numbers[i]);\n\t\tmax_rolling_number_count++;\n\t\tif(max_rolling_number_count\
    \ == 3){\n\t\t\tmax_rolling = max_rolling_number;\n\t\t\tmax_rolling_number_count\
    \ = 0;\n\t\t}\n\t}\n\treturn max_rolling;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpfii4usgz.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfii4usgz.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling = 0;\n    var max_rolling_numbers = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        if(numbers[i] > max_rolling){\n      \
    \      max_rolling = numbers[i];\n        }\n        if(numbers[i] > max_rolling\
    \ && numbers[i] <= max_rolling_numbers[max_rolling_numbers.length-1]){\n     \
    \       max_rolling_numbers.push(numbers[i]);\n        }\n    }\n    return max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmp66ltq5pw.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp66ltq5pw.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_number = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling = Math.max(max_rolling,numbers[i]);\n\t\tmax_rolling_number =\
    \ Math.max(max_rolling_number,numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpma4twhr6.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpma4twhr6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i = 0; i < numbers.length; i++){\n\t\tvar max_element\
    \ = numbers[i];\n\t\tfor(var j = i; j < numbers.length; j++){\n\t\t\tif(numbers[j]\
    \ > max_element){\n\t\t\t\tmax_element = numbers[j];\n\t\t\t}\n\t\t}\n\t\tresult.push(max_element);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpe1m9uj1f.js:23:10)\n    at Object.<anonymous> (/tmp/tmpe1m9uj1f.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i=0;i<numbers.length;i++){\n\t\tvar max_element\
    \ = numbers[i];\n\t\tfor(var j=i+1;j<numbers.length;j++){\n\t\t\tif(numbers[j]\
    \ > max_element){\n\t\t\t\tmax_element = numbers[j];\n\t\t\t}\n\t\t}\n\t\tresult.push(max_element);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp919plvrc.js:23:10)\n    at Object.<anonymous> (/tmp/tmp919plvrc.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\t\tvar rolling_numbers\
    \ = [];\n\t\tfor(var j in numbers){\n\t\t\tif(j > i){\n\t\t\t\trolling_numbers.push(numbers[j]);\n\
    \t\t\t}\n\t\t}\n\t\tmax_rolling_numbers.push(rolling_numbers.reduce(function(a,\
    \ b){return Math.max(a, b);}));\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "/tmp/tmplxz7k31g.js:12\n\t\tmax_rolling_numbers.push(rolling_numbers.reduce(function(a,\
    \ b){return Math.max(a, b);}));\n\t\t                                        \
    \ ^\n\nTypeError: Reduce of empty array with no initial value\n    at Array.reduce\
    \ (<anonymous>)\n    at rolling_max (/tmp/tmplxz7k31g.js:12:44)\n    at test (/tmp/tmplxz7k31g.js:23:20)\n\
    \    at Object.<anonymous> (/tmp/tmplxz7k31g.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  exit_code: 1
  status: Exception
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling = Math.max(max_rolling, numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_max = 0;\n\tvar max_rolling_max_index = 0;\n\tfor(var i in numbers){\n\
    \t\tvar rolling_max = numbers[i];\n\t\tfor(var j in numbers){\n\t\t\tif(j > i){\n\
    \t\t\t\tif(numbers[j] > rolling_max){\n\t\t\t\t\trolling_max = numbers[j];\n\t\
    \t\t\t\tmax_rolling_max = rolling_max;\n\t\t\t\t\tmax_rolling_max_index = j;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max_rolling_max;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpxiz3voej.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxiz3voej.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var result = [];\n    var current_max = numbers[0];\n    var current_index\
    \ = -1;\n    for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] >\
    \ current_max){\n            current_max = numbers[i];\n            current_index\
    \ = i;\n        }\n    }\n    result.push(current_max);\n    result.push(current_index);\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  -1\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpg37xtf4d.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg37xtf4d.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ -1 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_number = 0;\n    var max_rolling_number_index = 0;\n    for(var\
    \ i=0; i<numbers.length; i++){\n        if(numbers[i] > max_rolling_number){\n\
    \            max_rolling_number = numbers[i];\n            max_rolling_number_index\
    \ = i;\n        }\n    }\n    return max_rolling_number_index;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpia_5r9j7.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpia_5r9j7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar result = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\tvar max_element\
    \ = numbers[i];\n\t\tfor(var j=i+1; j<numbers.length; j++){\n\t\t\tif(numbers[j]\
    \ > max_element){\n\t\t\t\tmax_element = numbers[j];\n\t\t\t}\n\t\t}\n\t\tresult.push(max_element);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp34n7z3nd.js:23:10)\n    at Object.<anonymous> (/tmp/tmp34n7z3nd.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tfor(var i=0;i<numbers.length;i++){\n\t\tmax_rolling\
    \ = Math.max(max_rolling,numbers[i]);\n\t}\n\treturn max_rolling;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rolling_max;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4, 4]);\n\
    \  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n}\n\n\
    test();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmps0bjj7qx.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps0bjj7qx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tmax_rolling_numbers.push(numbers[i]);\n\t\tmax_rolling = Math.max(max_rolling,\
    \ numbers[i]);\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmptefuk9cl.js:20:10)\n    at Object.<anonymous> (/tmp/tmptefuk9cl.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var max_rolling_max_index = 0;\n    var current_rolling_max\
    \ = 0;\n    var current_rolling_max_index = 0;\n    var i;\n    for(i = 0; i <\
    \ numbers.length; i++){\n        if(numbers[i] > current_rolling_max){\n     \
    \       current_rolling_max = numbers[i];\n            current_rolling_max_index\
    \ = i;\n        }\n    }\n    for(i = numbers.length - 1; i >= 0; i--){\n    \
    \    if(numbers[i] > current_rolling_max){\n            current_rolling_max =\
    \ numbers[i];\n            current_rolling_max_index = i;\n        }\n    }\n\
    \    max_rolling_max = current_rolling_max;\n    max_rolling_max_index = current_rolling_max_index;\n\
    \    return max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmp3r516q96.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3r516q96.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\t\tmax_rolling_numbers.push(Math.max.apply(Math,\
    \ numbers));\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmp8g02cg13.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8g02cg13.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tvar rolling_max_number = 0;\n\tfor(var i=0;\
    \ i<numbers.length; i++){\n\t\trolling_max_number = Math.max(rolling_max_number,\
    \ numbers[i]);\n\t\tmax_rolling_numbers.push(rolling_max_number);\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var rolling_max_index = 0;\n    for(var i=0;\
    \ i<numbers.length; i++){\n        if(numbers[i] > max_rolling_max){\n       \
    \     max_rolling_max = numbers[i];\n            rolling_max_index = i;\n    \
    \    }\n    }\n    return max_rolling_max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmpk8n1c6x0.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk8n1c6x0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i in numbers){\n\
    \t\tvar rolling_numbers = rolling_max(numbers[i+1]);\n\t\tfor(var j in rolling_numbers){\n\
    \t\t\tif(rolling_numbers[j] > max_rolling){\n\t\t\t\tmax_rolling = rolling_numbers[j];\n\
    \t\t\t\tmax_rolling_numbers = rolling_numbers;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmpmvhcso1c.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmvhcso1c.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers = [];\n\tfor(var i=0; i<numbers.length; i++){\n\t\t\
    max_rolling_numbers.push(Math.max.apply(Math, numbers));\n\t}\n\treturn max_rolling_numbers;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  4,\n\
    \  4,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n  \
    \  at test (/tmp/tmpypw6x30j.js:17:10)\n    at Object.<anonymous> (/tmp/tmpypw6x30j.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 4, 4,\
    \ 4 ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_element = 0;\n\tvar max_index = 0;\n\tfor(var i=0; i<numbers.length;\
    \ i++){\n\t\tmax_element = numbers[i];\n\t\tmax_index = i;\n\t\tfor(var j=i+1;\
    \ j<numbers.length; j++){\n\t\t\tif(numbers[j] > max_element){\n\t\t\t\tmax_element\
    \ = numbers[j];\n\t\t\t\tmax_index = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_element;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4,\
    \ 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n[]\n    at test (/tmp/tmppq_qrl0r.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppq_qrl0r.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i = 0; i<numbers.length;\
    \ i++){\n\t\tmax_rolling_numbers.push(numbers[i]);\n\t\tmax_rolling = Math.max(max_rolling,\
    \ numbers[i]);\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  4,\n  4,\n  4,\n  4\n]\n  \
    \  at test (/tmp/tmprzs5zsrg.js:20:10)\n    at Object.<anonymous> (/tmp/tmprzs5zsrg.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 2,\
    \ 1 ],\n  expected: [ 4, 4, 4, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling_numbers=[];\n\tvar current_rolling_numbers=[];\n\tvar current_rolling_numbers_index=0;\n\
    \tfor(var i=0;i<numbers.length;i++){\n\t\tcurrent_rolling_numbers.push(numbers[i]);\n\
    \t\tcurrent_rolling_numbers_index=i;\n\t}\n\twhile(current_rolling_numbers_index<numbers.length){\n\
    \t\tmax_rolling_numbers.push(Math.max.apply(Math,current_rolling_numbers));\n\t\
    \tcurrent_rolling_numbers_index++;\n\t\tcurrent_rolling_numbers=[];\n\t\tfor(var\
    \ i=current_rolling_numbers_index;i<numbers.length;i++){\n\t\t\tcurrent_rolling_numbers.push(numbers[i]);\n\
    \t\t}\n\t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  2,\n  3,\n  4\n]\n    at test (/tmp/tmp1jrp32b8.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1jrp32b8.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4 ],\n \
    \ expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_numbers = [];\n    var max_rolling_numbers_index = 0;\n \
    \   var max_rolling_numbers_value = numbers[0];\n    for(var i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max_rolling_numbers_value){\n            max_rolling_numbers_value\
    \ = numbers[i];\n            max_rolling_numbers_index = i;\n        }\n    }\n\
    \    max_rolling_numbers.push(max_rolling_numbers_value);\n    max_rolling_numbers.push(max_rolling_numbers_index);\n\
    \    return max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpj4pdo7mk.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj4pdo7mk.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ 0 ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \tvar max_rolling = 0;\n\tvar max_rolling_numbers = [];\n\tfor(var i=0;i<numbers.length;i++){\n\
    \t\tmax_rolling = Math.max(max_rolling,numbers[i]);\n\t\tmax_rolling_numbers.push(max_rolling);\n\
    \t}\n\treturn max_rolling_numbers;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//From a given list of integers, generate a list of rolling maximum element\
    \ found until given moment\n// in the sequence.\nfunction rolling_max(numbers){\n\
    \    var max_rolling_max = 0;\n    var rolling_max = [];\n    for(var i=0; i<numbers.length;\
    \ i++){\n        rolling_max.push(numbers[i]);\n        if(max_rolling_max < numbers[i]){\n\
    \            max_rolling_max = numbers[i];\n        }\n    }\n    for(var i=numbers.length-1;\
    \ i>=0; i--){\n        rolling_max.push(numbers[i]);\n        if(max_rolling_max\
    \ < numbers[i]){\n            max_rolling_max = numbers[i];\n        }\n    }\n\
    \    return rolling_max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
    \ 3, 3, 100, 100]);\n}\n\ntest();"
  stdout: ''
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  4,\n  3,\n  2,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n\
    \  2,\n  3,\n  4\n]\n    at test (/tmp/tmp0l_6u4x3.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0l_6u4x3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2, 3, 4,\n    4, 3, 2, 1\n  ],\n  expected: [ 1, 2, 3, 4 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.6.0\n"
  exit_code: 1
  status: AssertionError

name: HumanEval_43_pairs_sum_to_zero
language: js
prompt: "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns\
  \ True if there are two distinct elements in the list that\n// sum to zero, and\
  \ False otherwise.\nfunction pairs_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
  \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    sum += pairs[i];\n    if(sum === 0){\n     \
    \ return true;\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n \
    \       return true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0;\
    \ i<l.length-1; i++){\n    if(l[i]+l[i+1] != 0){\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "    for(var i = 0; i < l.length; i++){\n        for(var\
    \ j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] == 0){\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n",
  "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "    for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j <\
    \ l.length; j++){\n            if(l[i] + l[j] == 0){\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    return p + c;\n  });\n  return pairs === 0;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n    return\
    \ [x[0], x[0]+x[1]];\n  });\n  return pairs.reduce(function(acc, x){\n    return\
    \ acc && x[1] == 0;\n  }, true);\n}\n", "  for(var i=0; i<l.length; i++){\n  \
    \  for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length\
    \ < 2)\n    return false;\n  var pairs = l.slice(1).map(function(pair){\n    return\
    \ [pair[0], pair[0]+pair[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  for(var\
    \ i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  var pairs = l.slice(0);\n  pairs.sort(function(a,b){return b-a});\n \
    \ var zero = true;\n  for(var i = 0; i < pairs.length; i++){\n    if(pairs[i]\
    \ != 0){\n      zero = false;\n      break;\n    }\n  }\n  return zero;\n}\n",
  "  if(l.length == 0){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0] + pair[1];\n  });\n  var pairs2 = pairs.slice(1).map(function(pair){\n\
    \    return pair[0] + pair[1];\n  });\n  return pairs.indexOf(pairs2[0]) == -1\
    \ && pairs.indexOf(pairs2[1]) == -1;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    var pair = pairs[i];\n\
    \    sum += pair[1];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = l.slice();\n  pairs.sort(function(a,b){\n    return\
    \ a - b;\n  });\n  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n  \
    \  sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  if(l.length ==\
    \ 2){\n    return l[0]+l[1] == 0;\n  }\n  if(l[0]+l[1] == 0){\n    return pairs_sum_to_zero(l.slice(1));\n\
    \  }\n  if(l[0]+l[1] != 0){\n    return pairs_sum_to_zero(l.slice(1));\n  }\n\
    \  return false;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum\
    \ = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n    if(sum\
    \ === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", "  for(var i=0;i<l.length;i++){\n\
    \    for(var j=i+1;j<l.length;j++){\n      if(l[i]+l[j]==0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length\
    \ == 0){\n    return false;\n  }\n  if(l.length == 1){\n    return l[0] == 0;\n\
    \  }\n  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    var pair = pairs[i];\n    if(pair[1] == 0){\n      return false;\n\
    \    }\n    sum += pair[1];\n  }\n  return sum == 0;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    if(l[i]+l[i+1] != 0){\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if(l.length == 0){\n    return false;\n  }\n  if(l.length ==\
    \ 1){\n    return l[0] == 0;\n  }\n  var pairs = l.slice(1).map(function(x){return\
    \ [x[0], x[0]+x[1]];});\n  var zeros = pairs.filter(function(x){return x[1] ==\
    \ 0;});\n  return zeros.length == 0;\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i in pairs){\n    var pair = pairs[i];\n    sum +=\
    \ pair[1];\n  }\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n  var pair;\n\
    \  for(var i=0; i<pairs.length; i++){\n    pair = pairs[i];\n    for(var j=i+1;\
    \ j<pairs.length; j++){\n      if(pair[0] + pair[1] != pairs[j][0] + pairs[j][1]){\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n", "  for(var\
    \ i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  for(var i=0; i<l.length-1; i++){\n    var pair = l[i];\n    var next_pair\
    \ = l[i+1];\n    if(pair + next_pair != 0){\n      return false;\n    }\n  }\n\
    \  return true;\n}\n", "    var pairs = l.slice();\n    var pair;\n    var i;\n\
    \    for(i = 0; i < pairs.length; i++){\n        pair = pairs[i];\n        pair[0]\
    \ = pair[0] + pair[1];\n        pairs.splice(i,1);\n    }\n    return pairs.length\
    \ == 0;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "    var i, j, k;\n    for(i = 0; i < l.length; i++){\n\
    \        for(j = i+1; j < l.length; j++){\n            k = l[i] + l[j];\n    \
    \        if(k === 0){\n                return true;\n            }\n         \
    \   if(k !== l[j]){\n                return false;\n            }\n        }\n\
    \    }\n    return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n    return\
    \ false;\n  }\n  if(l.length == 2){\n    return l[0] === l[1];\n  }\n  var pairs\
    \ = l.slice(1).reduce(function(p,c){\n    return p + c;\n  }, 0);\n  if(pairs\
    \ === 0){\n    return true;\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    return p + c;\n  }, 0);\n  var zeros = l.slice(1).reduce(function(p,c){\n\
    \    return p + c;\n  }, 0);\n  return pairs === zeros;\n}\n", "  var pairs =\
    \ _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n\
    \  });\n  return sum === 0;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n \
    \   return [x[0], x[0]+x[1]];\n  });\n  for(var i=0; i<pairs.length; i++){\n \
    \   for(var j=i+1; j<pairs.length; j++){\n      if(pairs[i][1] != pairs[j][1]){\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n", "  for(var\
    \ i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "    var n = l.length;\n    for(var i=0; i<n; i++){\n        for(var j=i+1;\
    \ j<n; j++){\n            if(l[i] + l[j] === 0){\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n", "    for(var i=0; i<l.length-1;\
    \ i++){\n        var pair = l[i];\n        var next_pair = l[i+1];\n        if(pair\
    \ + next_pair != 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if(l.length < 2)\n    return false;\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0] + pair[1];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair === 0;\n  });\n  return zeros.length === 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  if(l.length == 2){\n    return l[0] == l[1];\n\
    \  }\n  if(l[0] + l[1] == 0){\n    return true;\n  }\n  return pairs_sum_to_zero(l[l.length-1])\
    \ || pairs_sum_to_zero(l[l.length-2]);\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    if(l[i]+l[i+1] != 0){\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var pair;\n  var i;\n\
    \  var j;\n  var k;\n  var sum;\n  var pair_count = 0;\n  for(i = 0; i < pairs.length;\
    \ i++){\n    pair = pairs[i];\n    for(j = i+1; j < pairs.length; j++){\n    \
    \  if(pairs[j][0] + pairs[j][1] !== 0){\n        pair_count++;\n        break;\n\
    \      }\n    }\n    if(pair_count === 2){\n      return true;\n    }\n  }\n \
    \ return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "    for(var i=0; i<l.length-1; i++){\n\
    \        for(var j=i+1; j<l.length; j++){\n            if(l[i]+l[j] == 0){\n \
    \               return true;\n            }\n        }\n    }\n    return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return pair[0] + pair[1];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair === 0;\n  });\n  return zeros.length === 0;\n}\n", "  for(var\
    \ i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  for(var i=0;i<l.length;i++){\n\
    \    for(var j=i+1;j<l.length;j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n  \
    \  return false;\n  }\n  var pairs = l.slice();\n  pairs.sort(function(a,b){return\
    \ b-a});\n  for(var i=0; i<pairs.length; i++){\n    if(pairs[i] > 0){\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n \
    \       return true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs\
    \ = l.slice();\n  pairs.sort(function(a,b){\n    return a - b;\n  });\n  for(var\
    \ i = 1; i < pairs.length; i++){\n    if(pairs[i-1] + pairs[i] === 0){\n     \
    \ return false;\n    }\n  }\n  return true;\n}\n", "  var i, j, k;\n  for(i =\
    \ 0, j = 1, k = l[0]; i < l.length; i++){\n    if(l[i] != 0){\n      if(l[j] +\
    \ l[i] != 0){\n\treturn false;\n      }\n      if(l[k] + l[i] != 0){\n\treturn\
    \ false;\n      }\n      j++;\n      k++;\n    }\n  }\n  return true;\n}\n", " \
    \ for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n   \
    \   if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = l.slice(0);\n  var sum = 0;\n  var first_pair =\
    \ pairs.shift();\n  while(pairs.length > 0){\n    var pair = pairs.shift();\n\
    \    sum += pair;\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[1]];\n  });\n  var pairs_with_zero = pairs.filter(function(pair){\n\
    \    return pair[0] === 0;\n  });\n  return pairs_with_zero.length === 0;\n}\n",
  "    for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return true;\n  \
    \          }\n        }\n    }\n    return false;\n}\n", "    for(var i=0; i<l.length-1;\
    \ i++){\n        for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ === 0){\n                return true;\n            }\n        }\n    }\n   \
    \ return false;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n \
    \ }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var\
    \ pairs = l.slice(1).map(function(pair){\n    return [pair[0], pair[1]];\n  });\n\
    \  var pairs_with_zero = pairs.filter(function(pair){\n    return pair[0] ===\
    \ 0 && pair[1] === 0;\n  });\n  return pairs_with_zero.length === 0;\n}\n", " \
    \ for(var i=0; i<l.length-1; i++){\n    var pair = l[i];\n    for(var j=i+1; j<l.length;\
    \ j++){\n      var pair_2 = l[j];\n      if(pair[0] + pair[1] != pair_2){\n  \
    \      return false;\n      }\n    }\n  }\n  return true;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(x){\n \
    \   return [x[0], x[0]+x[1]];\n  });\n  var zeros = pairs.filter(function(x){\n\
    \    return x[1] == 0;\n  });\n  return zeros.length == pairs.length;\n}\n", " \
    \ if(l.length == 0){\n    return false;\n  }\n  if(l.length == 1){\n    return\
    \ l[0] == 0;\n  }\n  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i in pairs){\n\
    \    var pair = pairs[i];\n    sum += pair[1];\n    if(sum == 0){\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    for(var i=0; i<l.length;\
    \ i++){\n        for(var j=i+1; j<l.length; j++){\n            if(l[i] + l[j]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n \
    \ }\n  return false;\n}\n", "  if(l.length == 0){\n    return false;\n  }\n  var\
    \ pairs = l.slice(0);\n  var pair = pairs.shift();\n  while(pairs.length){\n \
    \   var next = pairs.shift();\n    if(pair[0] + pair[1] != next[0] + next[1]){\n\
    \      return false;\n    }\n    pair[0] = next[0];\n    pair[1] = next[1];\n\
    \  }\n  return true;\n}\n", "  var pairs = _.zip(_.range(l.length), l);\n  var\
    \ zeros = _.filter(pairs, function(pair){\n    return pair[1] === 0;\n  });\n\
    \  return zeros.length === 2;\n}\n", "  for(var i=0;i<l.length;i++){\n    for(var\
    \ j=i+1;j<l.length;j++){\n      if(l[i] + l[j] === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    for(var i = 0; i < l.length;\
    \ i++){\n        for(var j = i + 1; j < l.length; j++){\n            if(l[i] +\
    \ l[j] == 0){\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "    for(var\
    \ i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n         \
    \   if(l[i] + l[j] === 0){\n                return true;\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    var pairs = _.pairs(l);\n\
    \    var sum = 0;\n    _.each(pairs, function(pair){\n        sum += pair[1];\n\
    \    });\n    return sum == 0;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  if(l.length == 2){\n    return l[0] + l[1] == 0;\n  }\n  if(l[0] + l[1]\
    \ == 0){\n    return true;\n  }\n  return pairs_sum_to_zero(l[l.length-2]) + pairs_sum_to_zero(l[l.length-1]);\n\
    }\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum == 0;\n}\n", "  var pairs = l.slice();\n\
    \  pairs.sort(function(a,b){\n    return a - b;\n  });\n  for(var i = 0; i < pairs.length;\
    \ i++){\n    if(pairs[i+1] - pairs[i] === 0){\n      return true;\n    }\n  }\n\
    \  return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    var pair = l[i];\n\
    \    var next_pair = l[i+1];\n    if(pair + next_pair != 0){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "    var pairs = l.slice();\n    var sum =\
    \ 0;\n    for(var i = 0; i < pairs.length; i++){\n        var pair = pairs[i];\n\
    \        sum += pair[0];\n        pairs.splice(i, 1);\n    }\n    return sum ===\
    \ 0;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    var pair = l[i];\n    var\
    \ next_pair = l[i+1];\n    if(pair + next_pair == 0){\n      return true;\n  \
    \  }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n\
    \  var first_pair = pairs.shift();\n  while(pairs.length > 0){\n    var second_pair\
    \ = pairs.shift();\n    sum += first_pair[0] + second_pair[0];\n    first_pair\
    \ = second_pair;\n  }\n  return sum === 0;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  var i, j,\
    \ sum;\n  for(i=0, j=1; i<l.length; i++){\n    sum = 0;\n    for(j=0; j<l.length;\
    \ j++){\n      if(l[i]+l[j] === 0){\n        sum += 1;\n      }\n    }\n    if(sum\
    \ === 2){\n      return true;\n    }\n  }\n  return false;\n}\n", "    for(var\
    \ i = 0; i < l.length; i++){\n        for(var j = i+1; j < l.length; j++){\n \
    \           if(l[i] + l[j] == 0){\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n", "  if(l.length < 2)\n    return false;\n\
    \  var pairs = l.slice(1).map(function(x){\n    return [x[0], x[0]+x[1]];\n  });\n\
    \  var zeros = pairs.filter(function(x){\n    return x[1] == 0;\n  });\n  return\
    \ zeros.length == pairs.length;\n}\n", "  for(var i=0; i<l.length-1; i++){\n \
    \   var pair = l[i];\n    var next_pair = l[i+1];\n    if(pair + next_pair !=\
    \ 0){\n      return false;\n    }\n  }\n  return true;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    var pair = pairs[i];\n\
    \    sum += pair[1];\n  }\n  return sum === 0;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(i){\n\
    \    return [i[0], i[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[0] === 0;\n  });\n  return zeros.length === 0;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n\
    \    return [pair[0], pair[0]+pair[1]];\n  });\n  var zeros = pairs.filter(function(pair){\n\
    \    return pair[1] === 0;\n  });\n  return zeros.length === 0;\n}\n", "    for(var\
    \ i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n         \
    \   if(l[i] + l[j] == 0){\n                return true;\n            }\n     \
    \   }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length; i++){\n   \
    \ for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n \
    \       return true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0;\
    \ i<l.length-1; i++){\n    if(l[i]+l[i+1] != 0){\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "    var i, j, sum;\n    for(i = 0; i < l.length;\
    \ i++){\n        sum = 0;\n        for(j = 0; j < l.length; j++){\n          \
    \  sum += l[j];\n        }\n        if(sum === 0){\n            return true;\n\
    \        }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  _.each(pairs, function(pair){\n    sum += pair[1];\n  });\n\
    \  return sum === 0;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = _.pairs(l);\n  var sum = 0;\n  for(var i=0; i<pairs.length;\
    \ i++){\n    var pair = pairs[i];\n    sum += pair[1];\n    if(sum === 0){\n \
    \     return true;\n    }\n  }\n  return false;\n}\n", "  if(l.length == 0)\n\
    \    return false;\n  var pairs = l.slice();\n  var pair = pairs.shift();\n  while(pairs.length){\n\
    \    var next_pair = pairs.shift();\n    if(pair[0] + pair[1] != 0)\n      return\
    \ false;\n    pair[0] = pair[1];\n    pair[1] = next_pair[0];\n  }\n  return true;\n\
    }\n", "  for(var i=0; i<l.length-1; i++){\n    if(l[i]+l[i+1] != 0){\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if(l.length < 2)\n    return false;\n\
    \  if(l.length == 2)\n    return l[0] == l[1];\n  var pairs = l.slice(1).map(function(x){return\
    \ [x[0], x[0]+x[1]];});\n  var pairs2 = pairs.filter(function(x){return l.indexOf(x[0])\
    \ > l.indexOf(x[1]);});\n  return pairs2.length == 0;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "    for(var\
    \ i=0; i<l.length-1; i++){\n        for(var j=i+1; j<l.length; j++){\n       \
    \     if(l[i] + l[j] === 0){\n                return true;\n            }\n  \
    \      }\n    }\n    return false;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  if(l.length == 2){\n    return l[0]+l[1] == 0;\n  }\n  var pairs = pairs_sum_to_zero(l[0]);\n\
    \  for(var i = 1; i < l.length; i++){\n    pairs = pairs || pairs_sum_to_zero(l[i]);\n\
    \  }\n  return pairs;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    if(l[i]\
    \ + l[i+1] != 0){\n      return false;\n    }\n  }\n  return true;\n}\n", "  for(var\
    \ i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n  \
    \    if(l[i]+l[j]==0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "    var i, j, k;\n    var pairs = [];\n    var pair_sum = 0;\n    for(i\
    \ = 0; i < l.length; i++){\n        for(j = i + 1; j < l.length; j++){\n     \
    \       pair_sum += l[i] + l[j];\n            if(pair_sum === 0){\n          \
    \      pairs.push([i, j]);\n            }\n        }\n    }\n    return pairs;\n\
    }\n", "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n\
    \      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = _.zip(l,l.slice(1));\n\
    \  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n    sum += pairs[i][0];\n\
    \  }\n  return sum == 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n\
    \  var pairs = l.slice(1).map(function(x){\n    return [x, 0];\n  });\n  for(var\
    \ i = 1; i < l.length; i++){\n    var pair = pairs.filter(function(pair){\n  \
    \    return pair[0] === l[i];\n    })[0];\n    if(pair){\n      pair[1] += 1;\n\
    \    }\n  }\n  return pairs.filter(function(pair){\n    return pair[1] === 1;\n\
    \  }).length === 0;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  if(l.length == 2){\n    return l[0] + l[1] == 0;\n  }\n  var pairs = pairs_sum_to_zero(l);\n\
    \  for(var i = 1; i < pairs.length; i++){\n    if(pairs[i-1] != pairs[i]){\n \
    \     return false;\n    }\n  }\n  return true;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n \
    \       return true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0;\
    \ i<l.length-1; i++){\n    if(l[i]+l[i+1] != 0){\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "    for(var i=0; i<l.length; i++){\n        for(var\
    \ j=i+1; j<l.length; j++){\n            if(l[i] + l[j] === 0){\n             \
    \   return true;\n            }\n        }\n    }\n    return false;\n}\n", " \
    \ for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n     \
    \ if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = l.slice(0);\n  var pair;\n  var sum = 0;\n  for(var\
    \ i=0; i<pairs.length; i++){\n    pair = pairs[i];\n    sum += pair[0];\n    pairs.splice(i,1);\n\
    \  }\n  return sum == 0;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var\
    \ j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "    for(var\
    \ i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n         \
    \   if(l[i] + l[j] == 0){\n                return true;\n            }\n     \
    \   }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n \
    \   if(l[i]+l[i+1] != 0){\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n    \
    \  if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "    for(var i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return true;\n  \
    \          }\n        }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs\
    \ = l.slice();\n  var sum = 0;\n  var first_pair = true;\n  for(var i=0;i<pairs.length;i++){\n\
    \    var pair = pairs[i];\n    if(pair[0] === pair[1]){\n      continue;\n   \
    \ }\n    if(!first_pair){\n      if(pair[0] > pair[1]){\n        pair[0] = pair[0]\
    \ - pair[1];\n        pair[1] = pair[1];\n      }\n      else{\n        pair[0]\
    \ = pair[0] - pair[1];\n        pair[1] = pair[0];\n      }\n    }\n    else{\n\
    \      if(pair[0] > pair[1]){\n        pair[0] = pair[0] - pair[1];\n        pair[1]\
    \ = pair[1];\n      }\n      else{\n        pair[0] = pair[0] - pair[1];\n   \
    \     pair[1] = pair[0];\n      }\n    }\n    sum += pair[0];\n    first_pair\
    \ = false;\n  }\n  return sum === 0;\n}\n", "    var i, j, k;\n    for(i=0, j=l.length-1;\
    \ i<j; i++){\n        k = l[i] + l[j];\n        if(k !== 0){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "  if(l.length < 2){\n   \
    \ return false;\n  }\n  var pairs = l.slice(1).map(function(pair){\n    return\
    \ pair[0] + pair[1];\n  });\n  var zeros = pairs.filter(function(pair){\n    return\
    \ pair === 0;\n  });\n  return zeros.length === 0;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var\
    \ i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n\
    \      if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs = _.pairs(l);\n\
    \  var sum = 0;\n  for(var i in pairs){\n    sum += pairs[i][1];\n  }\n  return\
    \ sum === 0;\n}\n", "  if(l.length < 2){\n    return false;\n  }\n  var pairs\
    \ = l.slice();\n  var pair;\n  for(var i = 1; i < pairs.length; i++){\n    pair\
    \ = pairs[i];\n    if(pair[0] + pair[1] != pairs[i - 1][0] + pairs[i - 1][1]){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  if(l.length < 2){\n\
    \    return false;\n  }\n  if(l.length == 2){\n    return l[0] + l[1] == 0;\n\
    \  }\n  if(l[0] + l[1] == 0){\n    return true;\n  }\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i] + l[i-1] != 0){\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  for(var i in l){\n    for(var j in l){\n      if(i != j && l[i]\
    \ + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n\
    \      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n    var sum = 0;\n    for(var\
    \ j=i+1; j<l.length; j++){\n      sum += l[i];\n      if(sum == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n\
    \  pairs.sort(function(a,b){\n    return a - b;\n  });\n  for(var i = 1; i < pairs.length;\
    \ i++){\n    if(pairs[i] - pairs[i-1] != 0){\n      return false;\n    }\n  }\n\
    \  return true;\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length;\
    \ j++){\n      if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n\
    \      if(l[i] + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  if(l.length < 2)\n    return false;\n  var pairs = l.slice(1).reduce(function(p,c){\n\
    \    if(p[0] + c[0] === 0)\n      p.push([c[0],c[1]]);\n    else if(p[0] + c[0]\
    \ > 0)\n      p[0] += c[0];\n    return p;\n  },[[0],[0]]);\n  return pairs[0][0]\
    \ === pairs[1][0];\n}\n", "  for(var i=0; i<l.length; i++){\n    for(var j=i+1;\
    \ j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return true;\n     \
    \ }\n    }\n  }\n  return false;\n}\n", "  for(var i=0;i<l.length;i++){\n    for(var\
    \ j=i+1;j<l.length;j++){\n      if(l[i]+l[j]==0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  var pairs = l.slice(1).map(function(pair){\n    return [pair[0], pair[1]];\n\
    \  });\n  var pair_counts = pairs.reduce(function(counts, pair){\n    counts[pair[0]]\
    \ = (counts[pair[0]] || 0) + 1;\n    counts[pair[1]] = (counts[pair[1]] || 0)\
    \ + 1;\n    return counts;\n  }, {});\n  for(var key in pair_counts){\n    if(pair_counts[key]\
    \ > 1){\n      return false;\n    }\n  }\n  return true;\n}\n", "  if(l.length\
    \ < 2){\n    return false;\n  }\n  var pairs = _.zip(_.range(l.length-1), _.range(l.length));\n\
    \  for(var i=0; i<pairs.length; i++){\n    var pair = pairs[i];\n    if(pair[0]+pair[1]\
    \ != l[i]){\n      return false;\n    }\n  }\n  return true;\n}\n", "  for(var\
    \ i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n      if(l[i] + l[j]\
    \ === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", " \
    \   for(var i=0; i<l.length-1; i++){\n        for(var j=i+1; j<l.length; j++){\n\
    \            if(l[i] + l[j] == 0){\n                return true;\n           \
    \ }\n        }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    var i, j, k;\n    for(i=l.length-1;\
    \ i>=0; i--){\n        j = i+1;\n        while(j<l.length){\n            if(l[i]\
    \ + l[j] === 0){\n                return true;\n            }\n            j++;\n\
    \        }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n\
    \    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n  \
    \  return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n    if(p[0]\
    \ + c[0] === 0){\n      p.push(c);\n    }\n    return p;\n  },[[]]);\n  return\
    \ pairs.reduce(function(p,c){\n    return p && p.length === c.length;\n  },true);\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  if(l.length == 2){\n   \
    \ return l[0] == l[1];\n  }\n  var pairs = l.slice(1).map(function(x){return [x[0],\
    \ x[0]+x[1]];});\n  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n \
    \   sum += pairs[i][0];\n  }\n  return sum == 0;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    if(l[i] + l[i+1] != 0){\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n\
    \      if(l[i]+l[j]==0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = _.pairs(l);\n  for (var i = 0; i < pairs.length;\
    \ i++){\n    var pair = pairs[i];\n    if (pair[1] != 0){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  for(var i in l){\n    var sum = 0;\n   \
    \ for(var j in l){\n      if(i != j){\n        sum += l[j];\n      }\n    }\n\
    \    if(sum == 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ var i, j, sum;\n  for(i = 0; i < l.length; i++){\n    sum = 0;\n    for(j =\
    \ 0; j < l.length; j++){\n      if(i != j){\n        sum += l[j];\n      }\n \
    \   }\n    if(sum == 0){\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  for(var i=0; i<l.length-1; i++){\n    for(var j=i+1; j<l.length; j++){\n    \
    \  if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n\
    \      if(l[i]+l[j]==0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "    for(var i=0; i<l.length-1; i++){\n        for(var j=i+1;\
    \ j<l.length; j++){\n            if(l[i] + l[j] === 0){\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\n", "  for(var\
    \ i in l){\n    for(var j in l){\n      if(i != j && l[i] + l[j] == 0){\n    \
    \    return true;\n      }\n    }\n  }\n  return false;\n}\n", "    var pairs\
    \ = l.slice();\n    var pair;\n    var i;\n    var j;\n    var k;\n    var sum;\n\
    \    var pair_count = 0;\n    var pair_sum;\n    var pair_sum2;\n    var pair_sum3;\n\
    \    var pair_sum4;\n    var pair_sum5;\n    var pair_sum6;\n    var pair_sum7;\n\
    \    var pair_sum8;\n    var pair_sum9;\n    var pair_sum10;\n    var pair_sum11;\n\
    \    var pair_sum12;\n    var pair_sum13;\n    var pair_sum14;\n    var pair_sum15;\n\
    \    var pair_sum16;\n    var pair_sum17;\n    var pair_sum18;\n    var pair_sum19;\n\
    \    var pair_sum20;\n    var pair_sum21;\n    var pair_sum22;\n    var pair_sum23;\n\
    \    var pair_sum24;\n    var pair_sum25;\n    var pair_sum26;\n    var pair_sum27;\n\
    \    var pair_sum28;\n    var pair_sum29;\n    var pair_sum30;\n    var pair_sum31;\n\
    \    var pair_sum32;\n    var pair_sum33;\n    var pair_sum34;\n    var pair_sum35;\n\
    \    var pair_sum36;\n    var pair_sum37;\n    var pair_sum38;\n    var pair_sum39;\n\
    \    var pair_sum40;\n    var pair_sum41;\n    var pair_sum42;\n    var pair_sum43;\n\
    \    var pair_sum44;\n    var pair_sum45;\n    var pair_sum46;\n    var pair_sum47;\n\
    \    var pair_sum48;\n    var pair_sum49;\n    var pair_sum50;\n    var pair_sum51;\n\
    \    var pair_sum52;\n    var pair_sum53;\n    var pair_sum54;\n    var pair_sum55;\n\
    \    var pair_sum56;\n    var pair_sum57;\n    var pair_sum58;\n    var pair_sum59;\n\
    \    var pair_sum60;\n    var pair_sum61;\n    var pair_sum62;\n    var pair_sum63;\n\
    \    var pair_sum64;\n    var pair_sum65;\n    var pair_sum66;\n    var pair_sum67;\n\
    \    var pair_sum68;\n    var pair_sum69;\n    var pair_sum70;\n    var pair_sum71;\n\
    \    var pair_sum72;\n    var pair_sum73;\n    var pair_sum74;\n    var pair_sum75;\n\
    \    var pair_sum76;\n    var pair_sum77;\n    var pair_sum78;\n    var pair_sum79;\n\
    \    var pair_sum80;\n    var pair_sum81;\n    var pair_sum82;\n    var pair_sum83;\n\
    \    var pair_sum84", "    for(var i = 0; i < l.length; i++){\n        for(var\
    \ j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] == 0){\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n",
  "  for(var i in l){\n    var sum = 0;\n    for(var j in l){\n      sum += l[j];\n\
    \      if(sum === 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  if(l.length < 2){\n    return false;\n  }\n  if(l.length == 2){\n   \
    \ return l[0] + l[1] == 0;\n  }\n  if(l[0] + l[1] == 0){\n    return true;\n \
    \ }\n  return pairs_sum_to_zero(l[0]) || pairs_sum_to_zero(l[1]);\n}\n", "  for(var\
    \ i=0; i<l.length; i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]\
    \ + l[j] == 0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n  \
    \    if(l[i]+l[j]==0){\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "  for(var i=0;i<l.length;i++){\n    for(var j=i+1;j<l.length;j++){\n  \
    \    if(l[i] + l[j] === 0){\n        return true;\n      }\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = l.slice();\n  var sum = 0;\n  for(var i=0;i<pairs.length;i++){\n\
    \    sum += pairs[i];\n    if(sum === 0){\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  var pairs = _.pairs(l);\n  var sum = 0;\n  _.each(pairs, function(pair){\n\
    \    sum += pair[1];\n  });\n  return sum === 0;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "    for(var\
    \ i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n         \
    \   if(l[i] + l[j] == 0){\n                return true;\n            }\n     \
    \   }\n    }\n    return false;\n}\n", "  if(l.length < 2){\n    return false;\n\
    \  }\n  if(l.length == 2){\n    return l[0] + l[1] == 0;\n  }\n  if(l[0] + l[1]\
    \ == 0){\n    return true;\n  }\n  if(l[0] + l[1] < 0){\n    return false;\n \
    \ }\n  return pairs_sum_to_zero(l[l.length - 1]) + pairs_sum_to_zero(l[l.length\
    \ - 2]);\n}\n", "  for(var i=0; i<l.length-1; i++){\n    if(l[i] + l[i+1] != 0){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "    var n\
    \ = l.length;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n\
    \            if(l[i] + l[j] === 0){\n                return true;\n          \
    \  }\n        }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length-1;\
    \ i++){\n    for(var j=i+1; j<l.length; j++){\n      if(l[i]+l[j] === 0){\n  \
    \      return true;\n      }\n    }\n  }\n  return false;\n}\n", "  for(var i=0;i<l.length;i++){\n\
    \    for(var j=i+1;j<l.length;j++){\n      if(l[i] + l[j] == 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  var pairs = l.slice();\n\
    \  var sum = 0;\n  for(var i = 0; i < pairs.length; i++){\n    sum += pairs[i];\n\
    \    if(sum === 0){\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if(l.length == 0)\n    return false;\n  var pairs = _.pairs(l);\n  var sum =\
    \ 0;\n  for(var i in pairs){\n    var pair = pairs[i];\n    sum += pair[1];\n\
    \    if(sum == 0)\n      return true;\n  }\n  return false;\n}\n", "    for(var\
    \ i=0; i<l.length; i++){\n        for(var j=i+1; j<l.length; j++){\n         \
    \   if(l[i] + l[j] == 0){\n                return true;\n            }\n     \
    \   }\n    }\n    return false;\n}\n", "  for(var i=0; i<l.length-1; i++){\n \
    \   for(var j=i+1; j<l.length; j++){\n      if(l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  if(l.length < 2){\n  \
    \  return false;\n  }\n  var pairs = l.slice(1).reduce(function(p,c){\n    var\
    \ n = p.length + c.length;\n    if(n == 0){\n      return p;\n    }\n    var d\
    \ = p[0] + c[0];\n    var found = false;\n    for(var i = 1; i < p.length; i++){\n\
    \      if(Math.abs(p[i] - d) < Math.abs(p[i] - c[i - 1])){\n        d = p[i] +\
    \ c[i];\n        found = true;\n      }\n    }\n    if(!found){\n      p.push(d);\n\
    \    }\n    return p;\n  }, [l[0]]);\n  return pairs.reduce(function(p,c){\n \
    \   return p && c;\n  }, true);\n}\n", "  if(l.length < 2)\n    return false;\n\
    \  var pairs = l.slice(1).map(function(x){\n    return [x, 0];\n  });\n  pairs.forEach(function(pair){\n\
    \    var x = pair[0];\n    var y = pair[1];\n    var sum = 0;\n    for(var i=0;\
    \ i<pairs.length; i++){\n      var p = pairs[i];\n      if(p[0] === x){\n    \
    \    sum += p[1];\n      }\n    }\n    if(sum === 0)\n      pairs.splice(i, 1);\n\
    \  });\n  return pairs.length === 0;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

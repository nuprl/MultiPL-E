name: HumanEval_90_next_smallest
language: js
prompt: "//You are given a list of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n// Return None if there is\
  \ no such element.\nfunction next_smallest(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = next_smallest;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),2);\n  assert.deepEqual(candidate([5,\
  \ 1, 4, 3, 2]),2);\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([1, 1, 1, 1, 0]),1);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([-35, 34, 12, -45]),-35);\n}\n\n\
  test();"
completions: ["  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "    let smallest = lst[0];\n    let second_smallest\
    \ = lst[0];\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else if(lst[i] < second_smallest){\n            second_smallest\
    \ = lst[i];\n        }\n    }\n    return second_smallest;\n}\n", "    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i=0;i<lst.length;i++){\n\
    \        if(smallest>lst[i]){\n            smallest = lst[i];\n        }\n   \
    \     if(second_smallest > lst[i]){\n            second_smallest = lst[i];\n \
    \       }\n    }\n    return second_smallest;\n}\n</code>\n<|/ a |>\n<| a dscore=0\
    \ |>\n<code>", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest =\
    \ lst[0];\n  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n\
    \    if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest\
    \ = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n\
    \  var smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var i = 2; i\
    \ < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    \n    if(lst.length < 2){\n        return null;\n    }\n    \n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    \n    for(var i=2; i<lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    \n    return second_smallest;\n\
    }\n", "    var smallest = lst[0];\n    var secondSmallest = lst[0];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }\n    else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "    var smallest;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(smallest===undefined){\n            smallest=lst[i];\n\
    \        }else if(smallest>lst[i]){\n            smallest=lst[i];\n        }\n\
    \    }\n    return smallest;\n}\n", "    if(lst.length == 0){\n        return\
    \ null;\n    }\n    var smallest = lst[0];\n    var second_smallest = lst[1];\n\
    \    for(var i = 2; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          second_smallest = smallest;\n            smallest = lst[i];\n     \
    \   }\n        else if(lst[i] < second_smallest){\n            second_smallest\
    \ = lst[i];\n        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length\
    \ < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n  \
    \    second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }\n    else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest =\
    \ null;\n  for(var i = 1; i < lst.length; i++){\n    if(smallest > lst[i]){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }\n    else{\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   if(lst.length == 0){\n        return null;\n    }\n    let smallest = lst[0];\n\
    \    let secondSmallest = lst[0];\n    for(let i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            secondSmallest = smallest;\n    \
    \        smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n    \
    \        secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "    var smallest = lst[0];\n  \
    \  var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n       \
    \ if(smallest>lst[i]){\n            smallest = lst[i];\n        }\n        if(second_smallest\
    \ > smallest){\n            second_smallest = smallest;\n        }\n    }\n  \
    \  return second_smallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  var smallest = lst[0];\n  var secondSmallest = lst[0];\n  for(var i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   var smallest = lst[0];\n    var second_smallest = lst[1];\n    for(var i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n", "    \n}\n", "    if(lst.length == 0){\n \
    \       return null;\n    }\n    var smallest = lst[0];\n    var second_smallest\
    \ = lst[1];\n    for(var i=0;i<lst.length;i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else if(lst[i] < second_smallest){\n            second_smallest\
    \ = lst[i];\n        }\n    }\n    return second_smallest;\n}\n", "  var smallest\
    \ = lst[0];\n  var second_smallest = lst[1];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n\
    \  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest =\
    \ lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    if(lst.length ==\
    \ 0){\n        return null;\n    }\n    var smallest = lst[0];\n    var secondSmallest\
    \ = lst[1];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            secondSmallest = smallest;\n            smallest = lst[i];\n    \
    \    }else if(lst[i] < secondSmallest){\n            secondSmallest = lst[i];\n\
    \        }\n    }\n    return secondSmallest;\n}\n", "    var smallest = lst[0];\n\
    \    var secondSmallest = null;\n    for(var i = 1; i < lst.length; i++){\n  \
    \      if(lst[i] < smallest){\n            secondSmallest = smallest;\n      \
    \      smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    \n}\n", "  if(lst.length == 0){\n    return null;\n  }\n  let smallest\
    \ = lst[0];\n  let second_smallest = lst[0];\n  for(let i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var secondSmallest = lst[1];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            secondSmallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "    var smallest = lst[0];\n   \
    \ var second_smallest = lst[1];\n    for(var i = 1; i < lst.length; i++){\n  \
    \      if(lst[i] < smallest){\n            second_smallest = smallest;\n     \
    \       smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    var smallest = lst[0];\n    var second_smallest = lst[1];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  var smallest = lst[0];\n  var secondSmallest = null;\n  for(var i = 1;\
    \ i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }\n    else if(lst[i] > secondSmallest){\n    \
    \  secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n\
    \  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i =\
    \ 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n  \
    \    second_smallest = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  var smallest = lst[0];\n  var secondSmallest = lst[0];\n  for(var i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest =\
    \ smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[0];\n  for(let\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            second_smallest = smallest;\n   \
    \         smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n  \
    \          second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  var smallest;\n  if(lst.length\
    \ == 0){\n    return null;\n  }\n  smallest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ smallest;\n}\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length\
    \ == 1){\n    return lst[0];\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    \n}\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest\
    \ = lst[0];\n  var second_smallest = lst[1];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    var smallest =\
    \ lst[0];\n    var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n\
    \        if(smallest>lst[i]){\n            smallest = lst[i];\n        }\n   \
    \     if(second_smallest > smallest){\n            second_smallest = smallest;\n\
    \        }\n    }\n    return second_smallest;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work if there are two elements that are equal\n<|/ c |>\n\
    <| c |>\nI thought the OP was asking for the 2nd smallest element in the list.\
    \ Anyway, I added a solution that works with equal elements.\n<|/ c |>\n<| c |>\n\
    I thought the OP was asking for the 2nd smallest element in the list. Anyway,\
    \ I added a solution that works with equal elements.\n<|/ c |>\n<| c |>\nI thought\
    \ the OP was asking for the 2nd smallest element in the list. Anyway, I added\
    \ a solution that works with equal elements.\n<|/ c |>\n<| a dscore=0 |>\n<code>",
  "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }\n    else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "    if(lst.length == 0){\n    \
    \    return null;\n    }\n    var smallest = lst[0];\n    var secondSmallest =\
    \ null;\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            secondSmallest = smallest;\n            smallest = lst[i];\n    \
    \    }\n        else if(lst[i] < secondSmallest){\n            secondSmallest\
    \ = lst[i];\n        }\n    }\n    return secondSmallest;\n}\n", "    var smallest\
    \ = lst[0];\n    var second_smallest = lst[0];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  if(lst.length == 2){\n\
    \    return lst[1];\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i=2; i<lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n    if(lst[i] < second_smallest){\n      second_smallest =\
    \ lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    var smallest;\n \
    \   for(var i=0;i<lst.length;i++){\n        if(smallest===undefined){\n      \
    \      smallest=lst[i];\n        }\n        else if(smallest>lst[i]){\n      \
    \      smallest=lst[i];\n        }\n    }\n    return smallest;\n}\n", "    var\
    \ smallest;\n    for(var i=0;i<lst.length;i++){\n        if(smallest===undefined){\n\
    \            smallest=lst[i];\n        }else if(smallest>lst[i]){\n          \
    \  smallest=lst[i];\n        }\n    }\n    return smallest;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>", "    let smallest = lst[0];\n    let\
    \ second_smallest = lst[0];\n    for(let i = 1; i < lst.length; i++){\n      \
    \  if(lst[i] < smallest){\n            second_smallest = smallest;\n         \
    \   smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n        \
    \    second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let second_smallest = lst[1];\n  for(let i=2;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      smallest = lst[i];\n    }\n    if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = lst[1];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n \
    \       if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "    if(lst.length == 0){\n\
    \        return null;\n    }\n    var smallest = lst[0];\n    var second_smallest\
    \ = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[0];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }\n    else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "    var smallest = lst[0];\n  \
    \  var secondSmallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n        if(smallest>lst[i]){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=javascript,arrays |>\n<code>", "  if(lst.length\
    \ < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[1];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  var smallest = lst[0];\n  var second_smallest = lst[0];\n  for(var i\
    \ = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    var smallest;\n    for(var i=0;i<lst.length;i++){\n        if(smallest===undefined\
    \ || (lst[i]<smallest)){\n            smallest=lst[i];\n        }\n    }\n   \
    \ return smallest;\n}\n", "    var smallest = lst[0];\n    var second_smallest\
    \ = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "    if(lst.length == 0){\n\
    \        return null;\n    }\n    var smallest = lst[0];\n    for(var i = 1; i\
    \ < lst.length; i++){\n        if(lst[i] < smallest){\n            smallest =\
    \ lst[i];\n        }\n    }\n    return smallest;\n}\n", "  if(lst.length < 2)\
    \ return null;\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n    if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n \
    \   }\n  }\n  return second_smallest;\n}\n", "    \n}\n", "  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[1];\n  for(var i=2; i<lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  var smallest = lst[0];\n  var smallest_index = 1;\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest\
    \ = lst[i];\n      smallest_index = i;\n    }\n  }\n  return smallest;\n}\n",
  "    var smallest;\n    for(var i=0;i<lst.length;i++){\n        if(smallest===undefined\
    \ || (lst[i]<smallest)){\n            smallest=lst[i];\n        }\n    }\n   \
    \ return smallest;\n}\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length\
    \ == 1){\n    return lst[0];\n  }\n  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  var smallest = lst[0];\n  var secondSmallest = null;\n  for(var i = 1;\
    \ i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n    \
    \  secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "   \
    \ var smallest = lst[0];\n    var secondSmallest = lst[0];\n    for(var i = 1;\
    \ i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    \n}", "    var smallest = lst[0];\n    var secondSmallest = null;\n\
    \    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          secondSmallest = smallest;\n            smallest = lst[i];\n      \
    \  }\n        else if(lst[i] < secondSmallest){\n            secondSmallest =\
    \ lst[i];\n        }\n    }\n    return secondSmallest;\n}\n", "    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n \
    \       if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  let smallest = lst[0];\n  let second_smallest = lst[1];\n  for(let\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    \n}", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i=2; i<lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    var smallest = lst[0];\n    var second_smallest = lst[1];\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(smallest>lst[i]){\n            smallest =\
    \ lst[i];\n        }\n        if(second_smallest > lst[i]){\n            second_smallest\
    \ = lst[i];\n        }\n    }\n    return second_smallest;\n}\n</code>\n<|/ a\
    \ |>\n<| c |>\nI believe this solution is O(n^2) since it iterates over every\
    \ element in the list twice. Also, `smallest` and `second_smallest` should be\
    \ declared outside of the for loop. Otherwise they will be reset to `lst[0]` and\
    \ `lst[1]` on each iteration of the loop.\n<|/ c |>\n<| c |>\nYes, you are right.\
    \ I just wanted to show an example how it can be done in O(n).\n<|/ c |>\n<| c\
    \ |>\nThis solution is O(n^2) because you iterate over every element in the list\
    \ twice. Also, `smallest` and `second_smallest` should be declared outside of\
    \ the for loop. Otherwise they will be reset to `lst[0]` and `lst[1]` on each\
    \ iteration of the loop.\n<|/ c |>\n<| c |>\nYes, you are right. I just wanted\
    \ to show an example how it can be done in O(n).\n<|/ c |>\n<| c |>\nThis solution\
    \ is O(n^2) because you iterate over every element in the list twice. Also, `smallest`\
    \ and `second_smallest` should be declared outside of the for loop. Otherwise\
    \ they will be reset to `lst[0]` and `lst[1]` on each iteration of the loop.\n\
    <|/ c |>\n<| a tags=javascript,algorithm |>\n<code>", "    var smallest = lst[0];\n\
    \    var second_smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            second_smallest = smallest;\n   \
    \         smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n</code>\n<|/ a tags=javascript,arrays,sorting |>\n<| a tags=javascript,arrays,sorting\
    \ |>\n<code>", "    for(let i=0;i<lst.length;i++){\n        if(lst[i]<lst[i+1]){\n\
    \            return lst[i+1];\n        }\n    }\n    return null;\n}\n", "  if(lst.length\
    \ < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n  \
    \    second_smallest = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = null;\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else{\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i = 2; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i = 1; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }\n    else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }\n    else\
    \ if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n\
    \  return second_smallest;\n}\n", "    let smallest = lst[0];\n    let second_smallest\
    \ = lst[1];\n    for(let i=2;i<lst.length;i++){\n        if(smallest>lst[i]){\n\
    \            smallest = lst[i];\n        }\n        else if(smallest==lst[i]){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < lst[i+1]){\n\
    \            return lst[i+1];\n        }\n    }\n    return null;\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   for(let i = 0; i < lst.length; i++){\n        if(lst[i] < lst[i+1]){\n   \
    \         return lst[i+1];\n        }\n    }\n    return null;\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n  \
    \    second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i = 2; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n</code>\n<|/ a tags=javascript,algorithm |>\n<| a tags=javascript,algorithm\
    \ |>\n<code>", "    var smallest = lst[0];\n    var second_smallest = lst[1];\n\
    \    for(var i=2;i<lst.length;i++){\n        if(lst[i]<smallest){\n          \
    \  smallest = lst[i];\n        }\n        else if(smallest<lst[i]){\n        \
    \    second_smallest = smallest;\n            smallest = lst[i];\n        }\n\
    \    }\n    return second_smallest;\n}\n", "  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(smallest>lst[i]){\n    \
    \  second_smallest = smallest;\n      smallest = lst[i];\n    }else{\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    var smallest = lst[0];\n    var secondSmallest = lst[0];\n    for(var i = 1;\
    \ i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var secondSmallest = null;\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(smallest > lst[i]){\n            secondSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(smallest == lst[i]){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i = 1; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var smallest\
    \ = lst[0];\n  var secondSmallest = lst[1];\n  for(var i = 2; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length < 2){\n    return\
    \ null;\n  }\n  let smallest = lst[0];\n  let secondSmallest = lst[1];\n  for(let\
    \ i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ var smallest = lst[0];\n  var second_smallest = lst[0];\n  for(var i = 1; i\
    \ < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "    var smallest = lst[0];\n    var second_smallest\
    \ = lst[1];\n    for(var i=2;i<lst.length;i++){\n        if(lst[i]<smallest){\n\
    \            smallest = lst[i];\n        }\n        if(lst[i]<second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,algorithm,sorting |>\n<code>",
  "    if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n    }\n    return smallest;\n}\n", " \
    \   var smallest = lst[0];\n    var secondSmallest = null;\n    for(var i = 1;\
    \ i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ > secondSmallest){\n            secondSmallest = lst[i];\n        }\n    }\n\
    \    return secondSmallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(smallest>lst[i]){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ var smallest = null;\n  for(var i=0;i<lst.length;i++){\n    if(smallest == null\
    \ || lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return smallest;\n\
    }\n", "    var smallest = lst[0];\n    var secondSmallest = lst[0];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "    if(lst.length < 2){\n     \
    \   return null;\n    }\n    var smallest = lst[0];\n    var second_smallest =\
    \ lst[1];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   for(let i=0;i<lst.length;i++){\n        if(lst[i]<lst[i+1]){\n           \
    \ return lst[i+1];\n        }\n    }\n    return null;\n}\n", "    if(lst.length\
    \ == 0){\n        return null;\n    }\n    var smallest = lst[0];\n    var index\
    \ = lst.indexOf(smallest);\n    if(index == 0){\n        return null;\n    }\n\
    \    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n            index = i;\n        }\n    }\n    return\
    \ lst[index];\n}\n", "    var smallest;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(smallest===undefined || lst[i]<smallest){\n            smallest=lst[i];\n\
    \        }\n    }\n    return smallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var smallest\
    \ = lst[0];\n  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest =\
    \ lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] <\
    \ smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n  \
    \  }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n    }\n\
    \  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n    return null;\n\
    \  }\n  var smallest = lst[0];\n  var secondSmallest = null;\n  for(var i = 1;\
    \ i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] > secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    if(lst.length < 2){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n     \
    \   if(lst[i] < smallest){\n            second_smallest = smallest;\n        \
    \    smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "    \n}\n", "  if(lst.length ==\
    \ 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n\
    \  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n\
    \    if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest\
    \ = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest =\
    \ lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i] <\
    \ smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n  \
    \  }\n    else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[0];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  var smallest = lst[0];\n  var second_smallest = lst[0];\n  for(var i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n\
    \      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n   \
    \   second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", " \
    \ var smallest = lst[0];\n  var secondSmallest = lst[0];\n  for(var i = 1; i <\
    \ lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n\
    \      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "    \n}\n", "    var\
    \ smallest;\n    var smallest_index;\n    for(var i=0;i<lst.length;i++){\n   \
    \     if(smallest===undefined || (lst[i]<smallest)){\n            smallest=lst[i];\n\
    \            smallest_index=i;\n        }\n    }\n    if(smallest===undefined){\n\
    \        return undefined;\n    }\n    return lst[smallest_index+1];\n}\n", " \
    \   if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var smallest_index = 0;\n    for(var i = 1; i < lst.length; i++){\n     \
    \   if(lst[i] < smallest){\n            smallest = lst[i];\n            smallest_index\
    \ = i;\n        }\n    }\n    return smallest;\n}\n", "    \n    if(lst.length\
    \ == 0){\n        return null;\n    }\n    \n    var smallest = lst[0];\n    var\
    \ second_smallest = lst[1];\n    \n    for(var i = 2; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            second_smallest = smallest;\n   \
    \         smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    \n    return second_smallest;\n\
    }\n", "  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n\
    \    if(lst[i]<smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]<second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[1];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }\n    else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "  var smallest = lst[0];\n  var\
    \ second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i]<smallest){\n\
    \      smallest = lst[i];\n    }\n    if(lst[i]<second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[1];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n  \
    \  }\n  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(smallest>lst[i]){\n      smallest = lst[i];\n\
    \    }\n    if(secondSmallest>lst[i]){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "    var smallest = lst[0];\n    var second_smallest\
    \ = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "    \n}\n</cell>\n<cell>",
  "    var smallest = lst[0];\n    var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n\
    \        if(lst[i]<smallest){\n            second_smallest = smallest;\n     \
    \       smallest = lst[i];\n        }else if(lst[i]<second_smallest){\n      \
    \      second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "  var smallest = lst[0];\n\
    \  var secondSmallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }\n    else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n\
    \    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var smallest\
    \ = lst[0];\n  var secondSmallest = lst[1];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      secondSmallest = smallest;\n      smallest\
    \ = lst[i];\n    }\n    else if(lst[i] < secondSmallest){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[0];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          smallest = lst[i];\n        }\n    }\n    return smallest;\n}\n", " \
    \   if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var secondSmallest = null;\n    for(var i = 1; i < lst.length; i++){\n  \
    \      if(lst[i] < smallest){\n            secondSmallest = smallest;\n      \
    \      smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  let smallest = lst[0];\n\
    \  let second_smallest = lst[1];\n  for(let i=2;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n  \
    \  }\n  }\n  return second_smallest;\n}\n", "  var smallest;\n  if(lst.length\
    \ == 0){\n    return null;\n  }\n  smallest = lst[0];\n  for(var i = 1; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n    }\n  }\n  return\
    \ smallest;\n}\n", "    if(lst.length == 0){\n        return null;\n    }\n  \
    \  var smallest = lst[0];\n    var index = lst.indexOf(smallest);\n    if(index\
    \ == 0){\n        return null;\n    }\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n            index\
    \ = i;\n        }\n    }\n    return lst[index];\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i=2;i<lst.length;i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var smallest_index = 0;\n    for(var i = 1; i < lst.length; i++){\n     \
    \   if(lst[i] < smallest){\n            smallest = lst[i];\n            smallest_index\
    \ = i;\n        }\n    }\n    return lst[smallest_index];\n}\n", "  var smallest;\n\
    \  if(lst.length == 0){\n    return null;\n  }\n  smallest = lst[0];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      smallest = lst[i];\n\
    \    }\n  }\n  return smallest;\n}\n", "    var smallest = null;\n    var smallest_index\
    \ = null;\n    for(var i=0; i<lst.length; i++){\n        if(smallest == null ||\
    \ lst[i] < smallest){\n            smallest = lst[i];\n            smallest_index\
    \ = i;\n        }\n    }\n    if(smallest == null){\n        return null;\n  \
    \  }\n    return lst[smallest_index+1];\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var smallest\
    \ = lst[0];\n  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  var smallest = lst[0];\n\
    \  var second_smallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}\n", "  if(lst.length == 0){\n    return\
    \ null;\n  }\n  if(lst.length == 1){\n    return lst[0];\n  }\n  var smallest\
    \ = lst[0];\n  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    var smallest =\
    \ lst[0];\n    var second_smallest = lst[0];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var secondSmallest = null;\n  for(var i = 1; i < lst.length; i++){\n    if(smallest\
    \ > lst[i]){\n      secondSmallest = smallest;\n      smallest = lst[i];\n   \
    \ }else{\n      if(secondSmallest == null){\n        secondSmallest = lst[i];\n\
    \      }\n    }\n  }\n  return secondSmallest;\n}\n", "    \n}\n", "    \n}\n",
  "    if(lst.length == 0){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = lst[1];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            second_smallest = smallest;\n   \
    \         smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length < 2) return null;\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    var smallest = lst[0];\n    var second_smallest = lst[0];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n", "    var smallest = lst[0];\n    var second_smallest\
    \ = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length == 0){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "    if(lst.length < 2){\n        return null;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n     \
    \   if(lst[i] < smallest){\n            second_smallest = smallest;\n        \
    \    smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n       \
    \     second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n\
    \        if(smallest>lst[i]){\n            smallest = lst[i];\n        }\n   \
    \     if(second_smallest > smallest){\n            second_smallest = smallest;\n\
    \        }\n    }\n    return second_smallest;\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest\
    \ = lst[1];\n  for(var i=2; i<lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      secondSmallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < secondSmallest){\n      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n\
    }\n", "  var smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n\
    \    if(lst[i]<smallest){\n      smallest = lst[i];\n    }\n    if(lst[i]<second_smallest){\n\
    \      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n}\n",
  "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n    return\
    \ lst[0];\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[0];\n  for(var\
    \ i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \ if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n  var\
    \ secondSmallest = lst[1];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   }else if(lst[i] < secondSmallest){\n      secondSmallest = lst[i];\n    }\n\
    \  }\n  return secondSmallest;\n}\n", "  if(lst.length < 2) return null;\n  var\
    \ smallest = lst[0];\n  var second_smallest = lst[1];\n  for(var i = 2; i < lst.length;\
    \ i++){\n    if(lst[i] < smallest){\n      second_smallest = smallest;\n     \
    \ smallest = lst[i];\n    }else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    if(lst.length ==\
    \ 0){\n        return null;\n    }\n    var smallest = lst[0];\n    var second_smallest\
    \ = lst[1];\n    for(var i=2;i<lst.length;i++){\n        if(lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }else if(lst[i] < second_smallest){\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}\n</code>\n<|/ a tags=javascript,arrays\
    \ |>\n<| c |>\nThis doesn't work if the array is sorted in reverse order. `next_smallest([-10,\
    \ -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])` returns\
    \ `-10` instead of `9`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it right\
    \ after I posted my answer. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "    \n}\n</cell>\n<cell>", "    var smallest = lst[0];\n    var\
    \ second_smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n      \
    \  if(lst[i] < smallest){\n            second_smallest = smallest;\n         \
    \   smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length == 0){\n    return null;\n  }\n  if(lst.length == 1){\n\
    \    return lst[0];\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[0];\n\
    \  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   var smallest = lst[0];\n    var second_smallest = lst[0];\n    for(var i =\
    \ 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < second_smallest){\n            second_smallest = lst[i];\n        }\n    }\n\
    \    return second_smallest;\n}\n", "    var smallest = lst[0];\n    var second_smallest\
    \ = lst[1];\n    for(var i=2;i<lst.length;i++){\n        if(smallest>lst[i]){\n\
    \            smallest = lst[i];\n        }\n        if(second_smallest > smallest){\n\
    \            second_smallest = smallest;\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var index = 0;\n    for(var i = 1; i < lst.length; i++){\n  \
    \      if(smallest > lst[i]){\n            smallest = lst[i];\n            index\
    \ = i;\n        }\n    }\n    return lst[index];\n}\n", "  if(lst.length < 2){\n\
    \    return null;\n  }\n  var smallest = lst[0];\n  var secondSmallest = lst[1];\n\
    \  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n      secondSmallest\
    \ = smallest;\n      smallest = lst[i];\n    }else if(lst[i] < secondSmallest){\n\
    \      secondSmallest = lst[i];\n    }\n  }\n  return secondSmallest;\n}\n", " \
    \   for(let i=0;i<lst.length;i++){\n        if(lst[i]<lst[i+1]){\n           \
    \ return lst[i+1];\n        }\n    }\n    return null;\n}\n", "  if(lst.length\
    \ == 0){\n    return null;\n  }\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n  for(var i = 2; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }else if(lst[i]\
    \ < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i=2;i<lst.length;i++){\n\
    \        if(lst[i] < smallest){\n            second_smallest = smallest;\n   \
    \         smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n  \
    \          second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    for(let i=0;i<lst.length;i++){\n        if(lst[i]<lst[i+1]){\n    \
    \        return lst[i+1];\n        }\n    }\n    return null;\n}\n", "    var\
    \ smallest = lst[0];\n    var secondSmallest = lst[0];\n    for(var i = 1; i <\
    \ lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for(var i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i = 1; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }\n    else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  var smallest = lst[0];\n\
    \  var second_smallest = lst[0];\n  for(var i = 1; i < lst.length; i++){\n   \
    \ if(lst[i] < smallest){\n      second_smallest = smallest;\n      smallest =\
    \ lst[i];\n    }\n    else if(lst[i] < second_smallest){\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "    if(lst.length ==\
    \ 0){\n        return null;\n    }\n    var smallest = lst[0];\n    for(var i\
    \ = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return smallest;\n}\n", "    let smallest =\
    \ lst[0];\n    let second_smallest = lst[0];\n    for(let i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if(lst.length == 0){\n        return null;\n    }\n    var smallest\
    \ = lst[0];\n    var index = lst.indexOf(smallest);\n    if(index == 0){\n   \
    \     return null;\n    }\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i];\n            index = i;\n     \
    \   }\n    }\n    return lst[index];\n}\n", "    var smallest = lst[0];\n    var\
    \ second_smallest = lst[1];\n    for(var i = 1; i < lst.length; i++){\n      \
    \  if(lst[i] < smallest){\n            second_smallest = smallest;\n         \
    \   smallest = lst[i];\n        }\n        else if(lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "  if(lst.length < 2){\n    return null;\n  }\n  var smallest = lst[0];\n\
    \  var second_smallest = lst[1];\n  for(var i=2;i<lst.length;i++){\n    if(lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    }else if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n  \
    \  }\n  }\n  return second_smallest;\n}\n", "  var smallest = lst[0];\n  var second_smallest\
    \ = lst[0];\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }\n    else\
    \ if(lst[i] < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n\
    \  return second_smallest;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

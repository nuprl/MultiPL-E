name: HumanEval_19_sort_numbers
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdy2lb_1v.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpjkclgw4h.java:15)\n\tat Problem.main(tmpjkclgw4h.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv5x_9u5t.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplo9n7uax.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhgzig3e.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numbers_array = numbers.split(\" \");\n        Arrays.sort(numbers_array);\n\
    \        return numbers_array.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6toapa4a.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7u7rq7hi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6twd6b2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkvkc9hzm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63nx73e5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numbersList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::parseInt)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numbersList);\n        return numbersList.stream().map(Object::toString).collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpxo3ngigk.java:17)\n\tat Problem.main(tmpxo3ngigk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numberList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp50uf6i2i.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp28y73k_9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_h3mp92.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjnh3z585.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt7en_gnu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe4mfkftb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdc5aa4x.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdoi_dynq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg64vnq67.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_b5_gp2u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \            .map(Integer::valueOf)\n            .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpi8xvzqv9.java:17)\n\tat Problem.main(tmpi8xvzqv9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gfj0uld.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp43x4qo1_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp43xm1gku.java:15)\n\tat Problem.main(tmp43xm1gku.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnth5c0g8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanfm063a.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpl1zqxgqr.java:17)\n\tat Problem.main(tmpl1zqxgqr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_as9l2iu.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xribc95.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp77jn0hf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return Arrays.toString(numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps3ipe3_6.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpsqbbx4uj.java:17)\n\tat Problem.main(tmpsqbbx4uj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyb7bc2z.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpfg7dxnqi.java:17)\n\tat Problem.main(tmpfg7dxnqi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5w1y0dhb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchgwdlsl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::parseInt)\n                .sorted()\n        \
    \        .collect(Collectors.toList());\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpr6yj7snn.java:18)\n\tat Problem.main(tmpr6yj7snn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpyvif4hqe.java:15)\n\tat Problem.main(tmpyvif4hqe.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgv17n_z9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ktncg1n.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ezfblcf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numbersList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numbersList);\n        return numbersList.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdoimjy9w.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpilvu04uu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::parseInt).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmparsrpmpa.java:15)\n\tat Problem.main(tmparsrpmpa.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numbersList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numbersList);\n        return numbersList.stream().map(Object::toString).collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpcdn8h5jg.java:15)\n\tat Problem.main(tmpcdn8h5jg.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgznnr73.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpon3u4yki.java:15)\n\tat Problem.main(tmpon3u4yki.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsx2vym5u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numbers_array = numbers.split(\" \");\n        Arrays.sort(numbers_array);\n\
    \        return String.join(\" \", numbers_array);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnk7s5rk4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpvbsci4_v.java:17)\n\tat Problem.main(tmpvbsci4_v.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdu8as3fb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numbersList = new ArrayList<>();\n        String[]\
    \ numberArray = numbers.split(\" \");\n        for (String number : numberArray)\
    \ {\n            try {\n                numbersList.add((int) Integer.parseInt(number));\n\
    \            } catch (NumberFormatException e) {\n                System.out.println(\"\
    Invalid input\");\n            }\n        }\n        Collections.sort(numbersList);\n\
    \        return String.join(\" \", numbersList);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuvk94lw1.java:25: error: no suitable method found for join(String,List<Integer>)\n\
    \        return String.join(\" \", numbersList);\n                     ^\n   \
    \ method String.join(CharSequence,CharSequence...) is not applicable\n      (varargs\
    \ mismatch; List<Integer> cannot be converted to CharSequence)\n    method String.join(CharSequence,Iterable<?\
    \ extends CharSequence>) is not applicable\n      (argument mismatch; List<Integer>\
    \ cannot be converted to Iterable<? extends CharSequence>)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpimvbja3h.java:15)\n\tat Problem.main(tmpimvbja3h.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numberList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numberList);\n        return String.join(\" \", numberList);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjy04aydr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy1kb2plw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpscymf9d2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3772m4ba.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfog44v7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpjr0p44_6.java:15)\n\tat Problem.main(tmpjr0p44_6.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpg3qqfxmn.java:17)\n\tat Problem.main(tmpg3qqfxmn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1e4pket.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1b570gsl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgh3zin9u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqoabf9y.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljxn3vk6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbl92shgk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_m_irm8y.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39ybp2xb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2ttrh2x.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc682yo5u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg8ud3aze.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmk56j2ia.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numbersList = new ArrayList<>();\n        numbersList.addAll(Arrays.asList(numbers.split(\"\
    \ \")));\n        Collections.sort(numbersList);\n        return numbersList.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdepa8y9.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp7gjo3hp3.java:17)\n\tat Problem.main(tmp7gjo3hp3.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpub8hl_ln.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numbersList = new ArrayList<String>();\n        numbersList.addAll(Arrays.asList(numbers.split(\"\
    \ \")));\n        Collections.sort(numbersList);\n        return numbersList.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodvhhehl.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9m2jk6du.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0smquz0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqojg6oju.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_nktmcs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nfjxn2c.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpm990uemu.java:17)\n\tat Problem.main(tmpm990uemu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpg0t6naye.java:17)\n\tat Problem.main(tmpg0t6naye.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::parseInt)\n                .sorted()\n        \
    \        .collect(Collectors.toList());\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp9z9cmmmj.java:18)\n\tat Problem.main(tmp9z9cmmmj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp358b24nj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprm5gvduh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj6eaogqz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt_pl_9j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx68b4imx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numbersList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numbersList);\n        return numbersList.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7szlv7xv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpskib89lz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4pl268k1.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp09oqkmnh.java:17)\n\tat Problem.main(tmp09oqkmnh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmxst502.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2k08cjrf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7irxxwj1.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::parseInt).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpqtnyx7ri.java:15)\n\tat Problem.main(tmpqtnyx7ri.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp474_21dc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return Arrays.toString(numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhsi36fl.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numbers_array = numbers.split(\" \");\n        Arrays.sort(numbers_array);\n\
    \        return String.join(\" \", numbers_array);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuvwrjjfq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpagkhf5ow.java:17)\n\tat Problem.main(tmpagkhf5ow.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq6l0zee.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpnrq3f8zd.java:15)\n\tat Problem.main(tmpnrq3f8zd.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk872md4d.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsqqikxuk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpztu9s2kc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vl55dbk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbvdwkxme.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxa9myoif.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzna0czku.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numberList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numberList);\n        return String.join(\" \", numberList);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyybbcmbr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9311y27s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_f0aeub.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numbers_array = numbers.split(\" \");\n        Arrays.sort(numbers_array);\n\
    \        return String.join(\" \", numbers_array);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjjgjmb98.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numbersList = new ArrayList<>();\n        String[] numberArray\
    \ = numbers.split(\" \");\n        for (String number : numberArray) {\n     \
    \       try {\n                numbersList.add((String) Integer.parseInt(number));\n\
    \            } catch (NumberFormatException e) {\n                System.out.println(\"\
    Invalid input: \" + number);\n            }\n        }\n        Collections.sort(numbersList);\n\
    \        return String.join(\" \", numbersList);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphkfkjg1r.java:19: error: incompatible types: int cannot be converted\
    \ to String\n                numbersList.add((String) Integer.parseInt(number));\n\
    \                                                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::parseInt).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp821sn01j.java:15)\n\tat Problem.main(tmp821sn01j.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpsu0v5m4o.java:15)\n\tat Problem.main(tmpsu0v5m4o.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numberList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxodml309.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5k6sl8oa.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp9osrwm9t.java:15)\n\tat Problem.main(tmp9osrwm9t.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0clgkr8y.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0kdu9nis.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg8t10ei3.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssodr9hl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmf1zspsb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0b8ztp4u.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numbersList = Arrays.stream(numbers.split(\" \"))\n\
    \            .map(Integer::valueOf)\n            .sorted()\n            .collect(Collectors.toList());\n\
    \        return numbersList.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpv6d8pe2p.java:18)\n\tat Problem.main(tmpv6d8pe2p.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzcib4yj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfk1uipyw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpd_7_rxw7.java:15)\n\tat Problem.main(tmpd_7_rxw7.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbybq8fs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7nc0ay8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_f9t55v.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu5jvyw2t.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpapeskql0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf951y9im.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return String.join(\" \", list);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp28xbx2of.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm5244z67.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return Arrays.toString(numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7x0or0xy.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2q7hwfm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyoy4upvu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1yz7l9ec.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8aw_e5qo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphen04_6t.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1e5tm7se.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numberList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiohllvdg.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4ca29mt.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbpcd131.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  list.sort(Comparator.naturalOrder());\n        return list.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu1oz8f02.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglng149m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::parseInt)\n                .sorted()\n        \
    \        .collect(Collectors.toList());\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp21w_nls4.java:18)\n\tat Problem.main(tmp21w_nls4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmp7ofp1_kx.java:17)\n\tat Problem.main(tmp7ofp1_kx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplos0o2sh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::valueOf)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpifjd0rb5.java:17)\n\tat Problem.main(tmpifjd0rb5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6kyn7005.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2jgnlq80.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numbersList = new ArrayList<>();\n        String[]\
    \ numberArray = numbers.split(\" \");\n        for (String number : numberArray)\
    \ {\n            try {\n                numbersList.add(Integer.parseInt(number));\n\
    \            } catch (NumberFormatException e) {\n                System.out.println(\"\
    Invalid input\");\n            }\n        }\n        Collections.sort(numbersList);\n\
    \        return numbersList.stream().map(Object::toString).collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: "Invalid input\nInvalid input\n"
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgxv0q1t.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpce9pcnxe.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbm0yiqxh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ny6f69c.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpnowgk1nd.java:15)\n\tat Problem.main(tmpnowgk1nd.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return Arrays.toString(numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfqhe422u.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1izn2lp9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnaqisk1m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprkv4_ey7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numberList = Arrays.asList(numbers.split(\" \"));\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjcg0khtt.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8iqhyfff.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h9har4p.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpmqqq0d_9.java:15)\n\tat Problem.main(tmpmqqq0d_9.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::parseInt)\n                .sorted()\n        \
    \        .collect(Collectors.toList());\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmplbx33jig.java:18)\n\tat Problem.main(tmplbx33jig.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubtsddtn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2tf55xu6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8qnvyhb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuja2dkhx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return Arrays.toString(numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3q9ivo0w.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiwj10nuy.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5_4x3j93.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqa__pnkh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \")).map(Integer::valueOf).collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpzrv1ob7_.java:15)\n\tat Problem.main(tmpzrv1ob7_.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbtqdzmvb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \            .map(Integer::valueOf)\n            .sorted()\n            .collect(Collectors.toList());\n\
    \        return numberList.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.valueOf(Integer.java:766)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmpi5vlyut4.java:18)\n\tat Problem.main(tmpi5vlyut4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfu_8_mq6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_hm41iff.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xpo_jsd.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuk5hjs9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<Integer> numberList = Arrays.stream(numbers.split(\" \"))\n\
    \                .map(Integer::parseInt)\n                .collect(Collectors.toList());\n\
    \        Collections.sort(numberList);\n        return numberList.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\
    \tat java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n\
    \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\t\
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
    \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\
    \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\t\
    at Problem.sortNumbers(tmptrtzk9y6.java:17)\n\tat Problem.main(tmptrtzk9y6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36l5g9wa.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> list = Arrays.asList(numbers.split(\" \"));\n      \
    \  Collections.sort(list);\n        return list.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqlwv4qnr.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        List<String> numbersList = new ArrayList<>();\n        numbersList.addAll(Arrays.asList(numbers.split(\"\
    \ \")));\n        Collections.sort(numbersList);\n        return numbersList.stream().collect(Collectors.joining(\"\
    \ \"));\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmebqw6k.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf_xd5r30.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4yy9ed8k.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ytjlo7n.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjy70_x0z.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp16dl_0mx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe48rwcnl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_vby026.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkr97xa_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberStrings = numbers.split(\" \");\n        Arrays.sort(numberStrings);\n\
    \        return String.join(\" \", numberStrings);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd6zx46m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numberArray = numbers.split(\" \");\n        Arrays.sort(numberArray);\n\
    \        return String.join(\" \", numberArray);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_abqxoq.java:23)\n"
  exit_code: 1
  status: Exception

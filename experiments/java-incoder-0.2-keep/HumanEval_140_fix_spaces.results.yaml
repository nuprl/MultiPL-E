name: HumanEval_140_fix_spaces
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp268iqpjg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkm1qr0l6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc472evdy.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpc472evdy.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpc472evdy.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpc472evdy.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpc472evdy.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpc472evdy.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcvoifx02.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpcvoifx02.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpcvoifx02.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpcvoifx02.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpcvoifx02.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8ld4yom.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4n6g4uh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1q25vk09.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2qnej72.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0rf7gf6s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (first) {\n                sb.append(word);\n                first = false;\n\
    \            } else {\n                sb.append(\" \");\n                sb.append(word);\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr4cy1fjs.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rpgkkor.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqkxrrlyj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            sb.append(word).append(\" \");\n \
    \       }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikd_spki.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphzi2aro8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for(int i = 0; i < words.length; i++) {\n            sb.append(words[i]);\n\
    \            if(i != words.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1thjeae.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (first) {\n                sb.append(word);\n                first = false;\n\
    \            } else {\n                sb.append(\" \");\n                sb.append(word);\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzg9l7lt.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprztpxlqx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk40gx1w3.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu423hlil.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp991wft7s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa5qgedto.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (first) {\n                sb.append(word);\n                first = false;\n\
    \            } else {\n                sb.append(word.replaceAll(\"\\\\s+\", \"\
    -\"));\n            }\n        }\n        return sb.toString();\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fixSpaces((\"Example\"\
    )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
    Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
    Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsukwxj8b.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkytj35fq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3v5y2qxr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9px3c17.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdw67cbx0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwm1bp1kc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23opq8k2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmvgz2bsq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder();\n        boolean first = true;\n        for(int i = 0;\
    \ i < text.length(); i++) {\n            char c = text.charAt(i);\n          \
    \  if (c == ' ') {\n                if (!first) {\n                    sb.append('_');\n\
    \                }\n                first = false;\n            } else {\n   \
    \             sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcimx8b9f.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7r0hnry7.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmp7r0hnry7.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmp7r0hnry7.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp7r0hnry7.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmp7r0hnry7.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3c4cihb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7uw605n_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf543w034.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmkkryvx_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwh3lnsfz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (first) {\n                first = false;\n            } else {\n          \
    \      sb.append(\" \");\n            }\n            sb.append(word.replaceAll(\"\
    \\\\s+\", \"_\"));\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67auw5hs.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_taqcn8m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy_cs1yzo.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpy_cs1yzo.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpy_cs1yzo.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpy_cs1yzo.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpy_cs1yzo.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdjep_fof.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppu5ehw8t.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9uj8flkf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mjmwr12.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder();\n        boolean first = true;\n        for(int i = 0;\
    \ i < text.length(); i++) {\n            char c = text.charAt(i);\n          \
    \  if(c == ' ') {\n                if(first) {\n                    first = false;\n\
    \                } else {\n                    sb.append('_');\n             \
    \   }\n            } else {\n                sb.append(c);\n            }\n  \
    \      }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppo5q0nwe.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml8czdut.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3szg95m9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmm9zweyp.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqtzxic0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjmk2g2pj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        if (sb.length()\
    \ > 2) {\n            sb.replace(\" \", \"_\");\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpziscgjt4.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpziscgjt4.java:20: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \          sb.replace(\" \", \"_\");\n              ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnfseyx7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3o0_bjqm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjheop1f9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp921ww2r7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpke9b09g4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp14rg26aa.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqh8aayre.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp90y6bjqn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxm0h0az7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm088tuuh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluerzbpe.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        if (sb.length() > 2) {\n            sb.replace(\" \", \"\
    -\");\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqn59h7tn.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpqn59h7tn.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpqn59h7tn.java:21: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n            sb.replace(\" \", \"-\");\n        \
    \      ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            if (sb.length() > 0) {\n         \
    \       sb.append(\" \");\n            }\n            sb.append(word.replaceAll(\"\
    \\\\s+\", \"_\"));\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2q79ne1.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkqh9mttq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            sb.append(word.replaceAll(\"\\\\s+\"\
    , \"_\"));\n            if (sb.length() > 2) {\n                sb.setCharAt(sb.length()\
    \ - 1, Character.toUpperCase(sb.charAt(sb.length() - 1)));\n            }\n  \
    \      }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphu5ikv79.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0qwa2ck.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcloe3tv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9gomlk9l.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyz6j_fwp.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuepogsyi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzwir0liv.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpzwir0liv.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpzwir0liv.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpzwir0liv.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpzwir0liv.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1pu3nlnq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpii2f1_dh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (!first) {\n                sb.append(\" \");\n            }\n            first\
    \ = false;\n            sb.append(word);\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprz9s8zsp.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9gbmd42s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstn54_rb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94jaik1m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        boolean space = false;\n        for (int\
    \ i = 0; i < sb.length(); i++) {\n            if (sb.charAt(i) == ' ') {\n   \
    \             space = true;\n            } else {\n                if (space)\
    \ {\n                    sb.setCharAt(i, '_');\n                } else {\n   \
    \                 space = false;\n                }\n            }\n        }\n\
    \        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwr4g0448.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        return sb;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmhsbd1vv.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpmhsbd1vv.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpmhsbd1vv.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpmhsbd1vv.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpmhsbd1vv.java:22:\
    \ error: incompatible types: StringBuilder cannot be converted to String\n   \
    \     return sb;\n               ^\n5 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (first) {\n                sb.append(word);\n                first = false;\n\
    \            } else {\n                sb.append(word).append(\" \");\n      \
    \      }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkkqg6pnw.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpetd4la9q.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpetd4la9q.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpetd4la9q.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpetd4la9q.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpetd4la9q.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_zt0tdow.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoxu4st8y.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            sb.append(word.replaceAll(\"\\\\s+\"\
    , \"_\"));\n            if (sb.length() > 2) {\n                sb.setCharAt(sb.length()\
    \ - 1, '-');\n            }\n        }\n        return sb.toString();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\"\
    )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
    Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
    Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9k64h6d_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93885luo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7cjl_tpg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        return sb;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxxb2faww.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpxxb2faww.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpxxb2faww.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpxxb2faww.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpxxb2faww.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpxxb2faww.java:23: error: incompatible types: StringBuilder\
    \ cannot be converted to String\n        return sb;\n               ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4uo4nzyk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ox5h5ps.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzow_v4e7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1orp6yrn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig0wfihy.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyiihmyz4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        int i\
    \ = 0;\n        while (i < sb.length()) {\n            if (sb.charAt(i) == ' ')\
    \ {\n                i++;\n                if (i == sb.length()) {\n         \
    \           break;\n                }\n                if (sb.charAt(i) == ' ')\
    \ {\n                    i++;\n                }\n                sb.setCharAt(i,\
    \ '-');\n            }\n            i++;\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm4c21psu.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6qww3ng5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0cqy80s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoaq51ymp.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp603j_uw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bhjg3yb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5qygf_7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgd58zvxr.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpgd58zvxr.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpgd58zvxr.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgd58zvxr.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpgd58zvxr.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder();\n        boolean first = true;\n        for(int i = 0;\
    \ i < text.length(); i++) {\n            char c = text.charAt(i);\n          \
    \  if(c == ' ') {\n                if(first) {\n                    first = false;\n\
    \                } else {\n                    sb.append('_');\n             \
    \   }\n            } else {\n                sb.append(c);\n            }\n  \
    \      }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvolke1fk.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz8g3rlon.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_gplt5d.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxgfzjdhe.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for(int i = 0; i < words.length; i++) {\n            sb.append(words[i]);\n\
    \            if(i != words.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0yo7_b0.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n2be2rt.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeh7ztd7w.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpeh7ztd7w.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpeh7ztd7w.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpeh7ztd7w.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpeh7ztd7w.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        if (sb.length()\
    \ > 2) {\n            sb.replace(\" \", \"_\");\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgxi5ptw8.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpgxi5ptw8.java:20: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \          sb.replace(\" \", \"_\");\n              ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtav414a.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu8c6trjw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmposcuxvr2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpng0km1vo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4z3yg52.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6nie3bf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmmgai28.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5m_aud4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7behgjyi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        return sb;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr183wuen.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpr183wuen.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpr183wuen.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpr183wuen.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpr183wuen.java:22:\
    \ error: incompatible types: StringBuilder cannot be converted to String\n   \
    \     return sb;\n               ^\n5 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpomn6scx0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0t6vgf4i.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbe6d6k7j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdlvflyx5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0m0gsgud.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6aw2t5o.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrk2evb8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3z5xopl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (first) {\n                sb.append(word);\n                first = false;\n\
    \            } else {\n                sb.append(\" \");\n                sb.append(word);\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqkpw0s94.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1qjx51j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6dw1j33.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5x_wk45m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3p2i3cgg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gyp23jt.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulo9h9hf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbwo3502.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjo07mhoo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxv4jcll.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\"\
    \ \", \"_\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"\
    _\");\n        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n\
    \        sb.replace(\" \", \"_\");\n        sb.replace(\" \", \"_\");\n      \
    \  sb.replace(\" \", \"_\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl_p869h_.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:19: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:20: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:21: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:22:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:23: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:24: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:25: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:26: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:27:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:28: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:29: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:30: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:31: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:32:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:33: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:34: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:35: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:36: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:37:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:38: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:39: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:40: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:41: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:42:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:43: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:44: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:45: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:46: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:47:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:48: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:49: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:50: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:51: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:52:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:53: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:54: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:55: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:56: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:57:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:58: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:59: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:60: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:61: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:62:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:63: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:64: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:65: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:66: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:67:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:68: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:69: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:70: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:71: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:72:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:73: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:74: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:75: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n/tmp/tmpl_p869h_.java:76: error: method replace\
    \ in class StringBuilder cannot be applied to given types;\n        sb.replace(\"\
    \ \", \"_\");\n          ^\n  required: int,int,String\n  found:    String,String\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:77:\
    \ error: method replace in class StringBuilder cannot be applied to given types;\n\
    \        sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n/tmp/tmpl_p869h_.java:78: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpl_p869h_.java:79: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \      sb.replace(\" \", \"_\");\n          ^\n  required: int,int,String\n  found:\
    \    String,String\n  reason: actual and formal argument lists differ in length\n\
    /tmp/tmpl_p869h_.java:80: error: method replace in class StringBuilder cannot\
    \ be applied to given types;\n        sb.replace(\" \", \"_\");\n          ^\n\
    \  required: int,int,String\n  found:    String,String\n  reason: actual and formal\
    \ argument lists differ in length\n63 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjij1lgw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp34bfzm7n.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder();\n        boolean first = true;\n        for(int i = 0;\
    \ i < text.length(); i++) {\n            char c = text.charAt(i);\n          \
    \  if (c == ' ') {\n                if (!first) {\n                    sb.append('_');\n\
    \                }\n                first = false;\n            } else {\n   \
    \             sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_oqozc4p.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        boolean changed = false;\n        for(int\
    \ i = 0; i < sb.length(); i++) {\n            char c = sb.charAt(i);\n       \
    \     if(Character.isWhitespace(c)) {\n                changed = true;\n     \
    \           sb.setCharAt(i, Character.toUpperCase(c));\n            }\n      \
    \  }\n        if(changed) {\n            for(int i = 0; i < sb.length(); i++)\
    \ {\n                char c = sb.charAt(i);\n                if(Character.isWhitespace(c))\
    \ {\n                    if(i > 0 && sb.charAt(i - 1) == ' ') {\n            \
    \            sb.setCharAt(i, Character.toLowerCase(c));\n                    }\n\
    \                }\n            }\n        }\n        return sb.toString();\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpczcswi_6.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (int i = 0; i < words.length; i++) {\n            if (words[i].length()\
    \ > 2) {\n                for (int j = i; j < words.length; j++) {\n         \
    \           if (words[j].length() > 2) {\n                        sb.append(words[j].substring(0,\
    \ words[j].length() - 1));\n                        sb.append(words[j].substring(words[j].length()\
    \ - 1, words[j].length()));\n                        i = j;\n                \
    \        break;\n                    }\n                }\n            }\n   \
    \         sb.append(words[i]);\n        }\n        return sb.toString();\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4nd8p2jq.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzl3jnyb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2j72uy8w.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpll6f60mw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl3e5417x.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s1qbyfv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk9acwhy.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder();\n        boolean first = true;\n        for (int i =\
    \ 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n       \
    \     if (c == ' ') {\n                if (first) {\n                    sb.append(c);\n\
    \                    first = false;\n                } else {\n              \
    \      sb.append(Character.toUpperCase(c));\n                }\n            }\
    \ else {\n                sb.append(c);\n            }\n        }\n        return\
    \ sb.toString();\n\n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3g1b8zwy.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnle4iyx1.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6d6kezep.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_w3tod00.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvxg267bc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj76ihfo3.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqt7su13.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgis_0m5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnck34dln.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu4tmm_x7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphup4rn7f.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2u6of4t4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptlhj_fhf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55o3e51n.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ru42zlc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4u8lzwet.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jrk9w9i.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzvpgmezr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1k7ndxt.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpav4kb1ni.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsq1ynhm7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxumoywg8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpff88ek4h.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        int count\
    \ = 0;\n        for (int i = 0; i < sb.length(); i++) {\n            if (sb.charAt(i)\
    \ == ' ') {\n                count++;\n                if (count == 2) {\n   \
    \                 sb.replace(i, i + 1, \"-\");\n                }\n          \
    \  }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptrgspat0.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqo6ou_bg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvr7akboz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        if (sb.length()\
    \ > 2) {\n            sb.replace(\" \", \"_\");\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2moccvw6.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp2moccvw6.java:20: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \          sb.replace(\" \", \"_\");\n              ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder();\n        boolean first = true;\n        for (char c :\
    \ text.toCharArray()) {\n            if (c == ' ') {\n                if (!first)\
    \ {\n                    sb.append('_');\n                } else {\n         \
    \           first = false;\n                }\n            } else {\n        \
    \        sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkw2cfn7.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5rvtqae.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            sb.append(word.replaceAll(\"\\\\s+\"\
    , \"_\"));\n            if (sb.length() > 2) {\n                sb.setCharAt(sb.length()\
    \ - 1, '-');\n            }\n        }\n        return sb.toString();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\"\
    )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
    Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
    Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbjh7c3q.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpte9nlps9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            sb.append(word.replaceAll(\"\\\\s+\"\
    , \"_\"));\n            if (sb.length() > 2) {\n                sb.setCharAt(sb.length()\
    \ - 1, '-');\n            }\n        }\n        return sb.toString();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\"\
    )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
    Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
    Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv1z1gi_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            sb.append(word.replaceAll(\"\\\\s+\"\
    , \"_\"));\n            if (sb.length() > 2) {\n                sb.setCharAt(sb.length()\
    \ - 1, '-');\n            }\n        }\n        return sb.toString();\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fixSpaces((\"Example\"\
    )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
    Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
    Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphe59zw_t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jsxnl1q.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        if (sb.length()\
    \ > 2) {\n            sb.replace(\" \", \"_\");\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb_uy8coh.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmpb_uy8coh.java:20: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \          sb.replace(\" \", \"_\");\n              ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf47beosm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwu0frfpc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe899re8j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzx71u79n.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfuc29ukh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp211j2qom.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw16wyzgb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  for (String word : words) {\n            sb.append(word.replaceAll(\"\\\\s+\"\
    , \"_\"));\n            if (sb.length() > 2) {\n                sb.deleteCharAt(sb.length()\
    \ - 1);\n            }\n        }\n        return sb.toString();\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fixSpaces((\"Example\"\
    )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
    Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
    Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvv5mc57p.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        String[] words =\
    \ text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean first = true;\n        for (String word : words) {\n            if\
    \ (first) {\n                first = false;\n            } else {\n          \
    \      sb.append(\" \");\n            }\n            sb.append(word.replaceAll(\"\
    \\\\s+\", \"_\"));\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"\
    Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\"\
    )));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hm5150q.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder();\n        boolean first = true;\n        for (int i =\
    \ 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n       \
    \     if (c == ' ') {\n                if (!first) {\n                    sb.append('_');\n\
    \                }\n                first = false;\n            } else {\n   \
    \             sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk5in1_3l.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97im9mh9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94565mzp.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzaei97us.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\");\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fixSpaces((\"Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"\
    Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow\
    \ Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n   \
    \ assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphmmbewtu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        return text.replaceAll(\"\
    \\\\s+\", \"_\").replaceAll(\"\\\\s{2,}\", \"-\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fixSpaces((\"Example\")).equals((\"Example\"\
    )));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"Mudasir_Hanif_\")));\n\
    \    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"\
    \   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmcyxx4q.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\
    \n    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n    public static String fixSpaces(String text) {\n        StringBuilder sb\
    \ = new StringBuilder(text);\n        sb.replace(\" \", \"_\");\n        if (sb.length()\
    \ > 2) {\n            sb.replace(\" \", \"_\");\n        }\n        return sb.toString();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fixSpaces((\"\
    Example\")).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \"\
    )).equals((\"Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty\
    \  Fellow\")).equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"\
    Exa   mple\")).equals((\"Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2\
    \ mple\")).equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3myhvxju.java:18: error: method replace in class StringBuilder\
    \ cannot be applied to given types;\n        sb.replace(\" \", \"_\");\n     \
    \     ^\n  required: int,int,String\n  found:    String,String\n  reason: actual\
    \ and formal argument lists differ in length\n/tmp/tmp3myhvxju.java:20: error:\
    \ method replace in class StringBuilder cannot be applied to given types;\n  \
    \          sb.replace(\" \", \"_\");\n              ^\n  required: int,int,String\n\
    \  found:    String,String\n  reason: actual and formal argument lists differ\
    \ in length\n2 errors\n"
  exit_code: 1
  status: SyntaxError

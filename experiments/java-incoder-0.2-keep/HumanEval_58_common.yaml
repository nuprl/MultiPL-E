name: HumanEval_58_common
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return sorted unique common elements for two lists.\n  \
  \  // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    // [1,\
  \ 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public static\
  \ ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(common((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
  \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
  \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
  \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
  \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
  \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> common = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long i : set1) {\n            if(set2.contains(i)) {\n             \
    \   common.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long common = 0;\n        long min1 = 0,\
    \ min2 = 0;\n        long max1 = 0, max2 = 0;\n        for (int i = 0; i < l1.size();\
    \ i++) {\n            min1 = Math.min(min1, l1.get(i));\n            max1 = Math.max(max1,\
    \ l1.get(i));\n        }\n        for (int i = 0; i < l2.size(); i++) {\n    \
    \        min2 = Math.min(min2, l2.get(i));\n            max2 = Math.max(max2,\
    \ l2.get(i));\n        }\n        for (int i = 0; i < l1.size(); i++) {\n    \
    \        common = Math.min(common, l1.get(i));\n        }\n        for (int i\
    \ = 0; i < l2.size(); i++) {\n            common = Math.min(common, l2.get(i));\n\
    \        }\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i)\
    \ == common) {\n                result.add(l1.get(i));\n            }\n      \
    \  }\n        for (int i = 0; i < l2.size(); i++) {\n            if (l2.get(i)\
    \ == common) {\n                result.add(l2.get(i));\n            }\n      \
    \  }\n        for (int i = 0; i < result.size(); i++) {\n            if (result.get(i)\
    \ < min1) {\n                result.add(min1);\n            }\n            if\
    \ (result.get(i) > max1) {\n                result.add(max1);\n            }\n\
    \            if (result.get(i) < min2) {\n                result.add(min2);\n\
    \            }\n            if (result.get(i) > max2) {\n                result.add(max2);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            if (it1.next() == it2.next()) {\n            \
    \    result.add(it1.next());\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE;\n        long min2 = Long.MAX_VALUE;\n  \
    \      for (long i : l1) {\n            if (min1 < i) {\n                min1\
    \ = i;\n            }\n        }\n        for (long i : l2) {\n            if\
    \ (min2 < i) {\n                min2 = i;\n            }\n        }\n        for\
    \ (long i : l1) {\n            for (long j : l2) {\n                if (i == j)\
    \ {\n                    common++;\n                }\n            }\n       \
    \ }\n        for (long i : l1) {\n            if (min1 < i) {\n              \
    \  result.add(min1);\n            }\n        }\n        for (long i : l2) {\n\
    \            if (min2 < i) {\n                result.add(min2);\n            }\n\
    \        }\n        return result;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        HashMap<Long, Long> map = new HashMap<>();\n        for (Long i : l1)\
    \ {\n            map.put(i, map.getOrDefault(i, 0) + 1);\n        }\n        for\
    \ (Long i : l2) {\n            map.put(i, map.getOrDefault(i, 0) + 1);\n     \
    \   }\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n        \
    \    if (entry.getValue() == l1.size() || entry.getValue() == l2.size()) {\n \
    \               common.add(entry.getKey());\n            }\n        }\n      \
    \  Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n            }\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a < b) {\n                result.add(b);\n\
    \            } else {\n                result.add(a);\n            }\n       \
    \ }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long max1 = 0;\n      \
    \  long min1 = 0;\n        long max2 = 0;\n        long min2 = 0;\n        long\
    \ max3 = 0;\n        long min3 = 0;\n        long max4 = 0;\n        long min4\
    \ = 0;\n        long max5 = 0;\n        long min5 = 0;\n        long max6 = 0;\n\
    \        long min6 = 0;\n        long max7 = 0;\n        long min7 = 0;\n    \
    \    long max8 = 0;\n        long min8 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long max10 = 0;\n        long min10 = 0;\n        long max11\
    \ = 0;\n        long min11 = 0;\n        long max12 = 0;\n        long min12 =\
    \ 0;\n        long max13 = 0;\n        long min13 = 0;\n        long max14 = 0;\n\
    \        long min14 = 0;\n        long max15 = 0;\n        long min15 = 0;\n \
    \       long max16 = 0;\n        long min16 = 0;\n        long max17 = 0;\n  \
    \      long min17 = 0;\n        long max18 = 0;\n        long min18 = 0;\n   \
    \     long max19 = 0;\n        long min19 = 0;\n        long max20 = 0;\n    \
    \    long min20 = 0;\n        long max21 = 0;\n        long min21 = 0;\n     \
    \   long max22 = 0;\n        long min22 = 0;\n        long max23 = 0;\n      \
    \  long min23 = 0;\n        long max24 = 0;\n        long min24 = 0;\n       \
    \ long max25 = 0;\n        long min25 = 0;\n        long max26 = 0;\n        long\
    \ min26 = 0;\n        long max27 = 0;\n        long min27 = 0;\n        long max28\
    \ = 0;\n        long min28 = 0;\n        long max29 = 0;\n        long min29 =\
    \ 0;\n        long max30 = 0;\n        long min30 = 0;\n        long max31 = 0;\n\
    \        long min31 = 0;\n        long max32 = 0;\n        long min32 = 0;\n \
    \       long max33 = 0;\n        long min33 = 0;\n        long max34 = 0;\n  \
    \      long min34 = 0;\n        long max35 = 0;\n        long min35 = 0;\n   \
    \     long max36 = 0;\n        long min36 = 0;\n        long max37 = 0;\n    \
    \    long min37 = 0;\n        long max38 = 0;\n        long min38 = 0;\n     \
    \   long max39 = 0;\n        long min39 = 0;\n        long max40 = 0;\n      \
    \  long min40 = 0;\n        long max41 = 0;\n        long min41 = 0;\n       \
    \ long max42 = 0;\n", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long val : set1) {\n            if(set2.contains(val)) {\n      \
    \          result.add(val);\n                set1.remove(val);\n             \
    \   set2.remove(val);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        for(Long val : set1) {\n            if(set2.contains(val))\
    \ {\n                result.add(val);\n                set1.remove(val);\n   \
    \             set2.remove(val);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long num : set1) {\n            if (set2.contains(num))\
    \ {\n                common.add(num);\n            }\n        }\n        for (Long\
    \ num : set2) {\n            if (!set1.contains(num)) {\n                common.add(num);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        long common = l1.stream().filter(x -> l2.contains(x)).count();\n\
    \        result.add(common);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        for(Long i : set1) {\n  \
    \          if(set2.contains(i)) {\n                result.add(i);\n          \
    \      set1.remove(i);\n                set2.remove(i);\n            }\n     \
    \   }\n        return result;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        HashSet<Long> h1 = new HashSet<>(l1);\n        HashSet<Long> h2 = new\
    \ HashSet<>(l2);\n        common.addAll(h1);\n        common.addAll(h2);\n   \
    \     Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n              \
    \  it1.remove();\n                it2.remove();\n            }\n        }\n  \
    \      return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashMap<Long, Long> h1 = new HashMap<>();\n        HashMap<Long, Long>\
    \ h2 = new HashMap<>();\n        for (Long x : l1) {\n            h1.put(x, x);\n\
    \        }\n        for (Long x : l2) {\n            h2.put(x, x);\n        }\n\
    \        for (Long x : h1.keySet()) {\n            if (h2.containsKey(x)) {\n\
    \                result.add(x);\n                h1.remove(x);\n             \
    \   h2.remove(x);\n            }\n        }\n        return result;\n", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long n1 = it1.next();\n\
    \            Long n2 = it2.next();\n            if (n1 == n2) {\n            \
    \    result.add(n1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (n1 < n2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long i : set1) {\n            if(set2.contains(i)) {\n          \
    \      result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        common.removeAll(l1);\n\
    \        common.removeAll(l2);\n        result.addAll(common);\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Set<Long> common = new HashSet<>();\n        for (Long i : set1) {\n   \
    \         if (set2.contains(i)) {\n                common.add(i);\n          \
    \  }\n        }\n        for (Long i : set2) {\n            if (!set1.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : common) {\n            result.add(i);\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 =\
    \ new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long>\
    \ it2 = set2.iterator();\n        while (it1.hasNext() && it2.hasNext()) {\n \
    \           if (it1.next() == it2.next()) {\n                result.add(it1.next());\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        for(Long i : set1) {\n  \
    \          if(!set2.contains(i)) {\n                result.add(i);\n         \
    \   }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        for(Long i : set1) {\n            if(!set2.contains(i))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long i : set1) {\n            if(set2.contains(i)) {\n             \
    \   result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        for (Long\
    \ i : common) {\n            if (l1.contains(i) && l2.contains(i)) {\n       \
    \         result.add(i);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n \
    \       Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n              \
    \  it1.remove();\n                it2.remove();\n            }\n        }\n  \
    \      return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      long common = 0;\n        for (long i : l1) {\n            for (long j\
    \ : l2) {\n                if (i == j) {\n                    common++;\n    \
    \            }\n            }\n        }\n        for (long i : l2) {\n      \
    \      for (long j : l1) {\n                if (i == j) {\n                  \
    \  common++;\n                }\n            }\n        }\n        for (long i\
    \ : l1) {\n            for (long j : l2) {\n                if (i == j) {\n  \
    \                  common++;\n                }\n            }\n        }\n  \
    \      for (long i : l2) {\n            for (long j : l1) {\n                if\
    \ (i == j) {\n                    common++;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l2) {\n            for (long j : l1) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l", "        ArrayList<Long> common = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     set1.retainAll(set2);\n        set2.retainAll(set1);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.addAll(set2);\n        set1.removeAll(set2);\n\
    \        set2.removeAll(set1);\n        set1.", "        ArrayList<Long> common\
    \ = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        for(Long val : set1) {\n\
    \            if(set2.contains(val)) {\n                result.add(val);\n    \
    \            set1.remove(val);\n                set2.remove(val);\n          \
    \  }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        for(Long i : set1) {\n            if(set2.contains(i))\
    \ {\n                result.add(i);\n                set1.remove(i);\n       \
    \         set2.remove(i);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long i : set1) {\n            if(!set2.contains(i)) {\n         \
    \       result.add(i);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        HashSet<Long> h1 = new HashSet<>(l1);\n        HashSet<Long>\
    \ h2 = new HashSet<>(l2);\n        Iterator<Long> it1 = h1.iterator();\n     \
    \   Iterator<Long> it2 = h2.iterator();\n        while (it1.hasNext() && it2.hasNext())\
    \ {\n            if (it1.next() != it2.next()) {\n                result.add(it1.next());\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long common = 0;\n        long common2\
    \ = 0;\n        long common3 = 0;\n        long common4 = 0;\n        long common5\
    \ = 0;\n        long common6 = 0;\n        long common7 = 0;\n        long common8\
    \ = 0;\n        long common9 = 0;\n        long common10 = 0;\n        long common11\
    \ = 0;\n        long common12 = 0;\n        long common13 = 0;\n        long common14\
    \ = 0;\n        long common15 = 0;\n        long common16 = 0;\n        long common17\
    \ = 0;\n        long common18 = 0;\n        long common19 = 0;\n        long common20\
    \ = 0;\n        long common21 = 0;\n        long common22 = 0;\n        long common23\
    \ = 0;\n        long common24 = 0;\n        long common25 = 0;\n        long common26\
    \ = 0;\n        long common27 = 0;\n        long common28 = 0;\n        long common29\
    \ = 0;\n        long common30 = 0;\n        long common31 = 0;\n        long common32\
    \ = 0;\n        long common33 = 0;\n        long common34 = 0;\n        long common35\
    \ = 0;\n        long common36 = 0;\n        long common37 = 0;\n        long common38\
    \ = 0;\n        long common39 = 0;\n        long common40 = 0;\n        long common41\
    \ = 0;\n        long common42 = 0;\n        long common43 = 0;\n        long common44\
    \ = 0;\n        long common45 = 0;\n        long common46 = 0;\n        long common47\
    \ = 0;\n        long common48 = 0;\n        long common49 = 0;\n        long common50\
    \ = 0;\n        long common51 = 0;\n        long common52 = 0;\n        long common53\
    \ = 0;\n        long common54 = 0;\n        long common55 = 0;\n        long common56\
    \ = 0;\n        long common57 = 0;\n        long common58 = 0;\n        long common59\
    \ = 0;\n        long common60 = 0;\n        long common61 = 0;\n        long common62\
    \ = 0;\n        long common63 = 0;\n        long common64 = 0;\n        long common65\
    \ = 0;\n        long common66 = 0;\n        long common67 = 0;\n        long common68\
    \ = 0;\n        long common69 = 0;\n        long common70 = 0;\n        long common71\
    \ = 0;\n        long common72 = 0;\n        long common73 = 0;\n        long common74\
    \ = 0;\n        long common75 = 0;\n        long common76 = 0;\n        long common77\
    \ = 0;\n        long common78 = 0;\n        long common79 = 0;\n        long common80\
    \ = 0;\n        long common81 = 0;\n        long common82 = 0;\n        long common83\
    \ = 0;\n        long common84 = 0;\n        long common85", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long a = it1.next();\n            Long b = it2.next();\n\
    \            if (a == b) {\n                result.add(a);\n                it1.remove();\n\
    \                it2.remove();\n            } else if (a > b) {\n            \
    \    it1.remove();\n            } else {\n                it2.remove();\n    \
    \        }\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n \
    \       Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n            }\n\
    \        }\n        return result;\n", "        ArrayList<Long> common = new ArrayList<Long>();\n\
    \        Set<Long> set1 = new HashSet<Long>(l1);\n        Set<Long> set2 = new\
    \ HashSet<Long>(l2);\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n              \
    \  it1.remove();\n                it2.remove();\n            } else if (i1 < i2)\
    \ {\n                it1.remove();\n            } else {\n                it2.remove();\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        result.addAll(common);\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (a > b) {\n                it1.remove();\n            }\
    \ else {\n                it2.remove();\n            }\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (i1 < i2) result.add(i1);\n            if (i2 < i1) result.add(i2);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> h1\
    \ = new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n      \
    \  common.addAll(h1);\n        common.addAll(h2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (set1.contains(b) && set2.contains(a)) {\n                result.add(a);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        for (Long i : set1) {\n            if (set2.contains(i)) {\n        \
    \        common.add(i);\n            }\n        }\n        for (Long i : set2)\
    \ {\n            if (!set1.contains(i)) {\n                common.add(i);\n  \
    \          }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ common = 0;\n        long min1 = Long.MAX_VALUE;\n        long min2 = Long.MAX_VALUE;\n\
    \        for (long i : l1) {\n            if (min1 < i) {\n                min1\
    \ = i;\n            }\n        }\n        for (long i : l2) {\n            if\
    \ (min2 < i) {\n                min2 = i;\n            }\n        }\n        for\
    \ (long i : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l1) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l2) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : ", "       \
    \ ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n\
    \        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n \
    \       common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long i : set1) {\n            if(set2.contains(i)) {\n             \
    \   result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long common = 0;\n        for (long i :\
    \ l1) {\n            for (long j : l2) {\n                if (i == j) {\n    \
    \                common++;\n                }\n            }\n        }\n    \
    \    for (long i : l2) {\n            for (long j : l1) {\n                if\
    \ (i == j) {\n                    common++;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l2) {\n            for (long j : l1) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l2) {\n            for (long j : l1) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n \
    \       Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n              \
    \  it1.remove();\n                it2.remove();\n            } else if (i1 < i2)\
    \ {\n                it1.remove();\n            } else {\n                it2.remove();\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            if (it1.next() != it2.next()) {\n            \
    \    result.add(it1.next());\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        for(Long val : set1) {\n            if(set2.contains(val))\
    \ {\n                result.add(val);\n                set1.remove(val);\n   \
    \             set2.remove(val);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n \
    \       Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            if (it1.next() == it2.next()) {\n            \
    \    result.add(it1.next());\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long val : set1) {\n            if (set2.contains(val))\
    \ {\n                common.add(val);\n            }\n        }\n        for (Long\
    \ val : set2) {\n            if (!set1.contains(val)) {\n                common.add(val);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n",
  "        ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next()\
    \ == it2.next()) {\n                result.add(it1.next());\n            }\n \
    \       }\n        return result;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long i : set1) {\n            if(set2.contains(i)) {\n          \
    \      common.add(i);\n            }\n        }\n        return common;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n", "     \
    \   ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1 =\
    \ new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n  \
    \      common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ hs1 = new HashSet<Long>(l1);\n        HashSet<Long> hs2 = new HashSet<Long>(l2);\n\
    \        common.addAll(hs1);\n        common.addAll(hs2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long l : set1) {\n            if(set2.contains(l)) {\n          \
    \      result.add(l);\n                set1.remove(l);\n                set2.remove(l);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        for (Long i : set1) {\n            if (set2.contains(i)) {\n        \
    \        common.add(i);\n            }\n        }\n        for (Long i : set2)\
    \ {\n            if (!set1.contains(i)) {\n                common.add(i);\n  \
    \          }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long i : set1) {\n            if(set2.contains(i)) {\n          \
    \      result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        result.addAll(common);\n        return\
    \ result;\n", "        ArrayList<Long> common = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Set<Long> commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n\
    \        commonSet.addAll(set2);\n        commonSet.removeAll(set1);\n       \
    \ commonSet.removeAll(set2);\n        commonSet.removeAll(common);\n        common.addAll(commonSet);\n\
    \        Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ common = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> commonSet = new\
    \ HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                commonSet.add(i);\n            }\n        }\n        for\
    \ (Long i : set2) {\n            if (!commonSet.contains(i)) {\n             \
    \   common.add(i);\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!set1.contains(i)) {\n\
    \                commonSet.add(i);\n            }\n        }\n        for (Long\
    \ i : commonSet) {\n            common.add(i);\n        }\n        return common;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long common = 0;\n        long max = 0;\n        long min = 0;\n    \
    \    long sum = 0;\n        long count = 0;\n        long sum1 = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5\
    \ = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n\
    \        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n  \
    \      long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n   \
    \     long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n    \
    \    long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n     \
    \   long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n      \
    \  long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n       \
    \ long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long\
    \ sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33\
    \ = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 =\
    \ 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n\
    \        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n \
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n  \
    \      long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n   \
    \     long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n    \
    \    long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n     \
    \   long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n      \
    \  long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n       \
    \ long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long\
    \ sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long sum67\
    \ = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70 =\
    \ 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n\
    \        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n \
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n  \
    \      long sum80 = 0;\n        long sum81", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        for(Long i : set1) {\n            if(!set2.contains(i))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long i : set1) {\n            if(set2.contains(i)) {\n             \
    \   result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long common = 0;\n        long min1 = Long.MAX_VALUE,\
    \ min2 = Long.MAX_VALUE;\n        for (long i : l1) {\n            if (min1 <\
    \ i) {\n                min1 = i;\n            }\n        }\n        for (long\
    \ i : l2) {\n            if (min2 < i) {\n                min2 = i;\n        \
    \    }\n        }\n        for (long i : l1) {\n            if (min1 < i && min2\
    \ < i) {\n                common++;\n            }\n        }\n        for (long\
    \ i : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l1) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l2) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l1) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l2) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 =\
    \ new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long>\
    \ it2 = set2.iterator();\n        while (it1.hasNext() && it2.hasNext()) {\n \
    \           Long i1 = it1.next();\n            Long i2 = it2.next();\n       \
    \     if (i1 == i2) {\n                result.add(i1);\n                it1.remove();\n\
    \                it2.remove();\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long val : set1) {\n            if(set2.contains(val)) {\n      \
    \          result.add(val);\n                set1.remove(val);\n             \
    \   set2.remove(val);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 =\
    \ new HashSet<>(l2);\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        HashSet<Long> h1 = new HashSet<>(l1);\n\
    \        HashSet<Long> h2 = new HashSet<>(l2);\n        h1.retainAll(h2);\n  \
    \      h2.retainAll(h1);\n        result.addAll(h1);\n        result.addAll(h2);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long i : set1) {\n            if(set2.contains(i)) {\n          \
    \      result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n            }\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long common2 = 0;\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common2++;\n                }\n            }\n        }\n        if (common\
    \ == common2) {\n            for (long i : l1) {\n                result.add(i);\n\
    \            }\n        } else {\n            for (long i : l2) {\n          \
    \      result.add(i);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashMap<Long, Long> map = new HashMap<>();\n        for (Long i : l1)\
    \ {\n            map.put(i, i);\n        }\n        for (Long i : l2) {\n    \
    \        if (map.containsKey(i)) {\n                result.add(map.get(i));\n\
    \                map.remove(i);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Set<Long> common = new HashSet<>();\n        for (Long l : set1) {\n   \
    \         if (set2.contains(l)) {\n                common.add(l);\n          \
    \  }\n        }\n        for (Long l : set2) {\n            if (!common.contains(l))\
    \ {\n                result.add(l);\n            }\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Set<Long> common = new HashSet<>();\n        common.addAll(set1);\n    \
    \    common.addAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        result.addAll(common);\n        return result;\n", "        ArrayList<Long>\
    \ common = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> commonSet = new\
    \ HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                commonSet.add(i);\n            }\n        }\n        for\
    \ (Long i : set2) {\n            if (!set1.contains(i)) {\n                commonSet.add(i);\n\
    \            }\n        }\n        for (Long i : commonSet) {\n            common.add(i);\n\
    \        }\n        return common;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 =\
    \ new HashSet<>(l2);\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        common.removeAll(l1);\n\
    \        common.removeAll(l2);\n        result.addAll(common);\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 = new\
    \ HashSet<>(l2);\n        for(Long val : set1) {\n            if(set2.contains(val))\
    \ {\n                result.add(val);\n                set1.remove(val);\n   \
    \             set2.remove(val);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next()\
    \ == it2.next()) {\n                result.add(it1.next());\n            }\n \
    \       }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (result.contains(a)) {\n                it1.remove();\n             \
    \   it2.remove();\n            } else if (result.contains(b)) {\n            \
    \    it2.remove();\n            } else {\n                result.add(a);\n   \
    \             result.add(b);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        for(long i : l1) {\n  \
    \          for(long j : l2) {\n                if(i == j) continue;\n        \
    \        if(i == j) common++;\n                if(i == j) break;\n           \
    \     if(i>j) max = i;\n                else if(j>i) min = j;\n            }\n\
    \        }\n        for(long i : l2) {\n            for(long j : l1) {\n     \
    \           if(i == j) continue;\n                if(i == j) common++;\n     \
    \           if(i == j) break;\n                if(i>j) max = i;\n            \
    \    else if(j>i) min = j;\n            }\n        }\n        for(long i : l1)\
    \ {\n            for(long j : l2) {\n                if(i == j) continue;\n  \
    \              if(i == j) common++;\n                if(i == j) break;\n     \
    \           if(i>j) max = i;\n                else if(j>i) min = j;\n        \
    \    }\n        }\n        for(long i : l2) {\n            for(long j : l1) {\n\
    \                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) max = i;\n       \
    \         else if(j>i) min = j;\n            }\n        }\n        for(long i\
    \ : l1) {\n            for(long j : l2) {\n                if(i == j) continue;\n\
    \                if(i == j) common++;\n                if(i == j) break;\n   \
    \             if(i>j) max = i;\n                else if(j>i) min = j;\n      \
    \      }\n        }\n        for(long i : l2) {\n            for(long j : l1)\
    \ {\n                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) max = i;\n       \
    \         else if(j>i) min = j;\n            }\n        }\n        for(long i\
    \ : l1) {\n            for(long j : l2) {\n                if(i == j) continue;\n\
    \                if(i == j) common++;\n                if(i == j) break;\n   \
    \             if(i>j) max = i;\n                else if(j>i) min = j;\n      \
    \      }\n        }\n        for(long i : l2) {\n            for(long j : l1)\
    \ {\n                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n              \
    \  it1.remove();\n                it2.remove();\n            } else if (i1 < i2)\
    \ {\n                it1.remove();\n            } else {\n                it2.remove();\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n              \
    \  it1.remove();\n                it2.remove();\n            }\n        }\n  \
    \      return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next()\
    \ == it2.next()) {\n                result.add(it1.next());\n            }\n \
    \       }\n        return result;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 =\
    \ new HashSet<>(l2);\n        for(Long i : set1) {\n            if(set2.contains(i))\
    \ {\n                result.add(i);\n                set1.remove(i);\n       \
    \         set2.remove(i);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long i : set1) {\n            if(set2.contains(i)) {\n              \
    \  result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        HashSet<Long> set1 = new HashSet<>(l1);\n\
    \        HashSet<Long> set2 = new HashSet<>(l2);\n        for(Long i : set1) {\n\
    \            if(set2.contains(i)) {\n                result.add(i);\n        \
    \        set1.remove(i);\n                set2.remove(i);\n            }\n   \
    \     }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long common = 0;\n        long min1 = Long.MAX_VALUE, min2 = Long.MAX_VALUE;\n\
    \        for (long i : l1) {\n            if (min1 < i) {\n                min1\
    \ = i;\n            }\n        }\n        for (long i : l2) {\n            if\
    \ (min2 < i) {\n                min2 = i;\n            }\n        }\n        for\
    \ (long i : l1) {\n            for (long j : l2) {\n                if (i == j)\
    \ {\n                    common++;\n                }\n            }\n       \
    \ }\n        for (long i : l1) {\n            if (min1 < i) {\n              \
    \  result.add(min1);\n            }\n        }\n        for (long i : l2) {\n\
    \            if (min2 < i) {\n                result.add(min2);\n            }\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next()\
    \ == it2.next()) {\n                result.add(it1.next());\n            }\n \
    \       }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashSet<Long> h1 = new HashSet<>(l1);\n        HashSet<Long> h2 = new\
    \ HashSet<>(l2);\n        h1.removeAll(h2);\n        h2.removeAll(h1);\n     \
    \   result.addAll(h1);\n        result.addAll(h2);\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Set<Long> common = new HashSet<>();\n        for (Long i : set1) {\n\
    \            if (set2.contains(i)) {\n                common.add(i);\n       \
    \     }\n        }\n        for (Long i : set2) {\n            if (!set1.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : common) {\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next()\
    \ != it2.next()) {\n                result.add(it1.next());\n            }\n \
    \       }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a != b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n", "     \
    \   ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> set1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n      \
    \  common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long num : set1) {\n            if(set2.contains(num)) {\n      \
    \          result.add(num);\n                set1.remove(num);\n             \
    \   set2.remove(num);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (i1 > i2) result.add(i1);\n            else if (i1 < i2) result.add(i2);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long i : set1) {\n            if(set2.contains(i)) {\n          \
    \      result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            if (it1.next() == it2.next()) {\n            \
    \    result.add(it1.next());\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ set1 = new HashSet<Long>(l1);\n        HashSet<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long common = 0;\n        long max = 0;\n        long min = 0;\n    \
    \    for(long i : l1) {\n            for(long j : l2) {\n                if(i\
    \ == j) {\n                    common++;\n                    if(common > max)\
    \ {\n                        max = common;\n                    }\n          \
    \          if(common < min) {\n                        min = common;\n       \
    \             }\n                }\n            }\n        }\n        for(long\
    \ i : l1) {\n            for(long j : l2) {\n                if(i == j) {\n  \
    \                  common++;\n                    if(common > max) {\n       \
    \                 max = common;\n                    }\n                    if(common\
    \ < min) {\n                        min = common;\n                    }\n   \
    \             }\n            }\n        }\n        for(long i : l1) {\n      \
    \      for(long j : l2) {\n                if(i == j) {\n                    common++;\n\
    \                    if(common > max) {\n                        max = common;\n\
    \                    }\n                    if(common < min) {\n             \
    \           min = common;\n                    }\n                }\n        \
    \    }\n        }\n        for(long i : l1) {\n            for(long j : l2) {\n\
    \                if(i == j) {\n                    common++;\n               \
    \     if(common > max) {\n                        max = common;\n            \
    \        }\n                    if(common < min) {\n                        min\
    \ = common;\n                    }\n                }\n            }\n       \
    \ }\n        for(long i : l1) {\n            for(long j : l2) {\n            \
    \    if(i == j) {\n                    common++;\n                    if(common\
    \ > max) {\n                        max = common;\n                    }\n   \
    \                 if(common < min) {\n                        min = common;\n\
    \                    }\n                }\n            }\n        }\n        for(long\
    \ i : l1) {\n            for(long j : l2) {\n                if(i == j) {\n  \
    \                  common++;\n                    if(common > max) {\n       \
    \                 max = common;\n                    }\n                    if(common\
    \ < min) {\n                        min = common;\n                    }\n   \
    \             }\n            }\n        }\n        for(long i : l1) {\n      \
    \      for(long j : l2) {\n                if(i == j) {\n                    common++;\n\
    \                    if(common > max) {\n                        max = common;\n\
    \                    }\n                    if(common < min) {\n             \
    \           min = common;\n                    }\n                }\n        \
    \    }\n        }\n        for(long i : l1) {\n            for(long j : l2) {\n\
    \                if(i == j) {\n                    common++;\n               \
    \     if(common > max) {\n                        max = common;\n            \
    \        }\n                    if(common < min) {\n                        min\
    \ = common;\n                    }\n                }\n            }\n       \
    \ }\n        for(long i : l1) {\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Set<Long> commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n\
    \        commonSet.addAll(set2);\n        commonSet.removeAll(set1);\n       \
    \ commonSet.removeAll(set2);\n        commonSet.removeAll(common);\n        common.addAll(commonSet);\n\
    \        Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ common = new ArrayList<Long>();\n        HashSet<Long> set1 = new HashSet<Long>(l1);\n\
    \        HashSet<Long> set2 = new HashSet<Long>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long i : set1) {\n            if(set2.contains(i)) {\n             \
    \   result.add(i);\n            }\n        }\n        return result;\n", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long common = 0;\n        for (long i : l1) {\n            if (l2.contains(i))\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (l1.contains(i)) {\n                common++;\n    \
    \        }\n        }\n        if (common == 0) {\n            return result;\n\
    \        }\n        for (long i : l1) {\n            if (l2.contains(i)) {\n \
    \               result.add(i);\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (l1.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long a = it1.next();\n            Long b = it2.next();\n\
    \            if (a == b) continue;\n            if (result.contains(a)) {\n  \
    \              it1.remove();\n                it2.remove();\n            } else\
    \ {\n                result.add(a);\n            }\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long val : set1) {\n            if(set2.contains(val)) {\n         \
    \       result.add(val);\n                set1.remove(val);\n                set2.remove(val);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long a = it1.next();\n            Long b = it2.next();\n\
    \            if (a == b) continue;\n            if (result.contains(a)) {\n  \
    \              it1.remove();\n                it2.remove();\n            } else\
    \ {\n                result.add(a);\n            }\n        }\n        return\
    \ result;\n", "        ArrayList<Long> common = new ArrayList<>();\n        ArrayList<Long>\
    \ l3 = new ArrayList<>();\n        ArrayList<Long> l4 = new ArrayList<>();\n \
    \       ArrayList<Long> l5 = new ArrayList<>();\n        ArrayList<Long> l6 =\
    \ new ArrayList<>();\n        ArrayList<Long> l7 = new ArrayList<>();\n      \
    \  ArrayList<Long> l8 = new ArrayList<>();\n        ArrayList<Long> l9 = new ArrayList<>();\n\
    \        ArrayList<Long> l10 = new ArrayList<>();\n        ArrayList<Long> l11\
    \ = new ArrayList<>();\n        ArrayList<Long> l12 = new ArrayList<>();\n   \
    \     ArrayList<Long> l13 = new ArrayList<>();\n        ArrayList<Long> l14 =\
    \ new ArrayList<>();\n        ArrayList<Long> l15 = new ArrayList<>();\n     \
    \   ArrayList<Long> l16 = new ArrayList<>();\n        ArrayList<Long> l17 = new\
    \ ArrayList<>();\n        ArrayList<Long> l18 = new ArrayList<>();\n        ArrayList<Long>\
    \ l19 = new ArrayList<>();\n        ArrayList<Long> l20 = new ArrayList<>();\n\
    \        ArrayList<Long> l21 = new ArrayList<>();\n        ArrayList<Long> l22\
    \ = new ArrayList<>();\n        ArrayList<Long> l23 = new ArrayList<>();\n   \
    \     ArrayList<Long> l24 = new ArrayList<>();\n        ArrayList<Long> l25 =\
    \ new ArrayList<>();\n        ArrayList<Long> l26 = new ArrayList<>();\n     \
    \   ArrayList<Long> l27 = new ArrayList<>();\n        ArrayList<Long> l28 = new\
    \ ArrayList<>();\n        ArrayList<Long> l29 = new ArrayList<>();\n        ArrayList<Long>\
    \ l30 = new ArrayList<>();\n        ArrayList<Long> l31 = new ArrayList<>();\n\
    \        ArrayList<Long> l32 = new ArrayList<>();\n        ArrayList<Long> l33\
    \ = new ArrayList<>();\n        ArrayList<Long> l34 = new ArrayList<>();\n   \
    \     ArrayList<Long> l35 = new ArrayList<>();\n        ArrayList<Long> l36 =\
    \ new ArrayList<>();\n        ArrayList<Long> l37 = new ArrayList<>();\n     \
    \   ArrayList<Long> l38 = new ArrayList<>();\n        ArrayList<Long> l39 = new\
    \ ArrayList<>();\n        ArrayList<Long> l40 = new ArrayList<>();\n        ArrayList<Long>\
    \ l41 = new ArrayList<>();\n        ArrayList<Long> l42 = new ArrayList<>();\n\
    \        ArrayList<Long> l43 = new ArrayList<>();\n        ArrayList<Long> l44\
    \ = new ArrayList<>();\n        ArrayList<Long> l45 = new ArrayList<>();\n   \
    \     ArrayList<Long> l46 = new ArrayList<>();\n        ArrayList<Long> l47 =\
    \ new ArrayList<>();\n        ArrayList<Long> l48 = new ArrayList<>();\n     \
    \   ArrayList<Long> l49 = new ArrayList<>();\n        ArrayList<Long> l50 = new\
    \ ArrayList<>();\n        ArrayList<Long> l51 = new ArrayList<>();\n        ArrayList<Long>\
    \ l52 = ", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long i : set1) {\n            if(set2.contains(i)) {\n             \
    \   result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ common = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> commonSet = new\
    \ HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                commonSet.add(i);\n            }\n        }\n        for\
    \ (Long i : set2) {\n            if (!commonSet.contains(i)) {\n             \
    \   common.add(i);\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 =\
    \ new HashSet<>(l2);\n        for(Long num : set1) {\n            if(set2.contains(num))\
    \ {\n                result.add(num);\n                set1.remove(num);\n   \
    \             set2.remove(num);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n        commonSet.addAll(set2);\n\
    \        commonSet.removeAll(set1);\n        commonSet.removeAll(set2);\n    \
    \    commonSet.removeAll(common);\n        commonSet.addAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.remove", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        HashMap<Long, Long> map = new HashMap<>();\n\
    \        for (Long i : l1) {\n            if (map.containsKey(i)) {\n        \
    \        map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i,\
    \ 1);\n            }\n        }\n        for (Long i : l2) {\n            if (map.containsKey(i))\
    \ {\n                map.put(i, map.get(i) - 1);\n            } else {\n     \
    \           map.put(i, -1);\n            }\n        }\n        for (Long i : map.keySet())\
    \ {\n            if (map.get(i) == 0) {\n                result.add(i);\n    \
    \        }\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        for(Long num : set1) {\n            if(set2.contains(num))\
    \ {\n                result.add(num);\n                set1.remove(num);\n   \
    \             set2.remove(num);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max1 = 0, max2 = 0;\n        for (long i : l1) {\n            if\
    \ (l2.contains(i)) {\n                common += i;\n                max1 = Math.max(max1,\
    \ i);\n            }\n        }\n        for (long i : l2) {\n            if (l1.contains(i))\
    \ {\n                common += i;\n                max2 = Math.max(max2, i);\n\
    \            }\n        }\n        if (max1 == max2) {\n            result.add(common);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        Set<Long> commonSet = new HashSet<Long>(set1);\n        commonSet.removeAll(set2);\n\
    \        commonSet.removeAll(set1);\n        common.addAll(commonSet);\n     \
    \   Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n\
    \        Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n              \
    \  it1.remove();\n                it2.remove();\n            }\n        }\n  \
    \      return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long common = 0;\n        for (long i : l1) {\n            if (l2.contains(i))\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (l1.contains(i)) {\n                common++;\n    \
    \        }\n        }\n        if (common == 0) {\n            return result;\n\
    \        }\n        for (long i : l1) {\n            if (l2.contains(i)) {\n \
    \               result.add(i);\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (l1.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        Iterator<Long> it1 = set1.iterator();\n \
    \       Iterator<Long> it2 = set2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) continue;\n            if (result.contains(i1) || result.contains(i2))\
    \ continue;\n            result.add(i1);\n            result.add(i2);\n      \
    \  }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashMap<Long, Long> map = new HashMap<>();\n        for (Long i : l1)\
    \ {\n            map.put(i, i);\n        }\n        for (Long i : l2) {\n    \
    \        if (map.containsKey(i)) {\n                result.add(map.get(i));\n\
    \                map.remove(i);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long common = 0;\n        long max = 0;\n        for (long i : l1) {\n\
    \            for (long j : l2) {\n                if (i == j) {\n            \
    \        common++;\n                }\n                if (common > max) {\n \
    \                   max = common;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \       if (common > max) {\n                    max = common;\n             \
    \   }\n            }\n        }\n        for (long i : l1) {\n            for\
    \ (long j : l2) {\n                if (i == j) {\n                    common++;\n\
    \                }\n                if (common > max) {\n                    max\
    \ = common;\n                }\n            }\n        }\n        for (long i\
    \ : l1) {\n            for (long j : l2) {\n                if (i == j) {\n  \
    \                  common++;\n                }\n                if (common >\
    \ max) {\n                    max = common;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \                if (common > max) {\n                    max = common;\n    \
    \            }\n            }\n        }\n        for (long i : l1) {\n      \
    \      for (long j : l2) {\n                if (i == j) {\n                  \
    \  common++;\n                }\n                if (common > max) {\n       \
    \             max = common;\n                }\n            }\n        }\n   \
    \     for (long i : l1) {\n            for (long j : l2) {\n                if\
    \ (i == j) {\n                    common++;\n                }\n             \
    \   if (common > max) {\n                    max = common;\n                }\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n                if (common > max) {\n                    max\
    \ = common;\n                }\n            }\n        }\n        for (long i\
    \ : l1) {\n            for (long j : l2) {\n                if (i == j) {\n  \
    \                  common++;\n                }\n                if (common >\
    \ max) {\n                    max = common;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \                if (common > max) {\n                    max = common;\n    \
    \            }\n            }\n        }\n        for (long i : l1) {\n      \
    \      for (long j : l2) {\n                if (i == j) {\n                  \
    \  common++;\n                }\n                if (common > max) {\n       \
    \             max = common;\n                }\n            }\n        }\n   \
    \     for (long i : l1) {\n            for (long j : l2) {\n                if\
    \ (i == j) {\n                    common++;\n                }\n             \
    \   if (common > max) {\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> common = new ArrayList<Long>();\n\
    \        Set<Long> set1 = new HashSet<Long>(l1);\n        Set<Long> set2 = new\
    \ HashSet<Long>(l2);\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        Collections.sort(common);\n        return common;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n\
    \        for (Long i : set1) {\n            if (set2.contains(i)) {\n        \
    \        common.add(i);\n            }\n        }\n        for (Long i : set2)\
    \ {\n            if (!set1.contains(i)) {\n                common.add(i);\n  \
    \          }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a > b) {\n                it1.remove();\n\
    \            } else {\n                it2.remove();\n            }\n        }\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        for(Long i : set1) {\n            if(set2.contains(i)) {\n          \
    \      result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        HashSet<Long> h1 = new HashSet<>(l1);\n\
    \        HashSet<Long> h2 = new HashSet<>(l2);\n        Iterator<Long> it1 = h1.iterator();\n\
    \        Iterator<Long> it2 = h2.iterator();\n        while (it1.hasNext() &&\
    \ it2.hasNext()) {\n            Long i1 = it1.next();\n            Long i2 = it2.next();\n\
    \            if (i1 == i2) {\n                result.add(i1);\n            }\n\
    \        }\n        return result;\n", "        ArrayList<Long> common = new ArrayList<Long>();\n\
    \        HashSet<Long> h1 = new HashSet<Long>(l1);\n        HashSet<Long> h2 =\
    \ new HashSet<Long>(l2);\n        h1.retainAll(h2);\n        common.addAll(h1);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        HashSet<Long> set1 = new HashSet<>(l1);\n\
    \        HashSet<Long> set2 = new HashSet<>(l2);\n        Iterator<Long> it1 =\
    \ set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n        while\
    \ (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n     \
    \       Long b = it2.next();\n            if (a == b) {\n                result.add(a);\n\
    \            } else if (a > b) {\n                it1.remove();\n            }\
    \ else {\n                it2.remove();\n            }\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n   \
    \     for(Long i : set1) {\n            if(set2.contains(i)) {\n             \
    \   result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n \
    \       Set<Long> set2 = new HashSet<>(l2);\n        for(Long i : set1) {\n  \
    \          if(set2.contains(i)) {\n                result.add(i);\n          \
    \      set1.remove(i);\n                set2.remove(i);\n            }\n     \
    \   }\n        return result;\n", "        ArrayList<Long> common = new ArrayList<>();\n\
    \        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long common = 0;\n        long max = 0;\n        long min = 0;\n    \
    \    long sum = 0;\n        long count = 0;\n        long sum1 = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5\
    \ = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n\
    \        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n  \
    \      long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n   \
    \     long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n    \
    \    long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n     \
    \   long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n      \
    \  long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n       \
    \ long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long\
    \ sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33\
    \ = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 =\
    \ 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n\
    \        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n \
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n  \
    \      long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n   \
    \     long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n    \
    \    long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n     \
    \   long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n      \
    \  long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n       \
    \ long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long\
    \ sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long sum67\
    \ = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70 =\
    \ 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n\
    \        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n \
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n  \
    \      long sum80 = 0;\n        long sum81", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Set<Long> set1 = new HashSet<>(l1);\n        Set<Long>\
    \ set2 = new HashSet<>(l2);\n        Set<Long> common = new HashSet<>();\n   \
    \     for (Long i : set1) {\n            if (set2.contains(i)) {\n           \
    \     common.add(i);\n            }\n        }\n        for (Long i : set2) {\n\
    \            if (!set1.contains(i)) {\n                common.add(i);\n      \
    \      }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashSet<Long> set1 = new HashSet<>(l1);\n        HashSet<Long> set2 =\
    \ new HashSet<>(l2);\n        for(Long val : set1) {\n            if(set2.contains(val))\
    \ {\n                result.add(val);\n                set1.remove(val);\n   \
    \             set2.remove(val);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 =\
    \ new HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : ", " \
    \       ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

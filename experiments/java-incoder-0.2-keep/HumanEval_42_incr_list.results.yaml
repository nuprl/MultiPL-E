name: HumanEval_42_incr_list
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().map(l -> l+1).collect(Collectors.toCollection(ArrayList::new));\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptt9pzn6e.java:15: error: variable l is already defined in method\
    \ incrList(ArrayList<Long>)\n        l.stream().map(l -> l+1).collect(Collectors.toCollection(ArrayList::new));\n\
    \                       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> r = new ArrayList<>();\n\
    \        for(Long i : l) {\n            r.add(i + 1);\n        }\n        return\
    \ r;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x+1));\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprcbezdlk.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmprcbezdlk.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().map(x -> x + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvkxg9akm.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        for(Long i : l) {\n            res.add(i + 1);\n        }\n        return\
    \ res;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        l.stream().forEach(x -> res.add(x + 1));\n        return res;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().map(x -> x + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvy_74wbc.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        l.forEach(x -> res.add(x + 1));\n        return res;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \          result.add(sum);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_mtvdnwi.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> r = new ArrayList<>();\n\
    \        for (Long i : l) {\n            r.add(i + 1);\n        }\n        return\
    \ r;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> r = new ArrayList<>();\n\
    \        for (long e : l) {\n            r.add(e + 1);\n        }\n        return\
    \ r;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(long e : l) {\n            result.add(e + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> r = new ArrayList<>();\n\
    \        l.stream().forEach(e -> r.add(e + 1));\n        return r;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \          result.add(sum);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps0b7xgbk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(result.size() + 1);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcbh5ez_d.java:17: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(result.size() + 1);\n                      \
    \               ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.forEach(x -> {\n            l.add(x+1);\n\
    \        });\n        return l;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1513)\n\tat Problem.incrList(tmpzxwr1p5o.java:15)\n\
    \tat Problem.main(tmpzxwr1p5o.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw0c93li4.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpw0c93li4.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(result.size() + 1);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpskjhh_19.java:17: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(result.size() + 1);\n                      \
    \               ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().map(l -> l+1).collect(Collectors.toCollection(ArrayList::new));\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr44qxea3.java:15: error: variable l is already defined in method\
    \ incrList(ArrayList<Long>)\n        l.stream().map(l -> l+1).collect(Collectors.toCollection(ArrayList::new));\n\
    \                       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x+1));\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(long e : l) {\n            result.add(e + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x+1));\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(e -> result.add(e + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().map(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_3da46c.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(result.size() + 1);\n    \
    \    }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2mohpmnx.java:17: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(result.size() + 1);\n                      \
    \               ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        l.stream().forEach(x -> res.add(x + 1));\n        return res;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> r = new ArrayList<>();\n\
    \        for (Long i : l) {\n            r.add(i + 1);\n        }\n        return\
    \ r;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \          result.add(sum);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1zld_n3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        l.stream().forEach(x -> res.add(x+1));\n        return res;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \          result.add(sum);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdik_awch.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long e : l) {\n            result.add(e + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \          result.add(sum);\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2v9cgse6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach((x) -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa_dq6zo0.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpa_dq6zo0.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzau_yru6.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpzau_yru6.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> r = new ArrayList<>();\n\
    \        for(Long i : l) {\n            r.add(i + 1);\n        }\n        return\
    \ r;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().map(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvc_q8ttq.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_o7e83ip.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmp_o7e83ip.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.forEach(x -> {\n            l.add(x);\n\
    \        });\n        return l;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1513)\n\tat Problem.incrList(tmpcufxptgh.java:15)\n\
    \tat Problem.main(tmpcufxptgh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(x -> x + 1L).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq723gj5x.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(x -> x + 1L).collect(Collectors.toList());\n\
    \                                         ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpq723gj5x.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(x -> x + 1L).collect(Collectors.toList());\n\
    \                                                 ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpahi3wxqn.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpahi3wxqn.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(e -> result.add(e + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long e : l) {\n            result.add(e + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.forEach(x -> {\n            l.add(x+1);\n\
    \        });\n        return l;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1513)\n\tat Problem.incrList(tmp7g89l9x5.java:15)\n\
    \tat Problem.main(tmp7g89l9x5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(long i : l) {\n            result.add(i+1);\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(x -> x + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp00rgzksc.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(x -> x + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmp00rgzksc.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(x -> x + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(x -> result.add(x + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \        return l;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgsrxosox.java:15: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                        ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpgsrxosox.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        l.stream().mapToLong(i -> i + 1).collect(Collectors.toList());\n\
    \                                                ^\n    (argument mismatch; no\
    \ instance(s) of type variable(s) CAP#1,T exist so that Collector<T,?,List<T>>\
    \ conforms to Supplier<R>)\n  where R,T are type-variables:\n    R extends Object\
    \ declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (Long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(x -> result.add(x + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long i : l) {\n            res.add(i + 1);\n        }\n        return\
    \ res;\n\n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.stream().forEach(e -> result.add(e + 1));\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Long i : l) {\n            result.add(i + 1);\n        }\n      \
    \  return result;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for (long i : l) {\n            result.add(i + 1);\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l)))));\n    assert(incrList((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)2l, (long)5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)3l, (long)6l, (long)3l, (long)4l, (long)4l, (long)10l, (long)1l, (long)124l)))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        l.forEach(x -> res.add(x + 1));\n        return res;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list with elements incremented by 1.\n    // >>>\
    \ incr_list([1, 2, 3])\n    // [2, 3, 4]\n    // >>> incr_list([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123])\n    // [6, 4, 6, 3, 4, 4, 10, 1, 124]\n    public static ArrayList<Long>\
    \ incrList(ArrayList<Long> l) {\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        l.forEach(e -> result.add(e + 1));\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(incrList((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l,\
    \ (long)2l)))));\n    assert(incrList((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)2l, (long)5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)3l, (long)6l, (long)3l, (long)4l,\
    \ (long)4l, (long)10l, (long)1l, (long)124l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

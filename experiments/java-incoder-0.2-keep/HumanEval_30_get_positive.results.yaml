name: HumanEval_30_get_positive
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5rx3mzk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> positive.add(x));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqxgbzx29.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxc66cp4x.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3q_t_5ja.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7l7kgreh.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgoet9qh.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0c08fbml.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long i : l) {\n            if (i >= 0)\
    \ {\n                res.add(i);\n            }\n        }\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xfa_10g.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long i : l) {\n            if (i >= 0)\
    \ {\n                res.add(i);\n            }\n        }\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzj1afqe.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadqn__jq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdbuu_xt9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppur1zk0t.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> positive.add(x));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnkx0rwq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9szadsim.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo0p42l24.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbj_1rkzp.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(n -> n > 0).forEach(n\
    \ -> positive.add(n));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdvs1zepy.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwj0su97v.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwx_26p5a.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb1p_g7y.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ap4fy22.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88todozi.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnitko6ii.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp461dxt8_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprawj5l6t.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy2lhwiy7.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzry2dmj.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgdn0lfx.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyt324aw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqp7i_2w.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5_o4tac2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplmqulcsh.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7v5inx1_.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5uiy3x4.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0ttkrj4.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj35kl685.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz47gu8em.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long i : l) {\n            if (i >= 0)\
    \ {\n                res.add(i);\n            }\n        }\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_opre5gp.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyh0t1tt9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfj78gga2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg09oepoy.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpym08lu84.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprkzxa6u2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjzl0rwuv.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfhijnfi9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeccztiun.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoanuupmg.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyoaidhei.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprnnifd77.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbvyapr3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9dbaf4v.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ml3evuf.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(n -> n > 0).forEach(n\
    \ -> positive.add(n));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> positive.add(x));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6886symq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjst23k2w.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_ydmtia.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvaen4cf6.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmposlx5flm.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcki3lqic.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzaadun8t.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuhmj1rig.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nwe9jk3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmkclolb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0L).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdh59i2ob.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpav6sxqkr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprx7_d9me.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2mf4ec8.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(Long i : l) {\n            if(i >=\
    \ 0) result.add(i);\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptwjqmsw2.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwq8r_8o.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphco93bu1.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyk7zf6fs.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gwjhblk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx68u2nym.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjcqs4mzm.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnt69prmf.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08pocg6m.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyribl8x8.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21r8jc69.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvz22esgr.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x > 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcovj0zt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn26meynz.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1ly8lew.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54_ta6u1.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4h8tgh7o.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsl7669w.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61xhegrl.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphnw0qp6v.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pvwhihh.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5p4dlz5.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj6uql_gb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvn9569i_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps3x2929a.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0v3hnit6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_ijlagm.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> positive.add(x));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoyejicwe.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvsuj69x.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph0nrmog4.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7o6uj2zu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2cwe6yc.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv8h46bs.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpro9ejexa.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprpcqwpqb.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfd3z6nky.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2cibiwz.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3b2_0ofd.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41hj8u4e.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pmzb_0k.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyj4cuiug.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcx6nijo7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3d27_pl.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwrbvrdk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7hwwl23.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99xs_lo5.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvutnu4_y.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(n -> n > 0).forEach(n\
    \ -> positive.add(n));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(x -> x > 0).forEach(x\
    \ -> positive.add(x));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long i : l) {\n            if (i >= 0)\
    \ {\n                res.add(i);\n            }\n        }\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20fmeuri.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgwc4_z1c.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_9ttv3k.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgajg3e9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprrgcrkxu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmdt0o8d.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplivgeexc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5ayma1r.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivaxvxss.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_mje8h0k.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long i : l) {\n            if (i >= 0)\
    \ {\n                res.add(i);\n            }\n        }\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17ov74nq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5a105vx0.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfz2b00zg.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9c2z1w79.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2ny2b93.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdarmpikl.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptbdlb41m.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2a_znpw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkogw5wlq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw62cj9nl.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2n_fh7ly.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8cvakmyn.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7k1e8jt6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(Long i : l) {\n            if(i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp899kygs2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61g9gs58.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc3cprrs4.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36e5sl0g.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdhj01xh4.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwr2f_5qp.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpelxjfer0.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpek2yh7dt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqeofs1b7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5kjyjcs.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8arz2pxy.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9wnss2fh.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkeh3cne2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfe8jb2h.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjkq7k8_3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebmy8q60.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubvldmvu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(x -> x > 0).forEach(x\
    \ -> positive.add(x));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkarks23k.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdc8vhee1.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xltqtj3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplj7ao7l2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5e_4nrwx.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4cmdirw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgqdi8phn.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6u5yg4lj.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_kr1hyt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7v7l47cv.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphqojwhtb.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0L).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbtk_3nic.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdzndwkh.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcimxmrrr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfg28dd2_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw4983qvu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxbgd_i0c.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpym_yb315.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9tca092.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2n38971.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8yrki7k0.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_3th4cq5.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5flz9af3.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fwagh7a.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcicav1f4.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x >= 0).forEach(x\
    \ -> result.add(x));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4j_3klia.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkalk1t26.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3744ic4x.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(Long i : l) {\n            if(i >=\
    \ 0) result.add(i);\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gq3uq5j.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7274ijb2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_xkt2tdf.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8k2q9uj9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_l0lkd6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> result.add(i));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt0xsc6m.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long i : l) {\n            if (i >= 0)\
    \ {\n                res.add(i);\n            }\n        }\n        return res;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1fki_egc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        l.stream().filter(i -> i >= 0).forEach(i\
    \ -> positive.add(i));\n        return positive;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8x_92iox.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaj1p7che.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2z28e4p.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptfvbvsy3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdem9l9sp.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the list.\n    // >>>\
    \ get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0) {\n                positive.add(i);\n            }\n        }\n      \
    \  return positive;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeth9krwz.java:26)\n"
  exit_code: 1
  status: Exception

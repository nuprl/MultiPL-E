name: HumanEval_145_order_by_points
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8rsxcdn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1xn73au.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53c7b1nj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqo7hj8wd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58r414ol.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiyugaob0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3hngaiqn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6oxl6lia.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdrtkd1y.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6saphe3.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kf7s3_j.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pnrri_a.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3h3y36c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = Long.MIN_VALUE;\n        long maxIndex = -1;\n        for\
    \ (long num : nums) {\n            sum += num;\n            if (sum > maxSum)\
    \ {\n                maxSum = sum;\n                maxIndex = num;\n        \
    \    }\n        }\n        result.add(maxIndex);\n        sum = 0;\n        for\
    \ (long num : nums) {\n            sum += num;\n            if (sum > maxSum)\
    \ {\n                maxSum = sum;\n                maxIndex = num;\n        \
    \    }\n        }\n        result.add(maxIndex);\n        return result;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpike7ot.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        long maxIndex = 0;\n        for(long num :\
    \ nums) {\n            sum += num;\n            if(sum > maxSum) {\n         \
    \       maxSum = sum;\n                maxIndex = num;\n            }\n      \
    \  }\n        for(long num : nums) {\n            if(num == maxIndex) {\n    \
    \            result.add(num);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpna2cwqwu.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrhmdagi.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbvlycvhp.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0t08ouum.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_0o60op.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_uvt7mjy.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        for (long num : nums) {\n            sum +=\
    \ num;\n            if (sum > maxSum) {\n                maxSum = sum;\n     \
    \       }\n        }\n        long maxSumIndex = 0;\n        for (long num : nums)\
    \ {\n            sum += num;\n            if (sum == maxSum) {\n             \
    \   result.add(num);\n                maxSumIndex++;\n            }\n        }\n\
    \        Collections.sort(result);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk90db4uj.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl3g2kb0c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprv5z2yn0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptya1x6yn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdjp9qm9_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzx9kk8y.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwqdbk7h.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpso8yb5ul.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjasxsvbc.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        long maxSumIndex = 0;\n        long maxSumPoint\
    \ = 0;\n        long maxSumPointIndex = 0;\n        long maxSumPointIndex2 = 0;\n\
    \        long maxSumPointIndex3 = 0;\n        long maxSumPointIndex4 = 0;\n  \
    \      long maxSumPointIndex5 = 0;\n        long maxSumPointIndex6 = 0;\n    \
    \    long maxSumPointIndex7 = 0;\n        long maxSumPointIndex8 = 0;\n      \
    \  long maxSumPointIndex9 = 0;\n        long maxSumPointIndex10 = 0;\n       \
    \ long maxSumPointIndex11 = 0;\n        long maxSumPointIndex12 = 0;\n       \
    \ long maxSumPointIndex13 = 0;\n        long maxSumPointIndex14 = 0;\n       \
    \ long maxSumPointIndex15 = 0;\n        long maxSumPointIndex16 = 0;\n       \
    \ long maxSumPointIndex17 = 0;\n        long maxSumPointIndex18 = 0;\n       \
    \ long maxSumPointIndex19 = 0;\n        long maxSumPointIndex20 = 0;\n       \
    \ long maxSumPointIndex21 = 0;\n        long maxSumPointIndex22 = 0;\n       \
    \ long maxSumPointIndex23 = 0;\n        long maxSumPointIndex24 = 0;\n       \
    \ long maxSumPointIndex25 = 0;\n        long maxSumPointIndex26 = 0;\n       \
    \ long maxSumPointIndex27 = 0;\n        long maxSumPointIndex28 = 0;\n       \
    \ long maxSumPointIndex29 = 0;\n        long maxSumPointIndex30 = 0;\n       \
    \ long maxSumPointIndex31 = 0;\n        long maxSumPointIndex32 = 0;\n       \
    \ long maxSumPointIndex33 = 0;\n        long maxSumPointIndex34 = 0;\n       \
    \ long maxSumPointIndex35 = 0;\n        long maxSumPointIndex36 = 0;\n       \
    \ long maxSumPointIndex37 = 0;\n        long maxSumPointIndex38 = 0;\n       \
    \ long maxSumPointIndex39 = 0;\n        long maxSumPointIndex40 = 0;\n       \
    \ long maxSumPointIndex41 = 0;\n        long maxSumPointIndex42 = 0;\n       \
    \ long maxSumPointIndex43 = 0;\n        long maxSumPointIndex44 = 0;\n       \
    \ long maxSumPointIndex45 = 0;\n        long maxSumPointIndex46 = 0;\n       \
    \ long maxSumPointIndex47 = 0;\n        long maxSumPointIndex48 = 0;\n       \
    \ long maxSumPointIndex49 = 0;\n        long maxSumPointIndex50 = 0;\n       \
    \ long maxSumPointIndex51 = 0;\n        long maxSumPointIndex52 = 0;\n       \
    \ long maxSumPointIndex53 = 0;\n        long maxSumPointIndex\n    }\n    public\
    \ static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp9t5pdszf.java:75: error: ';' expected\n        long maxSumPointIndex\n\
    \                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyazdzda0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw16ug98p.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdkbzgn3m.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr19jj1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nz5enb6.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35x01yc2.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpomdq1vwm.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdti897ks.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1m4ix1dl.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp40fotg7a.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhtlo9jd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5wkt135e.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprownbqw7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        long maxIndex = 0;\n        for(long num :\
    \ nums) {\n            sum += num;\n            if(sum > maxSum) {\n         \
    \       maxSum = sum;\n                maxIndex = num;\n            }\n      \
    \  }\n        for(long num : nums) {\n            if(num == maxIndex) {\n    \
    \            result.add(num);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6wi6bcth.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps83wxtp8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxrh2dcee.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq8p_zha.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjbhbq2y.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr4eb54vj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hx3g6n9.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        for (long num : nums) {\n            sum +=\
    \ num;\n            if (sum > maxSum) {\n                maxSum = sum;\n     \
    \       }\n        }\n        for (long num : nums) {\n            sum += num;\n\
    \            if (sum == maxSum) {\n                result.add(num);\n        \
    \    }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67gnw6y_.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppb9sjz9c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6aa4tirw.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zxt13nj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkid_z67b.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpza8ao4f0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp49lpr8gy.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        int maxIndex = 0;\n        for(int i = 0; i\
    \ < nums.size(); i++) {\n            sum += nums.get(i);\n            if(sum >\
    \ maxSum) {\n                maxSum = sum;\n                maxIndex = i;\n  \
    \          }\n        }\n        for(int i = 0; i < nums.size(); i++) {\n    \
    \        sum += nums.get(i);\n            if(sum == maxSum) {\n              \
    \  result.add(nums.get(maxIndex));\n                sum -= nums.get(maxIndex);\n\
    \                maxIndex++;\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8i7e5m5z.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfrxnkuv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxayf48g.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1d1z4q9n.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp86e5l6_7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kelh3wf.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7vu8ebhj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhhv91q7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpid36gske.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdh6xo2c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjllmcqln.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpohknhmvv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpii__2jvb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_otu9bb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnz5fr8ry.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsi1sjuei.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6qcyz0k.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaga54dl7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7s6gmuq4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ri5j245.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36ppxdvu.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(long num\
    \ : nums) {\n            sum += num;\n            if(sum > maxSum) {\n       \
    \         maxSum = sum;\n                maxSumIndex = num;\n            }\n \
    \       }\n        for(long num : nums) {\n            if(num == maxSumIndex)\
    \ {\n                result.add(num);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfv40mp9r.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzo05i4dc.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_yj31le.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2emzg76n.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhftcowu.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzci3i3a8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp35t8bl6.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8kit_ub8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrf92lle.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhp1ixib.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u_td5p1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcu40p9ir.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6v60n_p.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr05kuo_0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqg7dtb8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbllr5ki0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrrcc1_t.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoa993v5g.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr48wyteg.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp25pt7_t0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn58bzrt0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long max = 0;\n        long min = 0;\n        for (long num : nums) {\n\
    \            sum += num;\n            if (sum > max) {\n                max =\
    \ sum;\n            }\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        long maxSum = 0;\n        long minSum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   long maxDiff = max - maxSum;\n        long minDiff = min - minSum;\n     \
    \   long maxDiffIndex = -1;\n        long minDiffIndex = -1;\n        for (long\
    \ num : nums) {\n            sum += num;\n            if (sum == maxSum) {\n \
    \               maxDiffIndex = num;\n            }\n            if (sum == minSum)\
    \ {\n                minDiffIndex = num;\n            }\n        }\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for (long num : nums) {\n            sum\
    \ += num;\n            if (sum == maxSum) {\n                temp.add(maxDiffIndex);\n\
    \            }\n            if (sum == minSum) {\n                temp.add(minDiffIndex);\n\
    \            }\n        }\n        for (long num : temp) {\n            result.add(num);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8y300cos.java:71)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfr6gulb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9s567n6q.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjt4_u8o4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkoo816d.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrpl092j.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7rlhz63.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswrpprp5.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm562w6nz.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdda02yy.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = Long.MIN_VALUE;\n        long maxIndex = -1;\n        long\
    \ maxPoint = Long.MIN_VALUE;\n        for(long num : nums) {\n            sum\
    \ += num;\n            if(sum > maxSum) {\n                maxSum = sum;\n   \
    \             maxIndex = num;\n                maxPoint = num;\n            }\n\
    \            if(sum == maxSum) {\n                result.add(num);\n         \
    \   }\n        }\n        if(maxIndex != -1) {\n            result.add(maxIndex);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pm7udf1.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnuzwcd4_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfnoscr1l.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2wa4b6x.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5czympw7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp082rwdng.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpveyerqat.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp72us9lv0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4b8zqjt.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2s3fre_1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpje_4vpx8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9oq2esmj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvtib93nj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1agx3zf.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx1giu1qa.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5iibe_ly.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe05xqx35.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimhbdeu7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadbf5irx.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp25imzoes.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ap0xzro.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7my2deew.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwr547jxu.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpryihokep.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpshv2irw1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6zyfj2p.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpycw62bw0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpvlv3vr.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vkfolct.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ixmv7p0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ic88uno.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk6mmtqhn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptm90f7_v.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7udxdwhe.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result, new Comparator<Long>() {\n      \
    \      @Override\n            public int compare(Long o1, Long o2) {\n       \
    \         return o1.compareTo(o2);\n            }\n        });\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxo6i1tpj.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9vgnlgs.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8k4lq4v.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprppvjc16.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplngjdj0h.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1f3hjvzd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfnzakz3f.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ num : nums) {\n            sum += num;\n            if (sum > max) {\n     \
    \           max = sum;\n            }\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        for (long num : nums) {\n\
    \            sum += num;\n            if (sum == max) {\n                result.add(num);\n\
    \            }\n            if (sum == min) {\n                result.add(num);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9hckbdn8.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3v036_h5.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml6zj1uj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kdr5c6z.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcuoytblq.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2wsgcx0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgd3f_4f.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvirrdxss.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52zi1xkf.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphnb_wxzf.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5_mr4iam.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp__27sfa5.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpykz0jfe4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxa0km21.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53y4jqxd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6j3awdb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpusi_k1xs.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_rsqvh6.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiukebas9.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result, new Comparator<Long>() {\n      \
    \      public int compare(Long o1, Long o2) {\n                return o1.compareTo(o2);\n\
    \            }\n        });\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgtysfuu.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long sumOfDigits = 0;\n\
    \        long maxOfDigits = 0;\n        long minOfDigits = 0;\n        long maxSum\
    \ = 0;\n        long minSum = 0;\n        long maxSumOfDigits = 0;\n        long\
    \ minSumOfDigits = 0;\n        long maxSumOfDigitsOfDigits = 0;\n        long\
    \ minSumOfDigitsOfDigits = 0;\n        long maxSumOfDigitsOfDigitsOfDigits = 0;\n\
    \        long minSumOfDigitsOfDigitsOfDigits = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigits = 0;\n        long\
    \ maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits =\
    \ 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n\
    \        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits =\
    \ 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\n\
    \    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpp5j06_9l.java:46: error: ';' expected\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\n\
    \                                                                           ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_ahmj9w.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5cfw1a1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobetqmr0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = Long.MIN_VALUE;\n        long minSum = Long.MAX_VALUE;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   long maxSumIndex = 0;\n        long minSumIndex = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            if (sum == maxSum) {\n     \
    \           maxSumIndex = num;\n            }\n            if (sum == minSum)\
    \ {\n                minSumIndex = num;\n            }\n        }\n        Collections.sort(nums);\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ == maxSum) {\n                result.add(maxSumIndex);\n            }\n    \
    \        if (sum == minSum) {\n                result.add(minSumIndex);\n    \
    \        }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps26dars9.java:55)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpysc463g8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3xrdkxk.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodkacz9o.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vc438ep.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ num : nums) {\n            sum += num;\n            if (sum > max) {\n     \
    \           max = sum;\n            }\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        long sumOfDigits = 0;\n\
    \        for (long num : nums) {\n            sumOfDigits += num % 10;\n     \
    \   }\n        sumOfDigits /= 10;\n        long maxOfDigits = sumOfDigits > max\
    \ ? sumOfDigits : max;\n        long minOfDigits = sumOfDigits < min ? sumOfDigits\
    \ : min;\n        for (long num : nums) {\n            long digits = num % 10;\n\
    \            sum += digits;\n            if (sum > max) {\n                max\
    \ = sum;\n            }\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum == max) {\n                result.add(num);\n\
    \            }\n            if (sum == min) {\n                result.add(num);\n\
    \            }\n            if (sum > maxOfDigits) {\n                maxOfDigits\
    \ = sum;\n            }\n            if (sum < minOfDigits) {\n              \
    \  minOfDigits = sum;\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa560lb91.java:64)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxniz7hqh.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm4h9jl5e.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmphr564_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeus5iei_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxx__q3mo.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzu3s84g.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long max = 0;\n        long min = 0;\n        for (long num : nums) {\n\
    \            sum += num;\n            if (sum > max) {\n                max =\
    \ sum;\n            }\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        long maxSum = 0;\n        long minSum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   long maxDiff = max - min;\n        long minDiff = max - minSum;\n        long\
    \ maxSumDiff = maxSum - minSum;\n        long maxDiffSum = maxDiff - minDiff;\n\
    \        long maxSumDiffSum = maxSumDiff - minDiff;\n        long maxDiffSumDiff\
    \ = maxDiffSum - maxSumDiff;\n        long maxSumDiffSumDiff = maxSumDiffSum -\
    \ minDiff;\n        long maxDiffSumDiffSum = maxDiffSumDiff - maxSumDiffSum;\n\
    \        long maxSumDiffSumDiffSum = maxSumDiffSumDiff - minDiff;\n        long\
    \ maxDiffSumDiffSumDiff = maxDiffSumDiffSum - maxSumDiffSumDiff;\n        long\
    \ maxSumDiffSumDiffSumDiff = maxSumDiffSumDiffSum - minDiff;\n        long maxDiffSumDiffSumDiffSum\
    \ = maxDiffSumDiffSumDiff - maxSumDiffSumDiffSum;\n        long maxSumDiffSumDiffSumDiffSum\
    \ = maxSumDiffSumDiffSumDiff - minDiff;\n        long maxDiffSumDiffSumDiffSumDiff\
    \ = maxDiffSumDiffSumDiffSum - maxSumDiffSumDiffSumDiff;\n        long maxSumDiffSumDiffSumDiffSumDiff\
    \ = maxSumDiffSumDiffSumDiffSum - minDiff;\n        long maxDiffSumDiffSumDiffSumDiffSumDiff\
    \ = maxDiffSumDiffSumDiffSumDiffSum - maxSumDiffSumDiffSumDiffSum;\n        long\
    \ maxSumDiffSumDiffSumDiffSumDiffSum = maxSumDiffSumDiffSumDiffSumDiff - minDiff;\n\
    \        long maxDiffSumDiffSumDiffSumDiffSumDiff = maxDiffSumDiffSumDiffSumDiffSum\
    \ - maxSumDiffSumDiffSumDiffSum;\n        long maxSumDiffSumDiffSumDiffSumDiffSumDiff\
    \ = max\n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmplhff2fjk.java:59: error: ';' expected\n        long maxSumDiffSumDiffSumDiffSumDiffSumDiff\
    \ = max\n                                                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        long maxIndex = 0;\n        for(long num :\
    \ nums) {\n            sum += num;\n            if(sum > maxSum) {\n         \
    \       maxSum = sum;\n                maxIndex = num;\n            }\n      \
    \  }\n        for(long num : nums) {\n            sum += num;\n            if(sum\
    \ == maxSum) {\n                result.add(num);\n            }\n        }\n \
    \       for(long num : nums) {\n            sum += num;\n            if(sum <\
    \ maxSum) {\n                result.add(num);\n            }\n        }\n    \
    \    return result;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l, (long)11l,\
    \ (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp15_zqj79.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5tt_54n_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcry931zy.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84zenp1_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphex5iur7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv4e5bd02.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        long maxSum = 0;\n        long maxIndex = 0;\n        for(long num :\
    \ nums) {\n            sum += num;\n            if(sum > maxSum) {\n         \
    \       maxSum = sum;\n                maxIndex = num;\n            }\n      \
    \  }\n        for(long num : nums) {\n            if(num == maxIndex) {\n    \
    \            result.add(num);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
    \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
    \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
    \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
    \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfid7osfk.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bmm9klt.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfnzbably.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprgvygrqp.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkyf_g1tj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2pj_jso.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function which sorts the given list of integers\n\
    \    // in ascending order according to the sum of their digits.\n    // Note:\
    \ if there are several items with similar sum of their digits,\n    // order them\
    \ based on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([])\
    \ == []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums)\
    \ {\n        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n\
    \        for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1234l, (long)423l, (long)463l, (long)145l,\
    \ (long)2l, (long)423l, (long)423l, (long)53l, (long)6l, (long)37l, (long)3457l,\
    \ (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)2l, (long)3l, (long)6l, (long)53l, (long)423l, (long)423l, (long)423l,\
    \ (long)1234l, (long)145l, (long)37l, (long)46l, (long)56l, (long)463l, (long)3457l)))));\n\
    \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l,\
    \ (long)1l, (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)8l, (long)9l, (long)10l, (long)11l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)2l, (long)11l, (long)3l,\
    \ (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(orderByPoints((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)6l, (long)6l, (long)-76l, (long)-21l,\
    \ (long)23l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)-76l,\
    \ (long)-21l, (long)0l, (long)4l, (long)23l, (long)6l, (long)6l)))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebcnhsv.java:28)\n"
  exit_code: 1
  status: Exception

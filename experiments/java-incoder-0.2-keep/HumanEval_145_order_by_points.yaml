name: HumanEval_145_order_by_points
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function which sorts the given list of integers\n\
  \    // in ascending order according to the sum of their digits.\n    // Note: if\
  \ there are several items with similar sum of their digits,\n    // order them based\
  \ on their index in original list.\n    // For example:\n    // >>> order_by_points([1,\
  \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    // >>> order_by_points([]) ==\
  \ []\n    public static ArrayList<Long> orderByPoints(ArrayList<Long> nums) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
  \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
  \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
  \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
  \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
  \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l, (long)1l,\
  \ (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l,\
  \ (long)10l, (long)11l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l,\
  \ (long)2l, (long)11l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l,\
  \ (long)9l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)6l, (long)6l, (long)-76l, (long)-21l, (long)23l, (long)4l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-76l, (long)-21l, (long)0l, (long)4l, (long)23l,\
  \ (long)6l, (long)6l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            sum += num;\n           \
    \ result.add(sum);\n        }\n        Collections.sort(result);\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ sum = 0;\n        for (long num : nums) {\n            sum += num;\n       \
    \     result.add(sum);\n        }\n        Collections.sort(result);\n       \
    \ return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = Long.MIN_VALUE;\n        long maxIndex\
    \ = -1;\n        for (long num : nums) {\n            sum += num;\n          \
    \  if (sum > maxSum) {\n                maxSum = sum;\n                maxIndex\
    \ = num;\n            }\n        }\n        result.add(maxIndex);\n        sum\
    \ = 0;\n        for (long num : nums) {\n            sum += num;\n           \
    \ if (sum > maxSum) {\n                maxSum = sum;\n                maxIndex\
    \ = num;\n            }\n        }\n        result.add(maxIndex);\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxIndex = 0;\n        for(long\
    \ num : nums) {\n            sum += num;\n            if(sum > maxSum) {\n   \
    \             maxSum = sum;\n                maxIndex = num;\n            }\n\
    \        }\n        for(long num : nums) {\n            if(num == maxIndex) {\n\
    \                result.add(num);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      long maxSum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            if (sum > maxSum) {\n                maxSum = sum;\n            }\n\
    \        }\n        long maxSumIndex = 0;\n        for (long num : nums) {\n \
    \           sum += num;\n            if (sum == maxSum) {\n                result.add(num);\n\
    \                maxSumIndex++;\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n\
    \        long maxSumPoint = 0;\n        long maxSumPointIndex = 0;\n        long\
    \ maxSumPointIndex2 = 0;\n        long maxSumPointIndex3 = 0;\n        long maxSumPointIndex4\
    \ = 0;\n        long maxSumPointIndex5 = 0;\n        long maxSumPointIndex6 =\
    \ 0;\n        long maxSumPointIndex7 = 0;\n        long maxSumPointIndex8 = 0;\n\
    \        long maxSumPointIndex9 = 0;\n        long maxSumPointIndex10 = 0;\n \
    \       long maxSumPointIndex11 = 0;\n        long maxSumPointIndex12 = 0;\n \
    \       long maxSumPointIndex13 = 0;\n        long maxSumPointIndex14 = 0;\n \
    \       long maxSumPointIndex15 = 0;\n        long maxSumPointIndex16 = 0;\n \
    \       long maxSumPointIndex17 = 0;\n        long maxSumPointIndex18 = 0;\n \
    \       long maxSumPointIndex19 = 0;\n        long maxSumPointIndex20 = 0;\n \
    \       long maxSumPointIndex21 = 0;\n        long maxSumPointIndex22 = 0;\n \
    \       long maxSumPointIndex23 = 0;\n        long maxSumPointIndex24 = 0;\n \
    \       long maxSumPointIndex25 = 0;\n        long maxSumPointIndex26 = 0;\n \
    \       long maxSumPointIndex27 = 0;\n        long maxSumPointIndex28 = 0;\n \
    \       long maxSumPointIndex29 = 0;\n        long maxSumPointIndex30 = 0;\n \
    \       long maxSumPointIndex31 = 0;\n        long maxSumPointIndex32 = 0;\n \
    \       long maxSumPointIndex33 = 0;\n        long maxSumPointIndex34 = 0;\n \
    \       long maxSumPointIndex35 = 0;\n        long maxSumPointIndex36 = 0;\n \
    \       long maxSumPointIndex37 = 0;\n        long maxSumPointIndex38 = 0;\n \
    \       long maxSumPointIndex39 = 0;\n        long maxSumPointIndex40 = 0;\n \
    \       long maxSumPointIndex41 = 0;\n        long maxSumPointIndex42 = 0;\n \
    \       long maxSumPointIndex43 = 0;\n        long maxSumPointIndex44 = 0;\n \
    \       long maxSumPointIndex45 = 0;\n        long maxSumPointIndex46 = 0;\n \
    \       long maxSumPointIndex47 = 0;\n        long maxSumPointIndex48 = 0;\n \
    \       long maxSumPointIndex49 = 0;\n        long maxSumPointIndex50 = 0;\n \
    \       long maxSumPointIndex51 = 0;\n        long maxSumPointIndex52 = 0;\n \
    \       long maxSumPointIndex53 = 0;\n        long maxSumPointIndex", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n      \
    \  for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      long maxSum = 0;\n        long maxIndex = 0;\n        for(long num : nums)\
    \ {\n            sum += num;\n            if(sum > maxSum) {\n               \
    \ maxSum = sum;\n                maxIndex = num;\n            }\n        }\n \
    \       for(long num : nums) {\n            if(num == maxIndex) {\n          \
    \      result.add(num);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      long maxSum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            if (sum > maxSum) {\n                maxSum = sum;\n            }\n\
    \        }\n        for (long num : nums) {\n            sum += num;\n       \
    \     if (sum == maxSum) {\n                result.add(num);\n            }\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        int maxIndex = 0;\n\
    \        for(int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n\
    \            if(sum > maxSum) {\n                maxSum = sum;\n             \
    \   maxIndex = i;\n            }\n        }\n        for(int i = 0; i < nums.size();\
    \ i++) {\n            sum += nums.get(i);\n            if(sum == maxSum) {\n \
    \               result.add(nums.get(maxIndex));\n                sum -= nums.get(maxIndex);\n\
    \                maxIndex++;\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      long maxSum = 0;\n        long maxSumIndex = 0;\n        for(long num :\
    \ nums) {\n            sum += num;\n            if(sum > maxSum) {\n         \
    \       maxSum = sum;\n                maxSumIndex = num;\n            }\n   \
    \     }\n        for(long num : nums) {\n            if(num == maxSumIndex) {\n\
    \                result.add(num);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for(long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      long max = 0;\n        long min = 0;\n        for (long num : nums) {\n\
    \            sum += num;\n            if (sum > max) {\n                max =\
    \ sum;\n            }\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        long maxSum = 0;\n        long minSum = 0;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   long maxDiff = max - maxSum;\n        long minDiff = min - minSum;\n     \
    \   long maxDiffIndex = -1;\n        long minDiffIndex = -1;\n        for (long\
    \ num : nums) {\n            sum += num;\n            if (sum == maxSum) {\n \
    \               maxDiffIndex = num;\n            }\n            if (sum == minSum)\
    \ {\n                minDiffIndex = num;\n            }\n        }\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for (long num : nums) {\n            sum\
    \ += num;\n            if (sum == maxSum) {\n                temp.add(maxDiffIndex);\n\
    \            }\n            if (sum == minSum) {\n                temp.add(minDiffIndex);\n\
    \            }\n        }\n        for (long num : temp) {\n            result.add(num);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = Long.MIN_VALUE;\n        long maxIndex\
    \ = -1;\n        long maxPoint = Long.MIN_VALUE;\n        for(long num : nums)\
    \ {\n            sum += num;\n            if(sum > maxSum) {\n               \
    \ maxSum = sum;\n                maxIndex = num;\n                maxPoint = num;\n\
    \            }\n            if(sum == maxSum) {\n                result.add(num);\n\
    \            }\n        }\n        if(maxIndex != -1) {\n            result.add(maxIndex);\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ o1, Long o2) {\n                return o1.compareTo(o2);\n            }\n  \
    \      });\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n        }\n        for (long num\
    \ : nums) {\n            sum += num;\n            if (sum == max) {\n        \
    \        result.add(num);\n            }\n            if (sum == min) {\n    \
    \            result.add(num);\n            }\n        }\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for(Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result, new Comparator<Long>() {\n      \
    \      public int compare(Long o1, Long o2) {\n                return o1.compareTo(o2);\n\
    \            }\n        });\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long sum = 0;\n        long max = 0;\n\
    \        long min = 0;\n        long sumOfDigits = 0;\n        long maxOfDigits\
    \ = 0;\n        long minOfDigits = 0;\n        long maxSum = 0;\n        long\
    \ minSum = 0;\n        long maxSumOfDigits = 0;\n        long minSumOfDigits =\
    \ 0;\n        long maxSumOfDigitsOfDigits = 0;\n        long minSumOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigits = 0;\n        long minSumOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigits = 0;\n        long\
    \ minSumOfDigitsOfDigitsOfDigitsOfDigits = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n   \
    \     long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n     \
    \   long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n       \
    \ long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n \
    \       long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits =\
    \ 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long minSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long maxSumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits",
  "        ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      for (Long num : nums) {\n            sum += num;\n            result.add(sum);\n\
    \        }\n        Collections.sort(result);\n        return result;\n", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      long maxSum = Long.MIN_VALUE;\n        long minSum = Long.MAX_VALUE;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   long maxSumIndex = 0;\n        long minSumIndex = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n            if (sum == maxSum) {\n     \
    \           maxSumIndex = num;\n            }\n            if (sum == minSum)\
    \ {\n                minSumIndex = num;\n            }\n        }\n        Collections.sort(nums);\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ == maxSum) {\n                result.add(maxSumIndex);\n            }\n    \
    \        if (sum == minSum) {\n                result.add(minSumIndex);\n    \
    \        }\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long sum = 0;\n        for (long num : nums) {\n\
    \            sum += num;\n            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long num : nums) {\n            sum += num;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n        }\n        long sumOfDigits\
    \ = 0;\n        for (long num : nums) {\n            sumOfDigits += num % 10;\n\
    \        }\n        sumOfDigits /= 10;\n        long maxOfDigits = sumOfDigits\
    \ > max ? sumOfDigits : max;\n        long minOfDigits = sumOfDigits < min ? sumOfDigits\
    \ : min;\n        for (long num : nums) {\n            long digits = num % 10;\n\
    \            sum += digits;\n            if (sum > max) {\n                max\
    \ = sum;\n            }\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum == max) {\n                result.add(num);\n\
    \            }\n            if (sum == min) {\n                result.add(num);\n\
    \            }\n            if (sum > maxOfDigits) {\n                maxOfDigits\
    \ = sum;\n            }\n            if (sum < minOfDigits) {\n              \
    \  minOfDigits = sum;\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long max = 0;\n        long min = 0;\n       \
    \ for (long num : nums) {\n            sum += num;\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n            if (sum < min) {\n\
    \                min = sum;\n            }\n        }\n        long maxSum = 0;\n\
    \        long minSum = 0;\n        for (long num : nums) {\n            sum +=\
    \ num;\n            if (sum > maxSum) {\n                maxSum = sum;\n     \
    \       }\n            if (sum < minSum) {\n                minSum = sum;\n  \
    \          }\n        }\n        long maxDiff = max - min;\n        long minDiff\
    \ = max - minSum;\n        long maxSumDiff = maxSum - minSum;\n        long maxDiffSum\
    \ = maxDiff - minDiff;\n        long maxSumDiffSum = maxSumDiff - minDiff;\n \
    \       long maxDiffSumDiff = maxDiffSum - maxSumDiff;\n        long maxSumDiffSumDiff\
    \ = maxSumDiffSum - minDiff;\n        long maxDiffSumDiffSum = maxDiffSumDiff\
    \ - maxSumDiffSum;\n        long maxSumDiffSumDiffSum = maxSumDiffSumDiff - minDiff;\n\
    \        long maxDiffSumDiffSumDiff = maxDiffSumDiffSum - maxSumDiffSumDiff;\n\
    \        long maxSumDiffSumDiffSumDiff = maxSumDiffSumDiffSum - minDiff;\n   \
    \     long maxDiffSumDiffSumDiffSum = maxDiffSumDiffSumDiff - maxSumDiffSumDiffSum;\n\
    \        long maxSumDiffSumDiffSumDiffSum = maxSumDiffSumDiffSumDiff - minDiff;\n\
    \        long maxDiffSumDiffSumDiffSumDiff = maxDiffSumDiffSumDiffSum - maxSumDiffSumDiffSumDiff;\n\
    \        long maxSumDiffSumDiffSumDiffSumDiff = maxSumDiffSumDiffSumDiffSum -\
    \ minDiff;\n        long maxDiffSumDiffSumDiffSumDiffSumDiff = maxDiffSumDiffSumDiffSumDiffSum\
    \ - maxSumDiffSumDiffSumDiffSum;\n        long maxSumDiffSumDiffSumDiffSumDiffSum\
    \ = maxSumDiffSumDiffSumDiffSumDiff - minDiff;\n        long maxDiffSumDiffSumDiffSumDiffSumDiff\
    \ = maxDiffSumDiffSumDiffSumDiffSum - maxSumDiffSumDiffSumDiffSum;\n        long\
    \ maxSumDiffSumDiffSumDiffSumDiffSumDiff = max", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long sum = 0;\n        long maxSum = 0;\n    \
    \    long maxIndex = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            if(sum > maxSum) {\n                maxSum = sum;\n             \
    \   maxIndex = num;\n            }\n        }\n        for(long num : nums) {\n\
    \            sum += num;\n            if(sum == maxSum) {\n                result.add(num);\n\
    \            }\n        }\n        for(long num : nums) {\n            sum +=\
    \ num;\n            if(sum < maxSum) {\n                result.add(num);\n   \
    \         }\n        }\n        return result;\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long sum = 0;\n        for (long num : nums) {\n\
    \            sum += num;\n            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for(long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        long maxSum = 0;\n        long maxIndex = 0;\n\
    \        for(long num : nums) {\n            sum += num;\n            if(sum >\
    \ maxSum) {\n                maxSum = sum;\n                maxIndex = num;\n\
    \            }\n        }\n        for(long num : nums) {\n            if(num\
    \ == maxIndex) {\n                result.add(num);\n            }\n        }\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long num : nums) {\n            sum += num;\n\
    \            result.add(sum);\n        }\n        Collections.sort(result);\n\
    \        return result;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

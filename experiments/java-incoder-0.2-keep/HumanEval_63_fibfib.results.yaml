name: HumanEval_63_fibfib
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.java:25)\n\tat Problem.fibfib(tmpqscm0wdb.java:25)\n\
    \tat Problem.fibfib(tmpqscm0wdb.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 0;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf2pek35h.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.java:25)\n\tat Problem.fibfib(tmpbjyt9ion.java:25)\n\
    \tat Problem.fibfib(tmpbjyt9ion.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptxmq4jl3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3n3_3t_v.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgjwoyf0j.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 0;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsjdwy4n.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) {\n            return 0;\n      \
    \  }\n        if (n <= 2) {\n            return 1;\n        }\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60x7lk29.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return n;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.java:25)\n\tat Problem.fibfib(tmpgzohh1nb.java:25)\n\
    \tat Problem.fibfib(tmpgzohh1nb.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp11wdtce2.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 0;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.java:25)\n\tat Problem.fibfib(tmpywlgs81w.java:25)\n\
    \tat Problem.fibfib(tmpywlgs81w.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5w72lu60.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib + fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);\n \
    \       }\n        return fibfib;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.java:25)\n\tat Problem.fibfib(tmp0mvyas1m.java:25)\n\
    \tat Problem.fibfib(tmp0mvyas1m.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.java:25)\n\tat Problem.fibfib(tmp271p78cf.java:25)\n\
    \tat Problem.fibfib(tmp271p78cf.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpytv7bqi_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps0vqcpcr.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp060i3c1i.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 0;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_zjav84w.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2qtkglh.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2 + fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n  \
    \      long fibfib6 = fibfibfib5 + fibfib5;\n        long fibfib7 = fibfib6 +\
    \ fibfib6;\n        long fibfib8 = fibfib7 + fibfib7;\n        long fibfib9 =\
    \ fibfib8 + fibfib8;\n        long fibfib10 = fibfib9 + fibfib9;\n        long\
    \ fibfib11 = fibfib10 + fibfib10;\n        long fibfib12 = fibfib11 + fibfib11;\n\
    \        long fibfib13 = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13\
    \ + fibfib13;\n        long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16\
    \ = fibfib15 + fibfib15;\n        long fibfib17 = fibfib16 + fibfib16;\n     \
    \   long fibfib18 = fibfib17 + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n\
    \        long fibfib20 = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20\
    \ + fibfib20;\n        long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23\
    \ = fibfib22 + fibfib22;\n        long fibfib24 = fibfib23 + fibfib23;\n     \
    \   long fibfib25 = fibfib24 + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n\
    \        long fibfib27 = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27\
    \ + fibfib27;\n        long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30\
    \ = fibfib29 + fibfib29;\n        long fibfib31 = fibfib30 + fibfib30;\n     \
    \   long fibfib32 = fibfib31 + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n\
    \        long fibfib34 = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34\
    \ + fibfib34;\n        long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37\
    \ = fibfib36 + fibfib36;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpemwc62if.java:28: error: cannot find symbol\n        long fibfib6\
    \ = fibfibfib5 + fibfib5;\n                       ^\n  symbol:   variable fibfibfib5\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        else\n\
    \            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnewl7oz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.java:25)\n\tat Problem.fibfib(tmpnl6242oa.java:25)\n\
    \tat Problem.fibfib(tmpnl6242oa.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4s2nivoc.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphjqa34yj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else if (n >=\
    \ 3) {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n      \
    \  }\n        return fibfib;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplh5mwjno.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1e7hxnt.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\tat Problem.fibfib(tmpoa4k4vu5.java:25)\n\
    \tat Problem.fibfib(tmpoa4k4vu5.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 0;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gv4vcq9.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.java:25)\n\tat Problem.fibfib(tmpft1hegv4.java:25)\n\
    \tat Problem.fibfib(tmpft1hegv4.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpet2y0biq.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlc82oz_.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\tat Problem.fibfib(tmpw2b7rl9m.java:25)\n\
    \tat Problem.fibfib(tmpw2b7rl9m.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmti670j.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp213clpq7.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else if (n >= 3) {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcwxceki.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpinrhs4no.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxq2e7f6_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqm4pllg8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpariadgng.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluvt_sts.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2g0qbb5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3_y_bl4.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.java:25)\n\tat Problem.fibfib(tmpsye2a6lr.java:25)\n\
    \tat Problem.fibfib(tmpsye2a6lr.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.java:25)\n\tat Problem.fibfib(tmp7qd_t09k.java:25)\n\
    \tat Problem.fibfib(tmp7qd_t09k.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx6bm6fp5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\tat Problem.fibfib(tmpg9fdc4o1.java:25)\n\
    \tat Problem.fibfib(tmpg9fdc4o1.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\tat Problem.fibfib(tmp6dgv1qzh.java:25)\n\
    \tat Problem.fibfib(tmp6dgv1qzh.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_9r9o07_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.java:25)\n\tat Problem.fibfib(tmp6wznl43f.java:25)\n\
    \tat Problem.fibfib(tmp6wznl43f.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.java:25)\n\tat Problem.fibfib(tmp41bkle2k.java:25)\n\
    \tat Problem.fibfib(tmp41bkle2k.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpy2copr.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.java:25)\n\tat Problem.fibfib(tmpe2es0ula.java:25)\n\
    \tat Problem.fibfib(tmpe2es0ula.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnb2bwsb.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbqr7_zjs.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4b9qqkpo.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        else\n\
    \            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_a6gdqu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.java:25)\n\tat Problem.fibfib(tmpviomur06.java:25)\n\
    \tat Problem.fibfib(tmpviomur06.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.java:25)\n\tat Problem.fibfib(tmp5a036v1p.java:25)\n\
    \tat Problem.fibfib(tmp5a036v1p.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsytp4cvn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        long a = fibfib(n-1);\n        long b = fibfib(n-2);\n        long\
    \ c = fibfib(n-3);\n        return a + b + c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvr2tpm63.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpezn8j6n0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fua8km5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyeiojf8c.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1x88revb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrohbij9.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpad9n50f8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu0nk2ir.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjlat2g40.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2;\n        long fibfib5 = fibfib3 + fibfib4;\n        long\
    \ fibfib6 = fibfibfib1 + fibfib5;\n        long fibfib7 = fibfib6 + fibfib4;\n\
    \        long fibfib8 = fibfib7 + fibfib6;\n        long fibfib9 = fibfib8 + fibfib8;\n\
    \        long fibfib10 = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10\
    \ + fibfib10;\n        long fibfib12 = fibfib11 + fibfib11;\n        long fibfib13\
    \ = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13 + fibfib13;\n     \
    \   long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n\
    \        long fibfib17 = fibfib16 + fibfib16;\n        long fibfib18 = fibfib17\
    \ + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n        long fibfib20\
    \ = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20 + fibfib20;\n     \
    \   long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n\
    \        long fibfib24 = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24\
    \ + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n        long fibfib27\
    \ = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27 + fibfib27;\n     \
    \   long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n\
    \        long fibfib31 = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31\
    \ + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n        long fibfib34\
    \ = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34 + fibfib34;\n     \
    \   long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36;\n\
    \        long fibfib\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppr717n80.java:60: error: ';' expected\n        long fibfib\n  \
    \                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzeamejf5.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        else\n\
    \            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dttg6g_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        if (n <= 3) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 0;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.java:25)\n\tat Problem.fibfib(tmp4e4tqofs.java:25)\n\
    \tat Problem.fibfib(tmp4e4tqofs.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2;\n        long fibfib5 = fibfib3 + fibfib4;\n        long\
    \ fibfib6 = fibfibfib4 + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n\
    \        long fibfib8 = fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n\
    \        long fibfib10 = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10\
    \ + fibfib10;\n        long fibfib12 = fibfib11 + fibfib11;\n        long fibfib13\
    \ = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13 + fibfib13;\n     \
    \   long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n\
    \        long fibfib17 = fibfib16 + fibfib16;\n        long fibfib18 = fibfib17\
    \ + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n        long fibfib20\
    \ = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20 + fibfib20;\n     \
    \   long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n\
    \        long fibfib24 = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24\
    \ + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n        long fibfib27\
    \ = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27 + fibfib27;\n     \
    \   long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n\
    \        long fibfib31 = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31\
    \ + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n        long fibfib34\
    \ = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34 + fibfib34;\n     \
    \   long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36;\n\
    \        long fibfib\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6owouggy.java:60: error: ';' expected\n        long fibfib\n  \
    \                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf06z1se4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwiva4y_w.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpewzm68a7.java:95: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpewzm68a7.java:96: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpewzm68a7.java:96: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpewzm68a7.java:96:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpewzm68a7.java:96: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmpewzm68a7.java:96:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpewzm68a7.java:106: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxiujefj_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgl8yft1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\tat Problem.fibfib(tmpc3rpe9dm.java:25)\n\
    \tat Problem.fibfib(tmpc3rpe9dm.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2dtfjxuj.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzlajty_e.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3platwnf.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82iwqe8o.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else if (n >=\
    \ 3) {\n            fibfib = (fibfib + fibfib(n - 1)) + fibfib(n - 2);\n     \
    \   }\n        return fibfib;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xu9w3h7.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2qwbfny.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoj6as__l.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else if (n >=\
    \ 3) {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n      \
    \  }\n        return fibfib;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2eq5pp13.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpveij5hns.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return n;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.java:25)\n\tat Problem.fibfib(tmpngyv3oa4.java:25)\n\
    \tat Problem.fibfib(tmpngyv3oa4.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurdfv1o8.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnyek1d9w.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1j5mohwn.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiat5j2z0.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.java:25)\n\tat Problem.fibfib(tmphtjxfj_j.java:25)\n\
    \tat Problem.fibfib(tmphtjxfj_j.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpztuhs8xq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5uinv2en.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.java:25)\n\tat Problem.fibfib(tmp20js69dn.java:25)\n\
    \tat Problem.fibfib(tmp20js69dn.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx95eliql.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptcdifjsj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxgul9xa3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4tirz6tv.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptw9kl39s.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.java:25)\n\tat Problem.fibfib(tmp1kcom8vi.java:25)\n\
    \tat Problem.fibfib(tmp1kcom8vi.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8tkq4x8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9z30mq50.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.java:25)\n\tat Problem.fibfib(tmpriiyd18j.java:25)\n\
    \tat Problem.fibfib(tmpriiyd18j.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp27u6o09r.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return n;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.java:25)\n\tat Problem.fibfib(tmp_s53ke8v.java:25)\n\
    \tat Problem.fibfib(tmp_s53ke8v.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhvk0lr3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.java:25)\n\tat Problem.fibfib(tmp5jspkwkr.java:25)\n\
    \tat Problem.fibfib(tmp5jspkwkr.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7s3rnct.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghrdv5zx.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2 + fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n  \
    \      long fibfib6 = fibfib4 + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n\
    \        long fibfib8 = fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n\
    \        long fibfib10 = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10\
    \ + fibfib10;\n        long fibfib12 = fibfib11 + fibfib11;\n        long fibfib13\
    \ = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13 + fibfib13;\n     \
    \   long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n\
    \        long fibfib17 = fibfib16 + fibfib16;\n        long fibfib18 = fibfib17\
    \ + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n        long fibfib20\
    \ = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20 + fibfib20;\n     \
    \   long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n\
    \        long fibfib24 = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24\
    \ + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n        long fibfib27\
    \ = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27 + fibfib27;\n     \
    \   long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n\
    \        long fibfib31 = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31\
    \ + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n        long fibfib34\
    \ = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34 + fibfib34;\n     \
    \   long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1kxgfrnc.java:60: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmp1kxgfrnc.java:60: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        if (n <= 3) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.java:25)\n\tat Problem.fibfib(tmpiozqr5ro.java:25)\n\
    \tat Problem.fibfib(tmpiozqr5ro.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.java:25)\n\tat Problem.fibfib(tmpk6gpji1w.java:25)\n\
    \tat Problem.fibfib(tmpk6gpji1w.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return n;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.java:25)\n\tat Problem.fibfib(tmpln82osgs.java:25)\n\
    \tat Problem.fibfib(tmpln82osgs.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0x5dph3k.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3gycwxoa.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.java:25)\n\tat Problem.fibfib(tmptgf4ho16.java:25)\n\
    \tat Problem.fibfib(tmptgf4ho16.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.java:25)\n\tat Problem.fibfib(tmpo9swjp46.java:25)\n\
    \tat Problem.fibfib(tmpo9swjp46.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\tat Problem.fibfib(tmpz3lo_tkr.java:25)\n\
    \tat Problem.fibfib(tmpz3lo_tkr.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmky6w24m.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.java:25)\n\tat Problem.fibfib(tmps_zr2skn.java:25)\n\
    \tat Problem.fibfib(tmps_zr2skn.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 0;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.java:25)\n\tat Problem.fibfib(tmpsy94r1a9.java:25)\n\
    \tat Problem.fibfib(tmpsy94r1a9.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprpg21chn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjv25ewos.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.java:25)\n\tat Problem.fibfib(tmpwf60px74.java:25)\n\
    \tat Problem.fibfib(tmpwf60px74.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib + fibfib(n-1) + fibfib(n-2);\n        }\n        return\
    \ fibfib;\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqg2zmzww.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb5vb76v.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.java:25)\n\tat Problem.fibfib(tmp5lydm9e6.java:25)\n\
    \tat Problem.fibfib(tmp5lydm9e6.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkc_ittq7.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1wenr9uq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\tat Problem.fibfib(tmpb5a5z9jt.java:25)\n\
    \tat Problem.fibfib(tmpb5a5z9jt.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6i2utp8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.java:25)\n\tat Problem.fibfib(tmpi2gks_th.java:25)\n\
    \tat Problem.fibfib(tmpi2gks_th.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4cqya_vk.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.java:25)\n\tat Problem.fibfib(tmpdp0grhxe.java:25)\n\
    \tat Problem.fibfib(tmpdp0grhxe.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybw4sxmk.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp93g746af.java:95: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp93g746af.java:96: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp93g746af.java:96: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp93g746af.java:96:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp93g746af.java:96: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp93g746af.java:96:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp93g746af.java:106: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphd8b3naa.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpes6er6er.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4dt024k7.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.java:25)\n\tat Problem.fibfib(tmps6zzc6sj.java:25)\n\
    \tat Problem.fibfib(tmps6zzc6sj.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnf7gx_h0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpze36l2lz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz897jei_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.java:25)\n\tat Problem.fibfib(tmpykk__qff.java:25)\n\
    \tat Problem.fibfib(tmpykk__qff.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.java:25)\n\tat Problem.fibfib(tmpcj33zi4c.java:25)\n\
    \tat Problem.fibfib(tmpcj33zi4c.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\tat Problem.fibfib(tmp6x7dbf3u.java:25)\n\
    \tat Problem.fibfib(tmp6x7dbf3u.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else {\n            return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkwkpd7cz.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2 + fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n  \
    \      long fibfib6 = fibfibfib5 + fibfib5;\n        long fibfib7 = fibfib6 +\
    \ fibfib6;\n        long fibfib8 = fibfib7 + fibfib7;\n        long fibfib9 =\
    \ fibfib8 + fibfib8;\n        long fibfib10 = fibfib9 + fibfib9;\n        long\
    \ fibfib11 = fibfib10 + fibfib10;\n        long fibfib12 = fibfib11 + fibfib11;\n\
    \        long fibfib13 = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13\
    \ + fibfib13;\n        long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16\
    \ = fibfib15 + fibfib15;\n        long fibfib17 = fibfib16 + fibfib16;\n     \
    \   long fibfib18 = fibfib17 + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n\
    \        long fibfib20 = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20\
    \ + fibfib20;\n        long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23\
    \ = fibfib22 + fibfib22;\n        long fibfib24 = fibfib23 + fibfib23;\n     \
    \   long fibfib25 = fibfib24 + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n\
    \        long fibfib27 = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27\
    \ + fibfib27;\n        long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30\
    \ = fibfib29 + fibfib29;\n        long fibfib31 = fibfib30 + fibfib30;\n     \
    \   long fibfib32 = fibfib31 + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n\
    \        long fibfib34 = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34\
    \ + fibfib34;\n        long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37\
    \ = fibfib36 + fibfib36;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp03bk5wkb.java:28: error: cannot find symbol\n        long fibfib6\
    \ = fibfibfib5 + fibfib5;\n                       ^\n  symbol:   variable fibfibfib5\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.java:25)\n\tat Problem.fibfib(tmp_yfxcujp.java:25)\n\
    \tat Problem.fibfib(tmp_yfxcujp.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6i36dvcw.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\tat Problem.fibfib(tmp_d1q1p6t.java:25)\n\
    \tat Problem.fibfib(tmp_d1q1p6t.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzoy4bgzw.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdqgzb3b9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 0;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 3) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyp6g2ast.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  } else if (n == 1) {\n            return 1;\n        } else if (n == 2) {\n\
    \            return 1;\n        } else if (n <= 3) {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        } else {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) + fibfib(n-4) + fibfib(n-5) + fibfib(n-6) + fibfib(n-7)\
    \ + fibfib(n-8);\n        }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb4ugtff.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else if (n >\
    \ 0) {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n      \
    \  }\n        return fibfib;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkt34w6z8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxl6ca7dd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rbft9on.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n     \
    \   return fibfib;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwe_4_ccw.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) {\n            return 0;\n      \
    \  }\n        long fibfib1 = fibfib(n-1);\n        long fibfib2 = fibfib(n-2);\n\
    \        long fibfib3 = fibfib(n-3);\n        return fibfib1 + fibfib2 + fibfib3;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogaw1jv5.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.java:25)\n\tat Problem.fibfib(tmp7g27c1tg.java:25)\n\
    \tat Problem.fibfib(tmp7g27c1tg.j"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7w_qahie.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 1) return 0;\n        if (n <= 3) return\
    \ 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n <= 2) {\n            return 0;\n      \
    \  }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3e9w3iq6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.java:25)\n\tat Problem.fibfib(tmpquw2fb_g.java:25)\n\
    \tat Problem.fibfib(tmpquw2fb_g.j"
  exit_code: 1
  status: Exception

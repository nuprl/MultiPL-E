name: HumanEval_47_median
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppyms493q.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppsbvqcz.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float count = 0;\n        for (Long x : l) {\n\
    \            sum += x;\n            count++;\n        }\n        if (count ==\
    \ 0) {\n            median = 0;\n        } else {\n            median = (float)\
    \ sum / count;\n        }\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7znxtwa.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        int count = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float sum\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_em_ypt6.java:19: error: variable average is already defined in\
    \ method median(ArrayList<Long>)\n        float average = 0;\n              ^\n\
    /tmp/tmp_em_ypt6.java:20: error: variable sum is already defined in method median(ArrayList<Long>)\n\
    \        float sum = 0;\n              ^\n/tmp/tmp_em_ypt6.java:21: error: variable\
    \ average is already defined in method median(ArrayList<Long>)\n        float\
    \ average = 0;\n              ^\n/tmp/tmp_em_ypt6.java:22: error: variable sum\
    \ is already defined in method median(ArrayList<Long>)\n        float sum = 0;\n\
    \              ^\n/tmp/tmp_em_ypt6.java:23: error: variable average is already\
    \ defined in method median(ArrayList<Long>)\n        float average = 0;\n    \
    \          ^\n/tmp/tmp_em_ypt6.java:24: error: variable sum is already defined\
    \ in method median(ArrayList<Long>)\n        float sum = 0;\n              ^\n\
    /tmp/tmp_em_ypt6.java:25: error: variable average is already defined in method\
    \ median(ArrayList<Long>)\n        float average = 0;\n              ^\n/tmp/tmp_em_ypt6.java:26:\
    \ error: variable sum is already defined in method median(ArrayList<Long>)\n \
    \       float sum = 0;\n              ^\n/tmp/tmp_em_ypt6.java:27: error: variable\
    \ average is already defined in method median(ArrayList<Long>)\n        float\
    \ average = 0;\n              ^\n/tmp/tmp_em_ypt6.java:28: error: variable sum\
    \ is already defined in method median(ArrayList<Long>)\n        float sum = 0;\n\
    \              ^\n/tmp/tmp_em_ypt6.java:29: error: variable average is already\
    \ defined in method median(ArrayList<Long>)\n        float average = 0;\n    \
    \          ^\n/tmp/tmp_em_ypt6.java:30: error: variable sum is already defined\
    \ in method median(ArrayList<Long>)\n        float sum = 0;\n              ^\n\
    /tmp/tmp_em_ypt6.java:31: error: variable average is already defined in method\
    \ median(ArrayList<Long>)\n        float average = 0;\n              ^\n/tmp/tmp_em_ypt6.java:32:\
    \ error: variable sum is already defined in method median(ArrayList<Long>)\n \
    \       float sum = 0;\n              ^\n/tmp/tmp_em_ypt6.java:33: error: variable\
    \ average is already"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcqugfj2b.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        Collections.sort(l);\n        median = (float) l.get(l.size() / 2);\n\
    \        return median;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzkj_kb_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float total = 0;\n        float average;\n        float sum = 0;\n  \
    \      float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float count = 0;\n        float average = 0;\n        float sum = 0;\n\
    \        float \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ygl_vs5.java:124: error: not a statement\n        float \n   \
    \     ^\n/tmp/tmp_ygl_vs5.java:124: error: ';' expected\n        float \n    \
    \         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float max = 0;\n        float min = 0;\n        float sum2 = 0;\n\
    \        float average2 = 0;\n        float count2 = 0;\n        float max2 =\
    \ 0;\n        float min2 = 0;\n        float sum3 = 0;\n        float average3\
    \ = 0;\n        float count3 = 0;\n        float max3 = 0;\n        float min3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float max4 = 0;\n        float min4 = 0;\n        float sum5 =\
    \ 0;\n        float average5 = 0;\n        float count5 = 0;\n        float max5\
    \ = 0;\n        float min5 = 0;\n        float sum6 = 0;\n        float average6\
    \ = 0;\n        float count6 = 0;\n        float max6 = 0;\n        float min6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float max7 = 0;\n        float min7 = 0;\n        float sum8 =\
    \ 0;\n        float average8 = 0;\n        float count8 = 0;\n        float max8\
    \ = 0;\n        float min8 = 0;\n        float sum9 = 0;\n        float average9\
    \ = 0;\n        float count9 = 0;\n        float max9 = 0;\n        float min9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float max10 = 0;\n        float min10 = 0;\n        float\
    \ sum11 = 0;\n        float average11 = 0;\n        float count11 = 0;\n     \
    \   float max11 = 0;\n        float min11 = 0;\n        float sum12 = 0;\n   \
    \     float average12 = 0;\n        float count12 = 0;\n        float max12 =\
    \ 0;\n        float min12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float max13 = 0;\n        float min13\
    \ = 0;\n        float sum14 = 0;\n        float average14 = 0;\n        float\
    \ count14 = 0;\n        float max14 = 0;\n        float min14 = 0;\n        float\
    \ sum15 = 0;\n        float average15 = 0;\n        float count15 = 0;\n     \
    \   float max15 = 0;\n        float min15 = 0;\n        float sum16 = 0;\n   \
    \     float average16 = 0;\n        float count16 = 0;\n        float max16 =\
    \ 0;\n        float min16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float max17 = 0;\n        float min17\
    \ = 0;\n        float sum18 = 0;\n        float average18 = 0;\n        float\
    \ count18 = 0;\n        float max18 = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnvujaor4.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7vch27xj.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn67morh3.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9xx657ph.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float temp;\n       \
    \ int count = 0;\n        long largest = Collections.max(l);\n        long smallest\
    \ = Collections.min(l);\n        float largestFloat = Float.parseFloat(String.valueOf(largest));\n\
    \        float smallestFloat = Float.parseFloat(String.valueOf(smallest));\n \
    \       float largestInt = Integer.parseInt(String.valueOf(largest));\n      \
    \  float smallestInt = Integer.parseInt(String.valueOf(smallest));\n        float\
    \ largestLong = Long.parseLong(String.valueOf(largest));\n        float smallestLong\
    \ = Long.parseLong(String.valueOf(smallest));\n        float largestFloatInt =\
    \ Float.parseFloat(String.valueOf(largestInt));\n        float smallestFloatInt\
    \ = Float.parseFloat(String.valueOf(smallestInt));\n        float largestIntLong\
    \ = Integer.parseInt(String.valueOf(largestLong));\n        float smallestIntLong\
    \ = Integer.parseInt(String.valueOf(smallestLong));\n        float largestLongInt\
    \ = Long.parseLong(String.valueOf(largestLong));\n        float smallestLongInt\
    \ = Long.parseLong(String.valueOf(smallestLong));\n        float largestFloatLong\
    \ = Float.parseFloat(String.valueOf(largestLongInt));\n        float smallestFloatLong\
    \ = Float.parseFloat(String.valueOf(smallestLongInt));\n        float largestIntFloat\
    \ = Integer.parseInt(String.valueOf(largestFloat));\n        float smallestIntFloat\
    \ = Integer.parseInt(String.valueOf(smallestFloat));\n        float largestLongFloat\
    \ = Long.parseLong(String.valueOf(largestFloat));\n        float smallestLongFloat\
    \ = Long.parseLong(String.valueOf(smallestFloat));\n        float largestFloatFloat\
    \ = Float.parseFloat(String.valueOf(largestFloatInt));\n        float smallestFloatFloat\
    \ = Float.parseFloat(String.valueOf(smallestFloatInt));\n        float largestIntInt\
    \ = Integer.parseInt(String.valueOf(largestInt));\n        float smallestIntInt\
    \ = Integer.parseInt(String.valueOf(smallestInt));\n        float largestLongInt\
    \ = Long.parseLong(String.valueOf(largestInt));\n        float smallestLongInt\
    \ = Long.parseLong(String.valueOf(smallestInt));\n        float largestFloatFloatInt\
    \ = Float.parseFloat(String.valueOf(largestIntFloat));\n        float smallestFloatFloatInt\
    \ = Float\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ulq7gop.java:47: error: ';' expected\n        float smallestFloatFloatInt\
    \ = Float\n                                           ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for (long i : l) {\n     \
    \       if (i < average) {\n                median += i;\n            }\n    \
    \    }\n        return median / count;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp136dgtph.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe15f9klg.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float largest;\n        float smallest;\n        float largestIndex;\n  \
    \      float smallestIndex;\n        float temp;\n        float temp2;\n     \
    \   float temp3;\n        float temp4;\n        float temp5;\n        float temp6;\n\
    \        float temp7;\n        float temp8;\n        float temp9;\n        float\
    \ temp10;\n        float temp11;\n        float temp12;\n        float temp13;\n\
    \        float temp14;\n        float temp15;\n        float temp16;\n       \
    \ float temp17;\n        float temp18;\n        float temp19;\n        float temp20;\n\
    \        float temp21;\n        float temp22;\n        float temp23;\n       \
    \ float temp24;\n        float temp25;\n        float temp26;\n        float temp27;\n\
    \        float temp28;\n        float temp29;\n        float temp30;\n       \
    \ float temp31;\n        float temp32;\n        float temp33;\n        float temp34;\n\
    \        float temp35;\n        float temp36;\n        float temp37;\n       \
    \ float temp38;\n        float temp39;\n        float temp40;\n        float temp41;\n\
    \        float temp42;\n        float temp43;\n        float temp44;\n       \
    \ float temp45;\n        float temp46;\n        float temp47;\n        float temp48;\n\
    \        float temp49;\n        float temp50;\n        float temp51;\n       \
    \ float temp52;\n        float temp53;\n        float temp54;\n        float temp55;\n\
    \        float temp56;\n        float temp57;\n        float temp58;\n       \
    \ float temp59;\n        float temp60;\n        float temp61;\n        float temp62;\n\
    \        float temp63;\n        float temp64;\n        float temp65;\n       \
    \ float temp66;\n        float temp67;\n        float temp68;\n        float temp69;\n\
    \        float temp70;\n        float temp71;\n        float temp72;\n       \
    \ float temp73;\n        float temp74;\n        float temp75;\n        float temp76;\n\
    \        float temp77;\n        float temp78;\n        float temp79;\n       \
    \ float temp80;\n        float temp81;\n        float temp8\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaugm8aau.java:104: error: ';' expected\n        float temp8\n \
    \                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.get(l.size()/2);\n        return mid;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdvprzlz0.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size()/2);\n        return median;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnz4hpu5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpro6ooys7.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float temp = 0;\n        float temp2 = 0;\n        float temp3\
    \ = 0;\n        float temp4 = 0;\n        float temp5 = 0;\n        float temp6\
    \ = 0;\n        float temp7 = 0;\n        float temp8 = 0;\n        float temp9\
    \ = 0;\n        float temp10 = 0;\n        float temp11 = 0;\n        float temp12\
    \ = 0;\n        float temp13 = 0;\n        float temp14 = 0;\n        float temp15\
    \ = 0;\n        float temp16 = 0;\n        float temp17 = 0;\n        float temp18\
    \ = 0;\n        float temp19 = 0;\n        float temp20 = 0;\n        float temp21\
    \ = 0;\n        float temp22 = 0;\n        float temp23 = 0;\n        float temp24\
    \ = 0;\n        float temp25 = 0;\n        float temp26 = 0;\n        float temp27\
    \ = 0;\n        float temp28 = 0;\n        float temp29 = 0;\n        float temp30\
    \ = 0;\n        float temp31 = 0;\n        float temp32 = 0;\n        float temp33\
    \ = 0;\n        float temp34 = 0;\n        float temp35 = 0;\n        float temp36\
    \ = 0;\n        float temp37 = 0;\n        float temp38 = 0;\n        float temp39\
    \ = 0;\n        float temp40 = 0;\n        float temp41 = 0;\n        float temp42\
    \ = 0;\n        float temp43 = 0;\n        float temp44 = 0;\n        float temp45\
    \ = 0;\n        float temp46 = 0;\n        float temp47 = 0;\n        float temp48\
    \ = 0;\n        float temp49 = 0;\n        float temp50 = 0;\n        float temp51\
    \ = 0;\n        float temp52 = 0;\n        float temp53 = 0;\n        float temp54\
    \ = 0;\n        float temp55 = 0;\n        float temp56 = 0;\n        float temp57\
    \ = 0;\n        float temp58 = 0;\n        float temp59 = 0;\n        float temp60\
    \ = 0;\n        float temp61 = 0;\n        float temp62 = 0;\n        float temp63\
    \ = 0;\n        float temp64 = 0;\n        float temp65 = 0;\n        float temp66\
    \ = 0;\n        float temp67 = 0;\n        float temp68 = 0;\n        float temp69\
    \ = 0;\n        float temp70 = 0;\n        float temp71 = 0;\n        float temp72\
    \ = 0;\n        float temp73 = 0;\n        float temp74 = 0;\n        float temp75\
    \ = 0;\n        float temp76 = 0;\n        float temp77 = 0;\n        float temp78\
    \ = 0;\n        float temp79 = 0;\n        float temp80 = 0;\n        float temp81\
    \ = 0;\n        float temp82 = 0;\n        float temp83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqy89h78y.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 1) {\n         \
    \   return l.get(mid);\n        } else {\n            return (l.get(mid - 1) +\
    \ l.get(mid)) / 2.0;\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5ddrkqji.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return (l.get(mid - 1) + l.get(mid)) / 2.0;\n\
    \                                                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long largest = Collections.max(l);\n        long smallest = Collections.min(l);\n\
    \        float largestFloat = Float.parseFloat(String.valueOf(largest));\n   \
    \     float smallestFloat = Float.parseFloat(String.valueOf(smallest));\n    \
    \    float average = (largestFloat + smallestFloat) / 2;\n        float difference\
    \ = largest - smallest;\n        float differenceFloat = Float.parseFloat(String.valueOf(difference));\n\
    \        float differenceInPercentage = differenceFloat * 100;\n        float\
    \ differenceInPercentageFloat = Float.parseFloat(String.valueOf(differenceInPercentage));\n\
    \        float differenceInPercentageInPercentage = differenceInPercentageFloat\
    \ * 100;\n        float differenceInPercentageInPercentageFloat = Float.parseFloat(String.valueOf(differenceInPercentageInPercentage));\n\
    \        float differenceInPercentageInPercentageInPercentage = differenceInPercentageInPercentageFloat\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageFloat =\
    \ Float.parseFloat(String.valueOf(differenceInPercentageInPercentageInPercentage));\n\
    \        float differenceInPercentageInPercentageInPercentageInPercentage = differenceInPercentageInPercentageInPercentageFloat\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageFloat\
    \ = Float.parseFloat(String.valueOf(differenceInPercentageInPercentageInPercentageInPercentage));\n\
    \        float differenceInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageFloat * 100;\n \
    \       float differenceInPercentageInPercentageInPercentageInPercentageInPercentageFloat\
    \ = Float.parseFloat(String.valueOf(differenceInPercentageInPercentageInPercentageInPercentageInPercentage));\n\
    \        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageFloat\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageFloat\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageFloat\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageFloat\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageIn\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyuqtoqt2.java:37: error: ';' expected\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageIn\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        int count = 0;\n        for (Long\
    \ i : l) {\n            count++;\n            average += i;\n        }\n     \
    \   average = average / count;\n        for (Long i : l) {\n            median\
    \ += i;\n        }\n        median = median / count;\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpufi21jz7.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float count = 0;\n  \
    \      float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquares = 0;\n \
    \       float medianOfSquares = 0;\n        float medianOfSquaresOfSquares = 0;\n\
    \        float medianOfSquaresOfSquaresOfSquares = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n\
    \        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares =\
    \ 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSqu\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp19rijhq1.java:39: error: ';' expected\n        float medianOfSquaresOfSquaresOfSquaresOfSqu\n\
    \                                                    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        if (l.size() % 2 == 0) {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2).findFirst().get();\n        } else {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2 + 1).findFirst().get();\n        }\n        return median;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0tr2mq8f.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0g4n8whc.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long medianIndex = 0;\n        long minIndex = Collections.min(l);\n\
    \        long maxIndex = Collections.max(l);\n        float minValue = l.get(minIndex);\n\
    \        float maxValue = l.get(maxIndex);\n        float diff = maxValue - minValue;\n\
    \        float midValue = minValue + (diff / 2);\n        float midIndex = (minIndex\
    \ + maxIndex) / 2;\n        if (maxIndex - minIndex % 2 == 1) {\n            median\
    \ = midValue;\n            medianIndex = midIndex;\n        } else {\n       \
    \     median = (midValue + midIndex) / 2;\n            medianIndex = (minIndex\
    \ + maxIndex) / 2;\n        }\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpljltcn_6.java:19: error: no suitable method found for get(long)\n\
    \        float minValue = l.get(minIndex);\n                          ^\n    method\
    \ List.get(int) is not applicable\n      (argument mismatch; possible lossy conversion\
    \ from long to int)\n    method AbstractList.get(int) is not applicable\n    \
    \  (argument mismatch; possible lossy conversion from long to int)\n    method\
    \ ArrayList.get(int) is not applicable\n      (argument mismatch; possible lossy\
    \ conversion from long to int)\n/tmp/tmpljltcn_6.java:20: error: no suitable method\
    \ found for get(long)\n        float maxValue = l.get(maxIndex);\n           \
    \               ^\n    method List.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n    method AbstractList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n    method ArrayList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n/tmp/tmpljltcn_6.java:26:\
    \ error: incompatible types: possible lossy conversion from float to long\n  \
    \          medianIndex = midIndex;\n                          ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sum\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj2otlpsd.java:89: error: ';' expected\n        float sum\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float temp;\n        float median;\n        float sum = 0;\n        float\
    \ average;\n        int count = 0;\n        float temp;\n        float median;\n\
    \        \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4oogk17y.java:20: error: variable median is already defined in\
    \ method median(ArrayList<Long>)\n        float median;\n              ^\n/tmp/tmp4oogk17y.java:21:\
    \ error: variable sum is already defined in method median(ArrayList<Long>)\n \
    \       float sum = 0;\n              ^\n/tmp/tmp4oogk17y.java:22: error: variable\
    \ average is already defined in method median(ArrayList<Long>)\n        float\
    \ average;\n              ^\n/tmp/tmp4oogk17y.java:23: error: variable count is\
    \ already defined in method median(ArrayList<Long>)\n        int count = 0;\n\
    \            ^\n/tmp/tmp4oogk17y.java:24: error: variable temp is already defined\
    \ in method median(ArrayList<Long>)\n        float temp;\n              ^\n/tmp/tmp4oogk17y.java:25:\
    \ error: variable median is already defined in method median(ArrayList<Long>)\n\
    \        float median;\n              ^\n/tmp/tmp4oogk17y.java:26: error: variable\
    \ sum is already defined in method median(ArrayList<Long>)\n        float sum\
    \ = 0;\n              ^\n/tmp/tmp4oogk17y.java:27: error: variable average is\
    \ already defined in method median(ArrayList<Long>)\n        float average;\n\
    \              ^\n/tmp/tmp4oogk17y.java:28: error: variable count is already defined\
    \ in method median(ArrayList<Long>)\n        int count = 0;\n            ^\n/tmp/tmp4oogk17y.java:29:\
    \ error: variable temp is already defined in method median(ArrayList<Long>)\n\
    \        float temp;\n              ^\n/tmp/tmp4oogk17y.java:30: error: variable\
    \ median is already defined in method median(ArrayList<Long>)\n        float median;\n\
    \              ^\n/tmp/tmp4oogk17y.java:31: error: variable sum is already defined\
    \ in method median(ArrayList<Long>)\n        float sum = 0;\n              ^\n\
    /tmp/tmp4oogk17y.java:32: error: variable average is already defined in method\
    \ median(ArrayList<Long>)\n        float average;\n              ^\n/tmp/tmp4oogk17y.java:33:\
    \ error: variable count is already defined in method median(ArrayList<Long>)\n\
    \        int count = 0;\n            ^\n/tmp/tmp4oogk17y.java:34: error: variable\
    \ temp is already defined in method median(ArrayList<Long>)\n  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size()/2);\n        return median;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ehpnw0q.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferences = 0;\n        float averageOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferencesOfDifferences = 0;\n        float sumOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float sumOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ta2cfog.java:50: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float largest = Collections.max(l);\n        float smallest = Collections.min(l);\n\
    \        float average = (float) l.size() / l.size();\n        float largestElement\
    \ = Collections.max(l);\n        float smallestElement = Collections.min(l);\n\
    \        float largestElement2 = Collections.max(l);\n        float smallestElement2\
    \ = Collections.min(l);\n        float largestElement3 = Collections.max(l);\n\
    \        float smallestElement3 = Collections.min(l);\n        float largestElement4\
    \ = Collections.max(l);\n        float smallestElement4 = Collections.min(l);\n\
    \        float largestElement5 = Collections.max(l);\n        float smallestElement5\
    \ = Collections.min(l);\n        float largestElement6 = Collections.max(l);\n\
    \        float smallestElement6 = Collections.min(l);\n        float largestElement7\
    \ = Collections.max(l);\n        float smallestElement7 = Collections.min(l);\n\
    \        float largestElement8 = Collections.max(l);\n        float smallestElement8\
    \ = Collections.min(l);\n        float largestElement9 = Collections.max(l);\n\
    \        float smallestElement9 = Collections.min(l);\n        float largestElement10\
    \ = Collections.max(l);\n        float smallestElement10 = Collections.min(l);\n\
    \        float largestElement11 = Collections.max(l);\n        float smallestElement11\
    \ = Collections.min(l);\n        float largestElement12 = Collections.max(l);\n\
    \        float smallestElement12 = Collections.min(l);\n        float largestElement13\
    \ = Collections.max(l);\n        float smallestElement13 = Collections.min(l);\n\
    \        float largestElement14 = Collections.max(l);\n        float smallestElement14\
    \ = Collections.min(l);\n        float largestElement15 = Collections.max(l);\n\
    \        float smallestElement15 = Collections.min(l);\n        float largestElement16\
    \ = Collections.max(l);\n        float smallestElement16 = Collections.min(l);\n\
    \        float largestElement17 = Collections.max(l);\n        float smallestElement17\
    \ = Collections.min(l);\n        float largestElement18 = Collections.max(l);\n\
    \        float smallestElement18 = Collections.min(l);\n        float largestElement19\
    \ = Collections.max(l);\n        float smallestElement19 = Collections.min(l);\n\
    \        float largestElement20 = Collections.max(l);\n        float smallestElement20\
    \ = Collections.min(l);\n        float largestElement2\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplneuv2pn.java:62: error: ';' expected\n        float largestElement2\n\
    \                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferences = 0;\n        float averageOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferencesOfDifferences = 0;\n        float sumOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float sumOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpghx0n3xr.java:50: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size()/2);\n        return median;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4mf_h7lt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        Collections.sort(l);\n        median = (float) l.get(l.size() / 2);\n\
    \        return median;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zcgvmpg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float count2 = 0;\n        float sum3\
    \ = 0;\n        float count3 = 0;\n        float sum4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float count5 = 0;\n        float sum6\
    \ = 0;\n        float count6 = 0;\n        float sum7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float count8 = 0;\n        float sum9\
    \ = 0;\n        float count9 = 0;\n        float sum10 = 0;\n        float count10\
    \ = 0;\n        float sum11 = 0;\n        float count11 = 0;\n        float sum12\
    \ = 0;\n        float count12 = 0;\n        float sum13 = 0;\n        float count13\
    \ = 0;\n        float sum14 = 0;\n        float count14 = 0;\n        float sum15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float count16\
    \ = 0;\n        float sum17 = 0;\n        float count17 = 0;\n        float sum18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float count19\
    \ = 0;\n        float sum20 = 0;\n        float count20 = 0;\n        float sum21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float count22\
    \ = 0;\n        float sum23 = 0;\n        float count23 = 0;\n        float sum24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float count25\
    \ = 0;\n        float sum26 = 0;\n        float count26 = 0;\n        float sum27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float count28\
    \ = 0;\n        float sum29 = 0;\n        float count29 = 0;\n        float sum30\
    \ = 0;\n        float count30 = 0;\n        float sum31 = 0;\n        float count31\
    \ = 0;\n        float sum32 = 0;\n        float count32 = 0;\n        float sum33\
    \ = 0;\n        float count33 = 0;\n        float sum34 = 0;\n        float count34\
    \ = 0;\n        float sum35 = 0;\n        float count35 = 0;\n        float sum36\
    \ = 0;\n        float count36 = 0;\n        float sum37 = 0;\n        float count37\
    \ = 0;\n        float sum38 = 0;\n        float count38 = 0;\n        float sum39\
    \ = 0;\n        float count39 = 0;\n        float sum40 = 0;\n        float count40\
    \ = 0;\n        float sum41 = 0;\n        float count41 = 0;\n        float sum42\
    \ = 0;\n        float count42 = 0;\n        float sum43 = 0;\n        float count\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6vinaefn.java:102: error: ';' expected\n        float count\n \
    \                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for (long i : l) {\n     \
    \       if (i < average) {\n                median += i;\n            }\n    \
    \    }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6ozcg62.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferences = 0;\n        float\
    \ averageOfSquareOfDifferenceOfDifferences = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferences = 0;\n\
    \        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferences =\
    \ 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjfbyjcr5.java:45: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float\
    \ averageOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n\
    \        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n\
    \        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares =\
    \ 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquares\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpio6tytv2.java:41: error: ';' expected\n        float sumOfSquares\n\
    \                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        for (Long i : l) {\n            sum +=\
    \ i;\n        }\n        if (sum % 2 == 0) {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2).findFirst().get();\n        } else {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2 + 1).findFirst().get();\n        }\n        return median;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp734vt2z.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float count = 0;\n  \
    \      float sum2 = 0;\n        float average2 = 0;\n        float count2 = 0;\n\
    \        float sum3 = 0;\n        float average3 = 0;\n        float count3 =\
    \ 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoo2ke8nn.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long median\
    \ = Collections.median(l);\n        return Float.parseFloat(String.valueOf(median));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppqpkkm0q.java:15: error: cannot find symbol\n        long median\
    \ = Collections.median(l);\n                                 ^\n  symbol:   method\
    \ median(ArrayList<Long>)\n  location: class Collections\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average = 0;\n        float count = 0;\n\
    \        float temp;\n        float temp2;\n        float temp3;\n        float\
    \ temp4;\n        float temp5;\n        float temp6;\n        float temp7;\n \
    \       float temp8;\n        float temp9;\n        float temp10;\n        float\
    \ temp11;\n        float temp12;\n        float temp13;\n        float temp14;\n\
    \        float temp15;\n        float temp16;\n        float temp17;\n       \
    \ float temp18;\n        float temp19;\n        float temp20;\n        float temp21;\n\
    \        float temp22;\n        float temp23;\n        float temp24;\n       \
    \ float temp25;\n        float temp26;\n        float temp27;\n        float temp28;\n\
    \        float temp29;\n        float temp30;\n        float temp31;\n       \
    \ float temp32;\n        float temp33;\n        float temp34;\n        float temp35;\n\
    \        float temp36;\n        float temp37;\n        float temp38;\n       \
    \ float temp39;\n        float temp40;\n        float temp41;\n        float temp42;\n\
    \        float temp43;\n        float temp44;\n        float temp45;\n       \
    \ float temp46;\n        float temp47;\n        float temp48;\n        float temp49;\n\
    \        float temp50;\n        float temp51;\n        float temp52;\n       \
    \ float temp53;\n        float temp54;\n        float temp55;\n        float temp56;\n\
    \        float temp57;\n        float temp58;\n        float temp59;\n       \
    \ float temp60;\n        float temp61;\n        float temp62;\n        float temp63;\n\
    \        float temp64;\n        float temp65;\n        float temp66;\n       \
    \ float temp67;\n        float temp68;\n        float temp69;\n        float temp70;\n\
    \        float temp71;\n        float temp72;\n        float temp73;\n       \
    \ float temp74;\n        float temp75;\n        float temp76;\n        float temp77;\n\
    \        float temp78;\n        float temp79;\n        float temp80;\n       \
    \ float temp81;\n        float temp82;\n        float temp83;\n        float temp84;\n\
    \        float temp85;\n        float temp\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp89wi0rbg.java:104: error: ';' expected\n        float temp\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        Collections.sort(l);\n        median = l.get(l.size()/2);\n        return\
    \ median;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ca_6256.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return l.get(mid);\n        } else {\n            return (float) l.get(mid)\
    \ + l.get(mid + 1);\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqml8doxi.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float min = Long.MAX_VALUE;\n\
    \        float max = Long.MIN_VALUE;\n        for (Long i : l) {\n           \
    \ sum += i;\n            min = Math.min(min, i);\n            max = Math.max(max,\
    \ i);\n        }\n        average = sum / l.size();\n        if (l.size() % 2\
    \ == 0) {\n            median = (float) (((float) average + (float) l.get(l.size()\
    \ / 2)) / 2);\n        } else {\n            median = (float) (((float) average\
    \ - (float) l.get(l.size() / 2)) / 2);\n        }\n        return median;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdq8wr5wh.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sum\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ae6c21o.java:89: error: ';' expected\n        float sum\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long medianIndex = 0;\n        float temp = 0;\n        float\
    \ sum = 0;\n        float average = 0;\n        float count = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp12fzvq67.java:23: error: variable sumOfSquares is already defined\
    \ in method median(ArrayList<Long>)\n        float sumOfSquares = 0;\n       \
    \       ^\n/tmp/tmp12fzvq67.java:24: error: variable averageOfSquares is already\
    \ defined in method median(ArrayList<Long>)\n        float averageOfSquares =\
    \ 0;\n              ^\n/tmp/tmp12fzvq67.java:25: error: variable sumOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:26: error: variable averageOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:27: error: variable sumOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:28: error: variable averageOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:29: error: variable sumOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:30: error: variable averageOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:31: error: variable sumOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:32: error: variable averageOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:33: error: variable sumOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:34: error: variable averageOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquares\
    \ = 0;\n              ^\n/tmp/tmp12fzvq67.java:35: error: variable sumOfSquares\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfS"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianOfAllElements;\n        long totalElements;\n        long\
    \ largestElement = Collections.max(l);\n        long smallestElement = Collections.min(l);\n\
    \        float largestElementFloat = Float.parseFloat(String.valueOf(largestElement));\n\
    \        float smallestElementFloat = Float.parseFloat(String.valueOf(smallestElement));\n\
    \        float averageOfAllElements = largestElementFloat + smallestElementFloat;\n\
    \        float averageOfAllElementsFloat = Float.parseFloat(String.valueOf(averageOfAllElements));\n\
    \        float totalOfAllElementsFloat = Float.parseFloat(String.valueOf(totalElements));\n\
    \        float averageOfAllElementsFloat = Float.parseFloat(String.valueOf(averageOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        float medianOfAllElementsFloat = Float.parseFloat(String.valueOf(medianOfAllElement\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqk50r73e.java:41: error: ')' expected\n        float medianOfAllElementsFloat\
    \ = Float.parseFloat(String.valueOf(medianOfAllElement\n                     \
    \                                                                      ^\n/tmp/tmpqk50r73e.java:42:\
    \ error: ';' expected\n    }\n     ^\n/tmp/tmpqk50r73e.java:43: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmpqk50r73e.java:43: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmpqk50r73e.java:43: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmpqk50r73e.java:43: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmpqk50r73e.java:51:\
    \ error: reached end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferences = 0;\n        float averageOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferencesOfDifferences = 0;\n        float sumOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float sumOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqr_kht4q.java:50: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return l.get(mid);\n        } else {\n            return (float) l.get(mid)\
    \ + l.get(mid + 1);\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp13o9fbnn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferences = 0;\n        float averageOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferenceOfDifferences = 0;\n        float sumOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferences = 0;\n    \
    \    float sumOfSquaresOfDifferenceOfDifferenceOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferenceOfDifferenceOfDifferences = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOf\n   \
    \ }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwjbpnwna.java:53: error: ';' expected\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOf\n\
    \                                                                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        if (l.size() % 2 == 0) {\n            median = (float) l.get(l.size()\
    \ / 2);\n        } else {\n            median = (float) (((l.get(l.size() / 2)\
    \ - l.get(l.size() / 2 - 1)) + l.get(l.size() / 2)) / 2.0);\n        }\n     \
    \   return median;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiwthal7_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float\
    \ averageOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n\
    \        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n\
    \        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares =\
    \ 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sum\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq0cdy23e.java:41: error: ';' expected\n        float sum\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_nz6i_6g.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for(long i : l) {\n      \
    \      if(average - i > median) {\n                median = average - i;\n   \
    \         }\n        }\n        return median;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_4kip1j.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        if (count > 0) {\n            average = sum / count;\n   \
    \     }\n        for (long i : l) {\n            if (i < average) {\n        \
    \        median += i;\n            }\n        }\n        return median;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdoop356j.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long mid\
    \ = l.size() / 2;\n        if (l.size() % 2 == 0) {\n            return l.get(mid);\n\
    \        } else {\n            int left = 0;\n            int right = mid;\n \
    \           while (left < right) {\n                long mid1 = l.get(left);\n\
    \                long mid2 = l.get(right);\n                if (mid1 < mid2) {\n\
    \                    left++;\n                } else {\n                    right--;\n\
    \                }\n            }\n            return l.get(right);\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyel9d2vc.java:17: error: no suitable method found for get(long)\n\
    \            return l.get(mid);\n                    ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n/tmp/tmpyel9d2vc.java:20: error: incompatible types: possible\
    \ lossy conversion from long to int\n            int right = mid;\n          \
    \              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float count = 0;\n  \
    \      float temp;\n        float temp2;\n        float temp3;\n        float\
    \ temp4;\n        float temp5;\n        float temp6;\n        float temp7;\n \
    \       float temp8;\n        float temp9;\n        float temp10;\n        float\
    \ temp11;\n        float temp12;\n        float temp13;\n        float temp14;\n\
    \        float temp15;\n        float temp16;\n        float temp17;\n       \
    \ float temp18;\n        float temp19;\n        float temp20;\n        float temp21;\n\
    \        float temp22;\n        float temp23;\n        float temp24;\n       \
    \ float temp25;\n        float temp26;\n        float temp27;\n        float temp28;\n\
    \        float temp29;\n        float temp30;\n        float temp31;\n       \
    \ float temp32;\n        float temp33;\n        float temp34;\n        float temp35;\n\
    \        float temp36;\n        float temp37;\n        float temp38;\n       \
    \ float temp39;\n        float temp40;\n        float temp41;\n        float temp42;\n\
    \        float temp43;\n        float temp44;\n        float temp45;\n       \
    \ float temp46;\n        float temp47;\n        float temp48;\n        float temp49;\n\
    \        float temp50;\n        float temp51;\n        float temp52;\n       \
    \ float temp53;\n        float temp54;\n        float temp55;\n        float temp56;\n\
    \        float temp57;\n        float temp58;\n        float temp59;\n       \
    \ float temp60;\n        float temp61;\n        float temp62;\n        float temp63;\n\
    \        float temp64;\n        float temp65;\n        float temp66;\n       \
    \ float temp67;\n        float temp68;\n        float temp69;\n        float temp70;\n\
    \        float temp71;\n        float temp72;\n        float temp73;\n       \
    \ float temp74;\n        float temp75;\n        float temp76;\n        float temp77;\n\
    \        float temp78;\n        float temp79;\n        float temp80;\n       \
    \ float temp81;\n        float temp82;\n        float temp83;\n        float temp84;\n\
    \        float temp85;\n        float temp\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq68rtd9p.java:104: error: ';' expected\n        float temp\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianOfAllElements;\n        long totalElements;\n        long\
    \ totalPositiveElements;\n        long totalNegativeElements;\n        long totalZeroElements;\n\
    \        long totalNegativeZeroElements;\n        long totalPositiveZeroElements;\n\
    \        long totalZeroNegativeElements;\n        long totalZeroPositiveElements;\n\
    \        long totalZeroZeroElements;\n        long totalZeroZeroNegativeElements;\n\
    \        long totalZeroZeroPositiveElements;\n        long totalZeroZeroZeroElements;\n\
    \        long totalZeroZeroZeroNegativeElements;\n        long totalZeroZeroZeroPositiveElements;\n\
    \        long totalZeroZeroZeroZeroElements;\n        long totalZeroZeroZeroNegativeElements;\n\
    \        long totalZeroZeroZeroPositiveElements;\n        long totalZeroZeroZeroZeroElements;\n\
    \        long totalZeroZeroZeroNegativeElements;\n        long totalZeroZeroZeroPositiveElements;\n\
    \        long totalZeroZeroZeroZeroElements;\n        long totalZeroZeroZeroNegativeElements;\n\
    \        long totalZeroZeroZeroPositiveElements;\n        long totalZeroZeroZeroZeroElements;\n\
    \        long totalZeroZeroZeroNegativeElements;\n        long totalZeroZeroZeroPositiveElements;\n\
    \        long totalZeroZeroZeroZeroElements;\n        long totalZeroZeroZeroNegativeElements;\n\
    \        long totalZeroZeroZeroPositiveElements;\n        long totalZeroZeroZeroZeroElements;\n\
    \        long totalZeroZeroZeroNegativeElements;\n        long totalZeroZeroZeroPositiveElements;\n\
    \        long totalZeroZeroZeroZeroElements;\n        long totalZeroZeroZeroNegativeElements;\n\
    \        long totalZeroZeroZeroPositiveElements;\n        long totalZeroZeroZeroZeroElements;\n\
    \        long totalZeroZeroZeroNegativeElements;\n        long totalZeroZeroZeroPositiveElements;\n\
    \        long totalZeroZeroZeroZeroElements;\n        long totalZeroZeroZeroNegativeElements;\n\
    \        long totalZeroZeroZeroPositiveElements;\n        long totalZeroZeroZeroZeroElements;\n\
    \        long totalZeroZeroZeroNegativeElements;\n        long totalZeroZeroZeroPositiveElements;\n\
    \        long totalZeroZeroZeroZeroElements;\n        long totalZeroZeroZeroNegativeElements;\n\
    \        long totalZeroZeroZeroPositiveElements;\n        long totalZeroZeroZeroZeroElements;\n\
    \        long totalZeroZeroZeroNegativeElements;\n        long totalZeroZeroZeroPositiveElements;\n\
    \        long totalZeroZeroZeroZeroElements;\n        long totalZeroZeroZeroNegativeElements;\n\
    \        long totalZeroZero\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj4k8i5rt.java:69: error: ';' expected\n        long totalZeroZero\n\
    \                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.get(l.size()/2);\n        return mid;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqeca6xz7.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsm3yprey.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferences = 0;\n        float averageOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferenceOfDifferences = 0;\n        float sumOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferences = 0;\n    \
    \    float sumOfSquaresOfDifferenceOfDifferenceOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferenceOfDifferenceOfDifferences = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOf\n   \
    \ }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb2awv5ac.java:53: error: ';' expected\n        float sumOfSquaresOfDifferenceOfDifferenceOfDifferenceOf\n\
    \                                                                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long sum = 0;\n        for (long i : l) {\n            sum +=\
    \ i;\n        }\n        float average = sum / l.size();\n        float min =\
    \ Float.MAX_VALUE;\n        float max = Float.MIN_VALUE;\n        for (long i\
    \ : l) {\n            if (i < min) {\n                min = i;\n            }\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        float diff = (max - min) / 2;\n        float median1 = average -\
    \ diff;\n        float median2 = average + diff;\n        if (median1 < median2)\
    \ {\n            median = median1;\n        } else {\n            median = median2;\n\
    \        }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5z4gc35x.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp875h6b49.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long sum = 0;\n        for (long i : l) {\n            sum +=\
    \ i;\n        }\n        if (sum % 2 == 0) {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2).findFirst().get();\n        } else {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2 + 1).findFirst().get();\n        }\n        return median;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2di0txd_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        return (float) l.get(mid);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg0fcszc1.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpttty9kxj.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average = 0;\n        float count = 0;\n\
    \        float sum2 = 0;\n        float average2 = 0;\n        float count2 =\
    \ 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp74uwom7v.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for(Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for(Long i : l) {\n      \
    \      if(average - i < 0) {\n                median += i;\n            }\n  \
    \          if(average - i > 0) {\n                median += i;\n            }\n\
    \        }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi2xocqmu.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfSquares = 0;\n        float averageOfDifferenceOfSquares\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfSquares = 0;\n        float averageOfSquaresOfDifferenceOfSquares\
    \ = 0;\n        float sumOfDifferenceOfSquareOfDifferences = 0;\n        float\
    \ averageOfDifferenceOfSquareOfDifferences = 0;\n        float sumOfSquaresOfDifferenceOfSquareOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfSquareOfDifferences = 0;\n\
    \        float sumOfDifferenceOfSquareOfDifferencesOfSquares = 0;\n        float\
    \ averageOfDifferenceOfSquareOfDifferencesOfSquares = 0;\n        float sumOfSquaresOfDifferenceOfSquareOfDifferencesOfSquares\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfSquareOfDifferencesOfSquares\
    \ = 0;\n        float sumOfDifferenceOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquare\
    \ = 0;\n        float averageOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquare\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquare\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquare\
    \ = 0;\n        float sumOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float averageOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferenceOfSquareOfDifferencesOfSquareOfDifferencesOfSquareOfDifferencesOfSquare\
    \ = 0;\n        float averageOfDifferenceOfSquare\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu2afw5yb.java:52: error: ';' expected\n        float averageOfDifferenceOfSquare\n\
    \                                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpftcnwfk8.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpus47_qn1.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float count2 = 0;\n        float average2\
    \ = 0;\n        float sum3 = 0;\n        float count3 = 0;\n        float average3\
    \ = 0;\n        float sum4 = 0;\n        float count4 = 0;\n        float average4\
    \ = 0;\n        float sum5 = 0;\n        float count5 = 0;\n        float average5\
    \ = 0;\n        float sum6 = 0;\n        float count6 = 0;\n        float average6\
    \ = 0;\n        float sum7 = 0;\n        float count7 = 0;\n        float average7\
    \ = 0;\n        float sum8 = 0;\n        float count8 = 0;\n        float average8\
    \ = 0;\n        float sum9 = 0;\n        float count9 = 0;\n        float average9\
    \ = 0;\n        float sum10 = 0;\n        float count10 = 0;\n        float average10\
    \ = 0;\n        float sum11 = 0;\n        float count11 = 0;\n        float average11\
    \ = 0;\n        float sum12 = 0;\n        float count12 = 0;\n        float average12\
    \ = 0;\n        float sum13 = 0;\n        float count13 = 0;\n        float average13\
    \ = 0;\n        float sum14 = 0;\n        float count14 = 0;\n        float average14\
    \ = 0;\n        float sum15 = 0;\n        float count15 = 0;\n        float average15\
    \ = 0;\n        float sum16 = 0;\n        float count16 = 0;\n        float average16\
    \ = 0;\n        float sum17 = 0;\n        float count17 = 0;\n        float average17\
    \ = 0;\n        float sum18 = 0;\n        float count18 = 0;\n        float average18\
    \ = 0;\n        float sum19 = 0;\n        float count19 = 0;\n        float average19\
    \ = 0;\n        float sum20 = 0;\n        float count20 = 0;\n        float average20\
    \ = 0;\n        float sum21 = 0;\n        float count21 = 0;\n        float average21\
    \ = 0;\n        float sum22 = 0;\n        float count22 = 0;\n        float average22\
    \ = 0;\n        float sum23 = 0;\n        float count23 = 0;\n        float average23\
    \ = 0;\n        float sum24 = 0;\n        float count24 = 0;\n        float average24\
    \ = 0;\n        float sum25 = 0;\n        float count25 = 0;\n        float average25\
    \ = 0;\n        float sum26 = 0;\n        float count26 = 0;\n        float average26\
    \ = 0;\n        float sum27 = 0;\n        float count27 = 0;\n        float average27\
    \ = 0;\n        float sum28 = 0;\n        float count28 = 0;\n        float average28\
    \ = 0;\n        float sum29 = 0;\n        float count29 = 0;\n        float average29\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpofluh4j8.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        Collections.sort(l);\n        median = (float) l.get(l.size() / 2);\n\
    \        return median;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4zmt9ll9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        long largest = 0;\n        long smallest = 0;\n        float largestFloat\
    \ = 0;\n        float smallestFloat = 0;\n        float averageFloat = 0;\n  \
    \      float sumFloat = 0;\n        float averageFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float countFloat\
    \ = 0;\n        float largestFloat = 0;\n        float smallestFloat = 0;\n  \
    \      float averageFloat = 0;\n        float sumFloat = 0;\n        float \n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_twpkqlt.java:96: error: not a statement\n        float \n    \
    \    ^\n/tmp/tmp_twpkqlt.java:96: error: ';' expected\n        float \n      \
    \       ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8egua1w7.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long medianIndex = 0;\n        long largest = Collections.max(l);\n\
    \        long smallest = Collections.min(l);\n        float largestFloat = Float.parseFloat(String.valueOf(largest));\n\
    \        float smallestFloat = Float.parseFloat(String.valueOf(smallest));\n \
    \       float average = (largestFloat + smallestFloat) / 2;\n        float averageFloat\
    \ = Float.parseFloat(String.valueOf(average));\n        float medianFloat = Float.parseFloat(String.valueOf(median));\n\
    \        float medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n\
    \        float medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n\
    \        float largestFloat = Float.parseFloat(String.valueOf(largest));\n   \
    \     float smallestFloat = Float.parseFloat(String.valueOf(smallest));\n    \
    \    float averageFloat = Float.parseFloat(String.valueOf(average));\n       \
    \ float medianFloat = Float.parseFloat(String.valueOf(median));\n        float\
    \ medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n        float\
    \ medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n        float\
    \ largestFloat = Float.parseFloat(String.valueOf(largest));\n        float smallestFloat\
    \ = Float.parseFloat(String.valueOf(smallest));\n        float averageFloat =\
    \ Float.parseFloat(String.valueOf(average));\n        float medianFloat = Float.parseFloat(String.valueOf(median));\n\
    \        float medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n\
    \        float medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n\
    \        float largestFloat = Float.parseFloat(String.valueOf(largest));\n   \
    \     float smallestFloat = Float.parseFloat(String.valueOf(smallest));\n    \
    \    float averageFloat = Float.parseFloat(String.valueOf(average));\n       \
    \ float medianFloat = Float.parseFloat(String.valueOf(median));\n        float\
    \ medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n        float\
    \ medianIndexFloat = Float.parseFloat(String.valueOf(medianIndex));\n        float\
    \ largestFloat = Float.parseFloat(String.valueOf(largest));\n        float smallestFloat\
    \ = Float.parseFloat(String.valueOf(smallest));\n        float averageFloat =\
    \ Float.parseFloat(String.valueOf(average));\n        float medianFloat = Float.parseFloat(String.valueOf(median));\n\
    \        float medianIndexFloat = Float.parseFloat(String.\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph12roqvm.java:48: error: <identifier> expected\n        float medianIndexFloat\
    \ = Float.parseFloat(String.\n                                               \
    \          ^\n/tmp/tmph12roqvm.java:49: error: ';' expected\n    }\n     ^\n/tmp/tmph12roqvm.java:50:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmph12roqvm.java:50: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmph12roqvm.java:50: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmph12roqvm.java:50: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmph12roqvm.java:58: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        Collections.sort(l);\n        if (l.size() % 2 == 0) {\n            median\
    \ = (float) l.get(l.size() / 2);\n        } else {\n            median = (float)\
    \ l.get(l.size() / 2 + 1);\n        }\n        return median;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60xgzx3i.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        int n = l.size();\n        if (n < 2) {\n   \
    \         return l.get(0);\n        }\n        float largest = l.get(0);\n   \
    \     for (int i = 1; i < n; i++) {\n            sum += l.get(i);\n          \
    \  if (largest < sum / n) {\n                largest = sum / n;\n            }\n\
    \        }\n        median = largest;\n        return median;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoa0fo6vn.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        long largest = 0;\n        long smallest = 0;\n        float largestFloat\
    \ = 0;\n        float smallestFloat = 0;\n        float averageFloat = 0;\n  \
    \      float largestFloat2 = 0;\n        float smallestFloat2 = 0;\n        float\
    \ averageFloat2 = 0;\n        float largestFloat3 = 0;\n        float smallestFloat3\
    \ = 0;\n        float averageFloat3 = 0;\n        float largestFloat4 = 0;\n \
    \       float smallestFloat4 = 0;\n        float averageFloat4 = 0;\n        float\
    \ largestFloat5 = 0;\n        float smallestFloat5 = 0;\n        float averageFloat5\
    \ = 0;\n        float largestFloat6 = 0;\n        float smallestFloat6 = 0;\n\
    \        float averageFloat6 = 0;\n        float largestFloat7 = 0;\n        float\
    \ smallestFloat7 = 0;\n        float averageFloat7 = 0;\n        float largestFloat8\
    \ = 0;\n        float smallestFloat8 = 0;\n        float averageFloat8 = 0;\n\
    \        float largestFloat9 = 0;\n        float smallestFloat9 = 0;\n       \
    \ float averageFloat9 = 0;\n        float largestFloat10 = 0;\n        float smallestFloat10\
    \ = 0;\n        float averageFloat10 = 0;\n        float largestFloat11 = 0;\n\
    \        float smallestFloat11 = 0;\n        float averageFloat11 = 0;\n     \
    \   float largestFloat12 = 0;\n        float smallestFloat12 = 0;\n        float\
    \ averageFloat12 = 0;\n        float largestFloat13 = 0;\n        float smallestFloat13\
    \ = 0;\n        float averageFloat13 = 0;\n        float largestFloat14 = 0;\n\
    \        float smallestFloat14 = 0;\n        float averageFloat14 = 0;\n     \
    \   float largestFloat15 = 0;\n        float smallestFloat15 = 0;\n        float\
    \ averageFloat15 = 0;\n        float largestFloat16 = 0;\n        float smallestFloat16\
    \ = 0;\n        float averageFloat16 = 0;\n        float largestFloat17 = 0;\n\
    \        float smallestFloat17 = 0;\n        float averageFloat17 = 0;\n     \
    \   float largestFloat18 = 0;\n        float smallestFloat18 = 0;\n        float\
    \ averageFloat18 = 0;\n        float largestFloat19 = 0;\n        float smallestFloat19\
    \ = 0;\n        float averageFloat19 = 0;\n        float largestFloat20 = 0;\n\
    \        float smallestFloat20 = 0;\n        float averageFloat20 = 0;\n     \
    \   float largestFloat21 = 0;\n        float smallestFloat21 = 0;\n        float\
    \ averageFloat21 = 0;\n        float largestFloat22 = 0;\n        float smallestFloat22\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphaqnfv1m.java:85: error: ';' expected\n        float smallestFloat22\n\
    \                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        if (l.isEmpty()) {\n            median = 0;\n        } else {\n     \
    \       int mid = l.size() / 2;\n            float leftMedian = median(l);\n \
    \           float rightMedian = median(l.subList(0, mid));\n            median\
    \ = (leftMedian + rightMedian) / 2;\n        }\n        return median;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzm4h2rqk.java:21: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n            float rightMedian = median(l.subList(0,\
    \ mid));\n                                                ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo1ztfrtf.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2q508qcs.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float max = 0;\n        float min = 0;\n        float temp = 0;\n\
    \        float temp2 = 0;\n        float temp3 = 0;\n        float temp4 = 0;\n\
    \        float temp5 = 0;\n        float temp6 = 0;\n        float temp7 = 0;\n\
    \        float temp8 = 0;\n        float temp9 = 0;\n        float temp10 = 0;\n\
    \        float temp11 = 0;\n        float temp12 = 0;\n        float temp13 =\
    \ 0;\n        float temp14 = 0;\n        float temp15 = 0;\n        float temp16\
    \ = 0;\n        float temp17 = 0;\n        float temp18 = 0;\n        float temp19\
    \ = 0;\n        float temp20 = 0;\n        float temp21 = 0;\n        float temp22\
    \ = 0;\n        float temp23 = 0;\n        float temp24 = 0;\n        float temp25\
    \ = 0;\n        float temp26 = 0;\n        float temp27 = 0;\n        float temp28\
    \ = 0;\n        float temp29 = 0;\n        float temp30 = 0;\n        float temp31\
    \ = 0;\n        float temp32 = 0;\n        float temp33 = 0;\n        float temp34\
    \ = 0;\n        float temp35 = 0;\n        float temp36 = 0;\n        float temp37\
    \ = 0;\n        float temp38 = 0;\n        float temp39 = 0;\n        float temp40\
    \ = 0;\n        float temp41 = 0;\n        float temp42 = 0;\n        float temp43\
    \ = 0;\n        float temp44 = 0;\n        float temp45 = 0;\n        float temp46\
    \ = 0;\n        float temp47 = 0;\n        float temp48 = 0;\n        float temp49\
    \ = 0;\n        float temp50 = 0;\n        float temp51 = 0;\n        float temp52\
    \ = 0;\n        float temp53 = 0;\n        float temp54 = 0;\n        float temp55\
    \ = 0;\n        float temp56 = 0;\n        float temp57 = 0;\n        float temp58\
    \ = 0;\n        float temp59 = 0;\n        float temp60 = 0;\n        float temp61\
    \ = 0;\n        float temp62 = 0;\n        float temp63 = 0;\n        float temp64\
    \ = 0;\n        float temp65 = 0;\n        float temp66 = 0;\n        float temp67\
    \ = 0;\n        float temp68 = 0;\n        float temp69 = 0;\n        float temp70\
    \ = 0;\n        float temp71 = 0;\n        float temp72 = 0;\n        float temp73\
    \ = 0;\n        float temp74 = 0;\n        float temp75 = 0;\n        float temp76\
    \ = 0;\n        float temp77 = 0;\n        float temp78 = 0;\n        float temp79\
    \ = 0;\n        float temp80 = 0;\n        float temp81 = 0;\n        float \n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcyb8qdfm.java:102: error: not a statement\n        float \n   \
    \     ^\n/tmp/tmpcyb8qdfm.java:102: error: ';' expected\n        float \n    \
    \         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float count\
    \ = 0;\n        float temp = 0;\n        float temp2 = 0;\n        float temp3\
    \ = 0;\n        float temp4 = 0;\n        float temp5 = 0;\n        float temp6\
    \ = 0;\n        float temp7 = 0;\n        float temp8 = 0;\n        float temp9\
    \ = 0;\n        float temp10 = 0;\n        float temp11 = 0;\n        float temp12\
    \ = 0;\n        float temp13 = 0;\n        float temp14 = 0;\n        float temp15\
    \ = 0;\n        float temp16 = 0;\n        float temp17 = 0;\n        float temp18\
    \ = 0;\n        float temp19 = 0;\n        float temp20 = 0;\n        float temp21\
    \ = 0;\n        float temp22 = 0;\n        float temp23 = 0;\n        float temp24\
    \ = 0;\n        float temp25 = 0;\n        float temp26 = 0;\n        float temp27\
    \ = 0;\n        float temp28 = 0;\n        float temp29 = 0;\n        float temp30\
    \ = 0;\n        float temp31 = 0;\n        float temp32 = 0;\n        float temp33\
    \ = 0;\n        float temp34 = 0;\n        float temp35 = 0;\n        float temp36\
    \ = 0;\n        float temp37 = 0;\n        float temp38 = 0;\n        float temp39\
    \ = 0;\n        float temp40 = 0;\n        float temp41 = 0;\n        float temp42\
    \ = 0;\n        float temp43 = 0;\n        float temp44 = 0;\n        float temp45\
    \ = 0;\n        float temp46 = 0;\n        float temp47 = 0;\n        float temp48\
    \ = 0;\n        float temp49 = 0;\n        float temp50 = 0;\n        float temp51\
    \ = 0;\n        float temp52 = 0;\n        float temp53 = 0;\n        float temp54\
    \ = 0;\n        float temp55 = 0;\n        float temp56 = 0;\n        float temp57\
    \ = 0;\n        float temp58 = 0;\n        float temp59 = 0;\n        float temp60\
    \ = 0;\n        float temp61 = 0;\n        float temp62 = 0;\n        float temp63\
    \ = 0;\n        float temp64 = 0;\n        float temp65 = 0;\n        float temp66\
    \ = 0;\n        float temp67 = 0;\n        float temp68 = 0;\n        float temp69\
    \ = 0;\n        float temp70 = 0;\n        float temp71 = 0;\n        float temp72\
    \ = 0;\n        float temp73 = 0;\n        float temp74 = 0;\n        float temp75\
    \ = 0;\n        float temp76 = 0;\n        float temp77 = 0;\n        float temp78\
    \ = 0;\n        float temp79 = 0;\n        float temp80 = 0;\n        float temp81\
    \ = 0;\n        float temp82 = 0;\n        float temp83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprzvtnk77.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqtly5so.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        if (l.size() % 2 == 0) {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2).findFirst().getAsDouble();\n        } else {\n            median = (float)\
    \ l.stream().sorted().skip(l.size() / 2 + 1).findFirst().getAsDouble();\n    \
    \    }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwmltdsos.java:17: error: cannot find symbol\n            median\
    \ = (float) l.stream().sorted().skip(l.size() / 2).findFirst().getAsDouble();\n\
    \                                                                            \
    \   ^\n  symbol:   method getAsDouble()\n  location: class Optional<Long>\n/tmp/tmpwmltdsos.java:19:\
    \ error: cannot find symbol\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2 + 1).findFirst().getAsDouble();\n                                      \
    \                                             ^\n  symbol:   method getAsDouble()\n\
    \  location: class Optional<Long>\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferences = 0;\n        float\
    \ averageOfSquareOfDifferenceOfDifferences = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferences = 0;\n\
    \        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferences =\
    \ 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        float averageOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp85pmew2f.java:45: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        if (count > 0) {\n            average = sum / count;\n   \
    \     }\n        median = average;\n        return median;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3hifggk.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianOfElements;\n        float average;\n        float sum = 0;\n\
    \        float count = 0;\n        float averageOfElements;\n        float sumOfElements;\n\
    \        float countOfElements;\n        float sumOfElementsOfElements;\n    \
    \    float countOfElementsOfElements;\n        float sumOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElements;\n        float sumOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElements;\n        float sumOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElementsOfElements;\n    \
    \    float sumOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float sumOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float sumOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float sumOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float sumOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float sumOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        float countOfElementsOfElementsOfElementsOfElement\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc9781b3f.java:42: error: ';' expected\n        float countOfElementsOfElementsOfElementsOfElement\n\
    \                                                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianIndex;\n        long medianValue;\n        float medianValue2;\n\
    \        float medianValue3;\n        float medianValue4;\n        float medianValue5;\n\
    \        float medianValue6;\n        float medianValue7;\n        float medianValue8;\n\
    \        float medianValue9;\n        float medianValue10;\n        float medianValue11;\n\
    \        float medianValue12;\n        float medianValue13;\n        float medianValue14;\n\
    \        float medianValue15;\n        float medianValue16;\n        float medianValue17;\n\
    \        float medianValue18;\n        float medianValue19;\n        float medianValue20;\n\
    \        float medianValue21;\n        float medianValue22;\n        float medianValue23;\n\
    \        float medianValue24;\n        float medianValue25;\n        float medianValue26;\n\
    \        float medianValue27;\n        float medianValue28;\n        float medianValue29;\n\
    \        float medianValue30;\n        float medianValue31;\n        float medianValue32;\n\
    \        float medianValue33;\n        float medianValue34;\n        float medianValue35;\n\
    \        float medianValue36;\n        float medianValue37;\n        float medianValue38;\n\
    \        float medianValue39;\n        float medianValue40;\n        float medianValue41;\n\
    \        float medianValue42;\n        float medianValue43;\n        float medianValue44;\n\
    \        float medianValue45;\n        float medianValue46;\n        float medianValue47;\n\
    \        float medianValue48;\n        float medianValue49;\n        float medianValue50;\n\
    \        float medianValue51;\n        float medianValue52;\n        float medianValue53;\n\
    \        float medianValue54;\n        float medianValue55;\n        float medianValue56;\n\
    \        float medianValue57;\n        float medianValue58;\n        float medianValue59;\n\
    \        float medianValue60;\n        float medianValue61;\n        float medianValue62;\n\
    \        float medianValue63;\n        float medianValue64;\n        float medianValue65;\n\
    \        float medianValue66;\n        float medianValue67;\n        float medianValue68;\n\
    \        float medianValue69;\n        float medianValue70;\n        float medianValue71;\n\
    \        float medianValue72;\n        float medianValue73;\n        float medianValue74;\n\
    \        float medianValue75\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpej3gg972.java:91: error: ';' expected\n        float medianValue75\n\
    \                           ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float temp\
    \ = 0;\n        float count = 0;\n        float sum2 = 0;\n        float average2\
    \ = 0;\n        float temp2 = 0;\n        float count2 = 0;\n        float sum3\
    \ = 0;\n        float average3 = 0;\n        float temp3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float temp4\
    \ = 0;\n        float count4 = 0;\n        float sum5 = 0;\n        float average5\
    \ = 0;\n        float temp5 = 0;\n        float count5 = 0;\n        float sum6\
    \ = 0;\n        float average6 = 0;\n        float temp6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float temp7\
    \ = 0;\n        float count7 = 0;\n        float sum8 = 0;\n        float average8\
    \ = 0;\n        float temp8 = 0;\n        float count8 = 0;\n        float sum9\
    \ = 0;\n        float average9 = 0;\n        float temp9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ temp10 = 0;\n        float count10 = 0;\n        float sum11 = 0;\n        float\
    \ average11 = 0;\n        float temp11 = 0;\n        float count11 = 0;\n    \
    \    float sum12 = 0;\n        float average12 = 0;\n        float temp12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float temp13 = 0;\n        float count13 = 0;\n        float sum14\
    \ = 0;\n        float average14 = 0;\n        float temp14 = 0;\n        float\
    \ count14 = 0;\n        float sum15 = 0;\n        float average15 = 0;\n     \
    \   float temp15 = 0;\n        float count15 = 0;\n        float sum16 = 0;\n\
    \        float average16 = 0;\n        float temp16 = 0;\n        float count16\
    \ = 0;\n        float sum17 = 0;\n        float average17 = 0;\n        float\
    \ temp17 = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float\
    \ average18 = 0;\n        float temp18 = 0;\n        float count18 = 0;\n    \
    \    float sum19 = 0;\n        float average19 = 0;\n        float temp19 = 0;\n\
    \        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float temp20 = 0;\n        float count20 = 0;\n        float sum21\
    \ = 0;\n        float average21 = 0;\n        float temp21 = 0;\n        float\
    \ count21 = 0;\n        float sum22 = 0;\n        float average22 = 0;\n     \
    \   float temp22 = 0;\n        float count22 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_84llvrn.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for (long i : l) {\n     \
    \       if (i < average) {\n                median += i;\n            }\n    \
    \    }\n        return median / count;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6n3h7msi.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        for (Long i : l) {\n            sum +=\
    \ i;\n        }\n        float average = sum / l.size();\n        for (Long i\
    \ : l) {\n            float diff = i - average;\n            if (diff > median)\
    \ {\n                median = diff;\n            }\n        }\n        return\
    \ median;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjv_lfeiq.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long median\
    \ = Collections.max(l) + Collections.min(l);\n        return (float) median /\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeam6tufc.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float max = 0;\n        float min = 0;\n        float sum2 = 0;\n\
    \        float average2 = 0;\n        float count2 = 0;\n        float max2 =\
    \ 0;\n        float min2 = 0;\n        float sum3 = 0;\n        float average3\
    \ = 0;\n        float count3 = 0;\n        float max3 = 0;\n        float min3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float max4 = 0;\n        float min4 = 0;\n        float sum5 =\
    \ 0;\n        float average5 = 0;\n        float count5 = 0;\n        float max5\
    \ = 0;\n        float min5 = 0;\n        float sum6 = 0;\n        float average6\
    \ = 0;\n        float count6 = 0;\n        float max6 = 0;\n        float min6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float max7 = 0;\n        float min7 = 0;\n        float sum8 =\
    \ 0;\n        float average8 = 0;\n        float count8 = 0;\n        float max8\
    \ = 0;\n        float min8 = 0;\n        float sum9 = 0;\n        float average9\
    \ = 0;\n        float count9 = 0;\n        float max9 = 0;\n        float min9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float max10 = 0;\n        float min10 = 0;\n        float\
    \ sum11 = 0;\n        float average11 = 0;\n        float count11 = 0;\n     \
    \   float max11 = 0;\n        float min11 = 0;\n        float sum12 = 0;\n   \
    \     float average12 = 0;\n        float count12 = 0;\n        float max12 =\
    \ 0;\n        float min12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float max13 = 0;\n        float min13\
    \ = 0;\n        float sum14 = 0;\n        float average14 = 0;\n        float\
    \ count14 = 0;\n        float max14 = 0;\n        float min14 = 0;\n        float\
    \ sum15 = 0;\n        float average15 = 0;\n        float count15 = 0;\n     \
    \   float max15 = 0;\n        float min15 = 0;\n        float sum16 = 0;\n   \
    \     float average16 = 0;\n        float count16 = 0;\n        float max16 =\
    \ 0;\n        float min16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float max17 = 0;\n        float min17\
    \ = 0;\n        float sum18 = 0;\n        float average18 = 0;\n        float\
    \ count18 = 0;\n        float max18 = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp0yl9lcb.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        float temp = 0;\n        for\
    \ (long i : l) {\n            temp = average - i;\n            if (temp < 0) {\n\
    \                temp = temp * -1;\n            }\n            if (temp > median)\
    \ {\n                median = temp;\n            }\n        }\n        return\
    \ median;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1jvphch.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4riq66hw.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long low\
    \ = l.get(0);\n        long high = l.get(l.size() - 1);\n        float median\
    \ = (float) (low + high) / 2;\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp86l_hzg5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        if (l.size() % 2 == 0) {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2).findFirst().get();\n        } else {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2 + 1).findFirst().get();\n        }\n        return median;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_1aaxbq4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long largest = Collections.max(l);\n        long smallest = Collections.min(l);\n\
    \        float average = (float) largest / l.size();\n        float difference\
    \ = largest - smallest;\n        float averageDifference = difference / l.size();\n\
    \        float sum = 0;\n        float count = 0;\n        for (long i : l) {\n\
    \            sum += i;\n            count++;\n        }\n        float averageSum\
    \ = sum / count;\n        float averageDifferenceSum = averageDifference / count;\n\
    \        float medianSum = average + averageDifferenceSum;\n        float median\
    \ = medianSum / 2;\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9x6ziqqq.java:30: error: variable median is already defined in\
    \ method median(ArrayList<Long>)\n        float median = medianSum / 2;\n    \
    \          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float count = 0;\n        for (Long i : l) {\n\
    \            sum += i;\n            count++;\n        }\n        if (count % 2\
    \ == 0) {\n            median = (sum / 2);\n        } else {\n            median\
    \ = (sum / 2) + 0.5f;\n        }\n        return median;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_c7xdtr.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsjehg03.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size()/2);\n        return median;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoegq57g1.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float temp = 0;\n        float temp2 = 0;\n        float temp3\
    \ = 0;\n        float temp4 = 0;\n        float temp5 = 0;\n        float temp6\
    \ = 0;\n        float temp7 = 0;\n        float temp8 = 0;\n        float temp9\
    \ = 0;\n        float temp10 = 0;\n        float temp11 = 0;\n        float temp12\
    \ = 0;\n        float temp13 = 0;\n        float temp14 = 0;\n        float temp15\
    \ = 0;\n        float temp16 = 0;\n        float temp17 = 0;\n        float temp18\
    \ = 0;\n        float temp19 = 0;\n        float temp20 = 0;\n        float temp21\
    \ = 0;\n        float temp22 = 0;\n        float temp23 = 0;\n        float temp24\
    \ = 0;\n        float temp25 = 0;\n        float temp26 = 0;\n        float temp27\
    \ = 0;\n        float temp28 = 0;\n        float temp29 = 0;\n        float temp30\
    \ = 0;\n        float temp31 = 0;\n        float temp32 = 0;\n        float temp33\
    \ = 0;\n        float temp34 = 0;\n        float temp35 = 0;\n        float temp36\
    \ = 0;\n        float temp37 = 0;\n        float temp38 = 0;\n        float temp39\
    \ = 0;\n        float temp40 = 0;\n        float temp41 = 0;\n        float temp42\
    \ = 0;\n        float temp43 = 0;\n        float temp44 = 0;\n        float temp45\
    \ = 0;\n        float temp46 = 0;\n        float temp47 = 0;\n        float temp48\
    \ = 0;\n        float temp49 = 0;\n        float temp50 = 0;\n        float temp51\
    \ = 0;\n        float temp52 = 0;\n        float temp53 = 0;\n        float temp54\
    \ = 0;\n        float temp55 = 0;\n        float temp56 = 0;\n        float temp57\
    \ = 0;\n        float temp58 = 0;\n        float temp59 = 0;\n        float temp60\
    \ = 0;\n        float temp61 = 0;\n        float temp62 = 0;\n        float temp63\
    \ = 0;\n        float temp64 = 0;\n        float temp65 = 0;\n        float temp66\
    \ = 0;\n        float temp67 = 0;\n        float temp68 = 0;\n        float temp69\
    \ = 0;\n        float temp70 = 0;\n        float temp71 = 0;\n        float temp72\
    \ = 0;\n        float temp73 = 0;\n        float temp74 = 0;\n        float temp75\
    \ = 0;\n        float temp76 = 0;\n        float temp77 = 0;\n        float temp78\
    \ = 0;\n        float temp79 = 0;\n        float temp80 = 0;\n        float temp81\
    \ = 0;\n        float temp82 = 0;\n        float temp83 = 0;\n        \n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzu4cxbj4.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.get(l.size()/2);\n        return mid;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplg9yys3x.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.get(l.size() / 2);\n        return mid;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rpps55y.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for (Long i : l) {\n     \
    \       if (i < average) {\n                median = i;\n                break;\n\
    \            }\n        }\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp000s0g88.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc6cj_kc8.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long median\
    \ = Collections.max(l) + Collections.min(l);\n        return (float)median / 2;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ixt2qau.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianOfAllElements;\n        float average;\n        float sum\
    \ = 0;\n        float count = 0;\n        float averageOfAllElements = 0;\n  \
    \      float sumOfAllElements = 0;\n        float countOfAllElements = 0;\n  \
    \      float averageOfAllElementsOfAllElements = 0;\n        float sumOfAllElementsOfAllElements\
    \ = 0;\n        float countOfAllElementsOfAllElements = 0;\n        float averageOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float sumOfAllElementsOfAllElementsOfAllElements = 0;\n      \
    \  float countOfAllElementsOfAllElementsOfAllElements = 0;\n        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float countOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float countOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float countOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float countOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements\
    \ = 0;\n        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAll\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9utepvlo.java:42: error: ';' expected\n        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAll\n\
    \                                                                            \
    \                        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphbg5w8n5.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    float largest = l.get(0);\n        float smallest = l.get(0);\n        for\
    \ (long i : l) {\n            sum += i;\n            if (i < largest) {\n    \
    \            largest = i;\n            }\n            if (i > smallest) {\n  \
    \              smallest = i;\n            }\n            count++;\n        }\n\
    \        average = sum / count;\n        median = (float) (average + ((count %\
    \ 2 == 0) ? 0.5 : -0.5));\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_el_uk48.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long median\
    \ = Collections.max(l) + Collections.min(l);\n        return (float) median /\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhdxncuu.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsuc2d0wd.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float temp;\n       \
    \ float count = 0;\n        float temp2;\n        float temp3;\n        float\
    \ temp4;\n        float temp5;\n        float temp6;\n        float temp7;\n \
    \       float temp8;\n        float temp9;\n        float temp10;\n        float\
    \ temp11;\n        float temp12;\n        float temp13;\n        float temp14;\n\
    \        float temp15;\n        float temp16;\n        float temp17;\n       \
    \ float temp18;\n        float temp19;\n        float temp20;\n        float temp21;\n\
    \        float temp22;\n        float temp23;\n        float temp24;\n       \
    \ float temp25;\n        float temp26;\n        float temp27;\n        float temp28;\n\
    \        float temp29;\n        float temp30;\n        float temp31;\n       \
    \ float temp32;\n        float temp33;\n        float temp34;\n        float temp35;\n\
    \        float temp36;\n        float temp37;\n        float temp38;\n       \
    \ float temp39;\n        float temp40;\n        float temp41;\n        float temp42;\n\
    \        float temp43;\n        float temp44;\n        float temp45;\n       \
    \ float temp46;\n        float temp47;\n        float temp48;\n        float temp49;\n\
    \        float temp50;\n        float temp51;\n        float temp52;\n       \
    \ float temp53;\n        float temp54;\n        float temp55;\n        float temp56;\n\
    \        float temp57;\n        float temp58;\n        float temp59;\n       \
    \ float temp60;\n        float temp61;\n        float temp62;\n        float temp63;\n\
    \        float temp64;\n        float temp65;\n        float temp66;\n       \
    \ float temp67;\n        float temp68;\n        float temp69;\n        float temp70;\n\
    \        float temp71;\n        float temp72;\n        float temp73;\n       \
    \ float temp74;\n        float temp75;\n        float temp76;\n        float temp77;\n\
    \        float temp78;\n        float temp79;\n        float temp80;\n       \
    \ float temp81;\n        float temp82;\n        float temp83;\n        float temp84;\n\
    \        float temp85;\n        float temp\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpauue2yf6.java:104: error: ';' expected\n        float temp\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwx16s_o.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        if (count > 0) {\n            average = sum / count;\n   \
    \     }\n        float median = 0;\n        for (Long i : l) {\n            float\
    \ temp = (float) i;\n            float temp2 = (float) average;\n            float\
    \ temp3 = (float) median;\n            if (temp == temp2) {\n                median\
    \ = temp3;\n            }\n        }\n        return median;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt4f6dq1n.java:26: error: variable median is already defined in\
    \ method median(ArrayList<Long>)\n        float median = 0;\n              ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsmqeu5bn.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        return (float) l.get(mid);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdkw6pjcz.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average = 0;\n        float count = 0;\n\
    \        float sum2 = 0;\n        float average2 = 0;\n        float count2 =\
    \ 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp33die7ki.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        if (count > 0) {\n            average = sum / count;\n   \
    \     }\n        for (Long i : l) {\n            if (i < average) {\n        \
    \        median += i;\n            }\n        }\n        return median;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqogodmwm.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        long largest = Collections.max(l);\n        long smallest = Collections.min(l);\n\
    \        float largestFloat = Float.parseFloat(String.valueOf(largest));\n   \
    \     float smallestFloat = Float.parseFloat(String.valueOf(smallest));\n    \
    \    float average = (largestFloat + smallestFloat) / 2;\n        float difference\
    \ = largest - smallest;\n        float averageFloat = Float.parseFloat(String.valueOf(average));\n\
    \        float differenceFloat = Float.parseFloat(String.valueOf(difference));\n\
    \        float differenceInPercentage = differenceFloat * 100 / averageFloat;\n\
    \        float differenceInPercentageInPercentage = differenceInPercentage * 100;\n\
    \        float differenceInPercentageInPercentageInPercentage = differenceInPercentageInPercentage\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentage * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentage * 100;\n      \
    \  float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentage * 100;\n\
    \        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentage * 100;\n\
    \        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentage * 100;\n\
    \        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ * 100;\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ * 100;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvkucorre.java:31: error: variable differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ is already defined in method median(ArrayList<Long>)\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentage * 100;\n\
    \              ^\n/tmp/tmpvkucorre.java:34: error: variable differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ is already defined in method median(ArrayList<Long>)\n        float differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ = differenceInPercentageInPercentageInPercentageInPercentageInPercentageInPercentage\
    \ * 100;\n              ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        if (count > 0) {\n            average = sum / count;\n   \
    \     }\n        for (Long i : l) {\n            if (i < average) {\n        \
    \        median += i;\n            }\n        }\n        return median;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4y7azrqw.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float sumOfSquareOfSums = 0;\n\
    \        float sumOfSquareOfSumOfSquares = 0;\n        float sumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquares = 0;\n        float\
    \ sumOfSquareOfSumOfSquareOfSumOfSquareOfSums = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquares\
    \ = 0;\n        float sumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSums\
    \ = 0;\n        float sumOfSquareOfSumOfSquare\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr9_0_bnp.java:39: error: ';' expected\n        float sumOfSquareOfSumOfSquare\n\
    \                                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for(long i : l) {\n      \
    \      if(average - i < 0) {\n                median += i;\n            }\n  \
    \          if(average - i > 0) {\n                median += i;\n            }\n\
    \        }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvm134no1.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        for (long i : l) {\n            sum +=\
    \ i;\n        }\n        float average = sum / l.size();\n        float count\
    \ = 0;\n        for (long i : l) {\n            if (i == average) {\n        \
    \        count++;\n            }\n        }\n        if (count % 2 == 0) {\n \
    \           median = average - (average / 2);\n        } else {\n            median\
    \ = average + (average / 2);\n        }\n        return median;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmuu0j2y.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for(Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for(Long i : l) {\n      \
    \      if(average < i) {\n                median = i;\n            }\n       \
    \ }\n        return median;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzdautd4.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1nuxxda5.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.get(l.size() / 2);\n        return mid;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5drrgdq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsk2klzxe.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppoyed911.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float temp = 0;\n        float temp2 = 0;\n        float temp3\
    \ = 0;\n        float temp4 = 0;\n        float temp5 = 0;\n        float temp6\
    \ = 0;\n        float temp7 = 0;\n        float temp8 = 0;\n        float temp9\
    \ = 0;\n        float temp10 = 0;\n        float temp11 = 0;\n        float temp12\
    \ = 0;\n        float temp13 = 0;\n        float temp14 = 0;\n        float temp15\
    \ = 0;\n        float temp16 = 0;\n        float temp17 = 0;\n        float temp18\
    \ = 0;\n        float temp19 = 0;\n        float temp20 = 0;\n        float temp21\
    \ = 0;\n        float temp22 = 0;\n        float temp23 = 0;\n        float temp24\
    \ = 0;\n        float temp25 = 0;\n        float temp26 = 0;\n        float temp27\
    \ = 0;\n        float temp28 = 0;\n        float temp29 = 0;\n        float temp30\
    \ = 0;\n        float temp31 = 0;\n        float temp32 = 0;\n        float temp33\
    \ = 0;\n        float temp34 = 0;\n        float temp35 = 0;\n        float temp36\
    \ = 0;\n        float temp37 = 0;\n        float temp38 = 0;\n        float temp39\
    \ = 0;\n        float temp40 = 0;\n        float temp41 = 0;\n        float temp42\
    \ = 0;\n        float temp43 = 0;\n        float temp44 = 0;\n        float temp45\
    \ = 0;\n        float temp46 = 0;\n        float temp47 = 0;\n        float temp48\
    \ = 0;\n        float temp49 = 0;\n        float temp50 = 0;\n        float temp51\
    \ = 0;\n        float temp52 = 0;\n        float temp53 = 0;\n        float temp54\
    \ = 0;\n        float temp55 = 0;\n        float temp56 = 0;\n        float temp57\
    \ = 0;\n        float temp58 = 0;\n        float temp59 = 0;\n        float temp60\
    \ = 0;\n        float temp61 = 0;\n        float temp62 = 0;\n        float temp63\
    \ = 0;\n        float temp64 = 0;\n        float temp65 = 0;\n        float temp66\
    \ = 0;\n        float temp67 = 0;\n        float temp68 = 0;\n        float temp69\
    \ = 0;\n        float temp70 = 0;\n        float temp71 = 0;\n        float temp72\
    \ = 0;\n        float temp73 = 0;\n        float temp74 = 0;\n        float temp75\
    \ = 0;\n        float temp76 = 0;\n        float temp77 = 0;\n        float temp78\
    \ = 0;\n        float temp79 = 0;\n        float temp80 = 0;\n        float temp81\
    \ = 0;\n        float temp82 = 0;\n        float temp83 = 0;\n        \n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx4r485w2.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgj8z6kn.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianOfAllElements;\n        long total = 0;\n        long count\
    \ = 0;\n        for (long i : l) {\n            total += i;\n            count++;\n\
    \        }\n        if (count == 0) {\n            median = -1;\n        } else\
    \ {\n            medianOfAllElements = total / count;\n            median = Float.parseFloat(String.valueOf(medianOfAllElements));\n\
    \        }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe50olw6m.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n       \
    \     return l.get(mid);\n        } else {\n            return (float) l.get(mid)\
    \ + l.get(mid + 1);\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg_eksf19.java:18: error: no suitable method found for get(float)\n\
    \            return l.get(mid);\n                    ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ float to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from float to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ float to int)\n/tmp/tmpg_eksf19.java:20: error: no suitable method found for\
    \ get(float)\n            return (float) l.get(mid) + l.get(mid + 1);\n      \
    \                      ^\n    method List.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from float to int)\n    method AbstractList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ float to int)\n    method ArrayList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from float to int)\n/tmp/tmpg_eksf19.java:20:\
    \ error: no suitable method found for get(float)\n            return (float) l.get(mid)\
    \ + l.get(mid + 1);\n                                         ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ float to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from float to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ float to int)\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float\
    \ averageOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n\
    \        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n\
    \        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares =\
    \ 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float sumOfSquares\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps1b3xf_0.java:41: error: ';' expected\n        float sumOfSquares\n\
    \                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        if (count > 0) {\n            average = sum / count;\n   \
    \     }\n        for (long i : l) {\n            if (i < average) {\n        \
    \        median += i;\n            }\n        }\n        return median;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1631ko_x.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long low\
    \ = l.get(0);\n        long high = l.get(l.size() - 1);\n        float mid = (low\
    \ + high) / 2;\n        float median = (low + high) / 2;\n        float median1\
    \ = (low + high) / 2;\n        float median2 = (low + high) / 2;\n        float\
    \ median3 = (low + high) / 2;\n        float median4 = (low + high) / 2;\n   \
    \     float median5 = (low + high) / 2;\n        float median6 = (low + high)\
    \ / 2;\n        float median7 = (low + high) / 2;\n        float median8 = (low\
    \ + high) / 2;\n        float median9 = (low + high) / 2;\n        float median10\
    \ = (low + high) / 2;\n        float median11 = (low + high) / 2;\n        float\
    \ median12 = (low + high) / 2;\n        float median13 = (low + high) / 2;\n \
    \       float median14 = (low + high) / 2;\n        float median15 = (low + high)\
    \ / 2;\n        float median16 = (low + high) / 2;\n        float median17 = (low\
    \ + high) / 2;\n        float median18 = (low + high) / 2;\n        float median19\
    \ = (low + high) / 2;\n        float median20 = (low + high) / 2;\n        float\
    \ median21 = (low + high) / 2;\n        float median22 = (low + high) / 2;\n \
    \       float median23 = (low + high) / 2;\n        float median24 = (low + high)\
    \ / 2;\n        float median25 = (low + high) / 2;\n        float median26 = (low\
    \ + high) / 2;\n        float median27 = (low + high) / 2;\n        float median28\
    \ = (low + high) / 2;\n        float median29 = (low + high) / 2;\n        float\
    \ median30 = (low + high) / 2;\n        float median31 = (low + high) / 2;\n \
    \       float median32 = (low + high) / 2;\n        float median33 = (low + high)\
    \ / 2;\n        float median34 = (low + high) / 2;\n        float median35 = (low\
    \ + high) / 2;\n        float median36 = (low + high) / 2;\n        float median37\
    \ = (low + high) / 2;\n        float median38 = (low + high) / 2;\n        float\
    \ median39 = (low + high) / 2;\n        float median40 = (low + high) / 2;\n \
    \       float median41 = (low + high) / 2;\n        float median42 = (low + high)\
    \ / 2;\n        float median43 = (low + high) / \n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6cq_3jbj.java:62: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp6cq_3jbj.java:63: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp6cq_3jbj.java:63: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp6cq_3jbj.java:63:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp6cq_3jbj.java:63: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp6cq_3jbj.java:63:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp6cq_3jbj.java:71: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for(Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for(Long i : l) {\n      \
    \      if(average == i) {\n                median = i;\n                break;\n\
    \            }\n        }\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpg0ijha.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average = 0;\n        float count = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquares =\
    \ 0;\n        float medianOfSquares = 0;\n        float averageOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquares = 0;\n      \
    \  float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float\
    \ medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOf\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpimqogvyy.java:43: error: ';' expected\n        float medianOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOf\n\
    \                                                                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average = 0;\n        float count = 0;\n\
    \        float sum2 = 0;\n        float average2 = 0;\n        float count2 =\
    \ 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuzq72eo6.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float max = 0;\n        float min = 0;\n        float sum2 = 0;\n\
    \        float average2 = 0;\n        float count2 = 0;\n        float max2 =\
    \ 0;\n        float min2 = 0;\n        float sum3 = 0;\n        float average3\
    \ = 0;\n        float count3 = 0;\n        float max3 = 0;\n        float min3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float max4 = 0;\n        float min4 = 0;\n        float sum5 =\
    \ 0;\n        float average5 = 0;\n        float count5 = 0;\n        float max5\
    \ = 0;\n        float min5 = 0;\n        float sum6 = 0;\n        float average6\
    \ = 0;\n        float count6 = 0;\n        float max6 = 0;\n        float min6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float max7 = 0;\n        float min7 = 0;\n        float sum8 =\
    \ 0;\n        float average8 = 0;\n        float count8 = 0;\n        float max8\
    \ = 0;\n        float min8 = 0;\n        float sum9 = 0;\n        float average9\
    \ = 0;\n        float count9 = 0;\n        float max9 = 0;\n        float min9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float max10 = 0;\n        float min10 = 0;\n        float\
    \ sum11 = 0;\n        float average11 = 0;\n        float count11 = 0;\n     \
    \   float max11 = 0;\n        float min11 = 0;\n        float sum12 = 0;\n   \
    \     float average12 = 0;\n        float count12 = 0;\n        float max12 =\
    \ 0;\n        float min12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float max13 = 0;\n        float min13\
    \ = 0;\n        float sum14 = 0;\n        float average14 = 0;\n        float\
    \ count14 = 0;\n        float max14 = 0;\n        float min14 = 0;\n        float\
    \ sum15 = 0;\n        float average15 = 0;\n        float count15 = 0;\n     \
    \   float max15 = 0;\n        float min15 = 0;\n        float sum16 = 0;\n   \
    \     float average16 = 0;\n        float count16 = 0;\n        float max16 =\
    \ 0;\n        float min16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float max17 = 0;\n        float min17\
    \ = 0;\n        float sum18 = 0;\n        float average18 = 0;\n        float\
    \ count18 = 0;\n        float max18 = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy9eir6ph.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx3iwvyy3.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpijjtwqf3.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpix11k0o3.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float total = 0;\n        float count = 0;\n        float average;\n\
    \        float temp;\n        float temp2;\n        float temp3;\n        float\
    \ temp4;\n        float temp5;\n        float temp6;\n        float temp7;\n \
    \       float temp8;\n        float temp9;\n        float temp10;\n        float\
    \ temp11;\n        float temp12;\n        float temp13;\n        float temp14;\n\
    \        float temp15;\n        float temp16;\n        float temp17;\n       \
    \ float temp18;\n        float temp19;\n        float temp20;\n        float temp21;\n\
    \        float temp22;\n        float temp23;\n        float temp24;\n       \
    \ float temp25;\n        float temp26;\n        float temp27;\n        float temp28;\n\
    \        float temp29;\n        float temp30;\n        float temp31;\n       \
    \ float temp32;\n        float temp33;\n        float temp34;\n        float temp35;\n\
    \        float temp36;\n        float temp37;\n        float temp38;\n       \
    \ float temp39;\n        float temp40;\n        float temp41;\n        float temp42;\n\
    \        float temp43;\n        float temp44;\n        float temp45;\n       \
    \ float temp46;\n        float temp47;\n        float temp48;\n        float temp49;\n\
    \        float temp50;\n        float temp51;\n        float temp52;\n       \
    \ float temp53;\n        float temp54;\n        float temp55;\n        float temp56;\n\
    \        float temp57;\n        float temp58;\n        float temp59;\n       \
    \ float temp60;\n        float temp61;\n        float temp62;\n        float temp63;\n\
    \        float temp64;\n        float temp65;\n        float temp66;\n       \
    \ float temp67;\n        float temp68;\n        float temp69;\n        float temp70;\n\
    \        float temp71;\n        float temp72;\n        float temp73;\n       \
    \ float temp74;\n        float temp75;\n        float temp76;\n        float temp77;\n\
    \        float temp78;\n        float temp79;\n        float temp80;\n       \
    \ float temp81;\n        float temp82;\n        float temp83;\n        float temp84;\n\
    \        float temp85;\n        float temp\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3rx8hrf0.java:104: error: ';' expected\n        float temp\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        if (l.size() % 2 == 0) {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2).findFirst().get();\n        } else {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2 + 1).findFirst().get();\n        }\n        return median;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgpiyf2o.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float max = 0;\n        float min = 0;\n        float sum2 = 0;\n\
    \        float average2 = 0;\n        float count2 = 0;\n        float max2 =\
    \ 0;\n        float min2 = 0;\n        float sum3 = 0;\n        float average3\
    \ = 0;\n        float count3 = 0;\n        float max3 = 0;\n        float min3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float max4 = 0;\n        float min4 = 0;\n        float sum5 =\
    \ 0;\n        float average5 = 0;\n        float count5 = 0;\n        float max5\
    \ = 0;\n        float min5 = 0;\n        float sum6 = 0;\n        float average6\
    \ = 0;\n        float count6 = 0;\n        float max6 = 0;\n        float min6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float max7 = 0;\n        float min7 = 0;\n        float sum8 =\
    \ 0;\n        float average8 = 0;\n        float count8 = 0;\n        float max8\
    \ = 0;\n        float min8 = 0;\n        float sum9 = 0;\n        float average9\
    \ = 0;\n        float count9 = 0;\n        float max9 = 0;\n        float min9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float max10 = 0;\n        float min10 = 0;\n        float\
    \ sum11 = 0;\n        float average11 = 0;\n        float count11 = 0;\n     \
    \   float max11 = 0;\n        float min11 = 0;\n        float sum12 = 0;\n   \
    \     float average12 = 0;\n        float count12 = 0;\n        float max12 =\
    \ 0;\n        float min12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float max13 = 0;\n        float min13\
    \ = 0;\n        float sum14 = 0;\n        float average14 = 0;\n        float\
    \ count14 = 0;\n        float max14 = 0;\n        float min14 = 0;\n        float\
    \ sum15 = 0;\n        float average15 = 0;\n        float count15 = 0;\n     \
    \   float max15 = 0;\n        float min15 = 0;\n        float sum16 = 0;\n   \
    \     float average16 = 0;\n        float count16 = 0;\n        float max16 =\
    \ 0;\n        float min16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float max17 = 0;\n        float min17\
    \ = 0;\n        float sum18 = 0;\n        float average18 = 0;\n        float\
    \ count18 = 0;\n        float max18 = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbj2e5gvp.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnjujoxx.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        if (l.isEmpty()) {\n            median = 0;\n        } else {\n     \
    \       int mid = l.size() / 2;\n            float leftMedian = median(l.subList(0,\
    \ mid));\n            float rightMedian = median(l.subList(mid, l.size()));\n\
    \            median = (leftMedian + rightMedian) / 2;\n        }\n        return\
    \ median;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3vh581rd.java:20: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n            float leftMedian = median(l.subList(0,\
    \ mid));\n                                               ^\n/tmp/tmp3vh581rd.java:21:\
    \ error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n\
    \            float rightMedian = median(l.subList(mid, l.size()));\n         \
    \                                       ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.get(l.size()/2);\n        return mid;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi__bocd2.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = l.get(l.size()/2);\n        return median;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_drtjcn.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferences = 0;\n        float averageOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferencesOfDifferences = 0;\n        float sumOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float sumOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmploxg3w9m.java:50: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianIndex;\n        long medianValue;\n        float medianValueFloat;\n\
    \        float medianValueFloat2;\n        float medianValueFloat3;\n        float\
    \ medianValueFloat4;\n        float medianValueFloat5;\n        float medianValueFloat6;\n\
    \        float medianValueFloat7;\n        float medianValueFloat8;\n        float\
    \ medianValueFloat9;\n        float medianValueFloat10;\n        float medianValueFloat11;\n\
    \        float medianValueFloat12;\n        float medianValueFloat13;\n      \
    \  float medianValueFloat14;\n        float medianValueFloat15;\n        float\
    \ medianValueFloat16;\n        float medianValueFloat17;\n        float medianValueFloat18;\n\
    \        float medianValueFloat19;\n        float medianValueFloat20;\n      \
    \  float medianValueFloat21;\n        float medianValueFloat22;\n        float\
    \ medianValueFloat23;\n        float medianValueFloat24;\n        float medianValueFloat25;\n\
    \        float medianValueFloat26;\n        float medianValueFloat27;\n      \
    \  float medianValueFloat28;\n        float medianValueFloat29;\n        float\
    \ medianValueFloat30;\n        float medianValueFloat31;\n        float medianValueFloat32;\n\
    \        float medianValueFloat33;\n        float medianValueFloat34;\n      \
    \  float medianValueFloat35;\n        float medianValueFloat36;\n        float\
    \ medianValueFloat37;\n        float medianValueFloat38;\n        float medianValueFloat39;\n\
    \        float medianValueFloat40;\n        float medianValueFloat41;\n      \
    \  float medianValueFloat42;\n        float medianValueFloat43;\n        float\
    \ medianValueFloat44;\n        float medianValueFloat45;\n        float medianValueFloat46;\n\
    \        float medianValueFloat47;\n        float medianValueFloat48;\n      \
    \  float medianValueFloat49;\n        float medianValueFloat50;\n        float\
    \ medianValueFloat51;\n        float medianValueFloat52;\n        float medianValueFloat53;\n\
    \        float medianValueFloat54;\n        float medianValueFloat55;\n      \
    \  float medianValueFloat56;\n        float medianValueFloat57;\n        float\
    \ medianValueFloat58;\n        float medianValueFloat59;\n        float medianValueFloat60;\n\
    \        float medianValueFloat61;\n        float medianValueFloat62;\n      \
    \  float medianValueFloat63;\n        float medianValueFloat64;\n        float\
    \ medianValueFloat\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpque7lzrn.java:82: error: ';' expected\n        float medianValueFloat\n\
    \                              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float temp;\n       \
    \ int count = 0;\n        float averageOfElements;\n        float sumOfElements;\n\
    \        float tempOfElements;\n        float tempOfElements2;\n        float\
    \ tempOfElements3;\n        float tempOfElements4;\n        float tempOfElements5;\n\
    \        float tempOfElements6;\n        float tempOfElements7;\n        float\
    \ tempOfElements8;\n        float tempOfElements9;\n        float tempOfElements10;\n\
    \        float tempOfElements11;\n        float tempOfElements12;\n        float\
    \ tempOfElements13;\n        float tempOfElements14;\n        float tempOfElements15;\n\
    \        float tempOfElements16;\n        float tempOfElements17;\n        float\
    \ tempOfElements18;\n        float tempOfElements19;\n        float tempOfElements20;\n\
    \        float tempOfElements21;\n        float tempOfElements22;\n        float\
    \ tempOfElements23;\n        float tempOfElements24;\n        float tempOfElements25;\n\
    \        float tempOfElements26;\n        float tempOfElements27;\n        float\
    \ tempOfElements28;\n        float tempOfElements29;\n        float tempOfElements30;\n\
    \        float tempOfElements31;\n        float tempOfElements32;\n        float\
    \ tempOfElements33;\n        float tempOfElements34;\n        float tempOfElements35;\n\
    \        float tempOfElements36;\n        float tempOfElements37;\n        float\
    \ tempOfElements38;\n        float tempOfElements39;\n        float tempOfElements40;\n\
    \        float tempOfElements41;\n        float tempOfElements42;\n        float\
    \ tempOfElements43;\n        float tempOfElements44;\n        float tempOfElements45;\n\
    \        float tempOfElements46;\n        float tempOfElements47;\n        float\
    \ tempOfElements48;\n        float tempOfElements49;\n        float tempOfElements50;\n\
    \        float tempOfElements51;\n        float tempOfElements52;\n        float\
    \ tempOfElements53;\n        float tempOfElements54;\n        float tempOfElements55;\n\
    \        float temp\n    }\n    public static void main(String[] args) {\n   \
    \ assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw74tx02k.java:77: error: ';' expected\n        float temp\n   \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float temp = 0;\n        float temp2 = 0;\n        float temp3\
    \ = 0;\n        float temp4 = 0;\n        float temp5 = 0;\n        float temp6\
    \ = 0;\n        float temp7 = 0;\n        float temp8 = 0;\n        float temp9\
    \ = 0;\n        float temp10 = 0;\n        float temp11 = 0;\n        float temp12\
    \ = 0;\n        float temp13 = 0;\n        float temp14 = 0;\n        float temp15\
    \ = 0;\n        float temp16 = 0;\n        float temp17 = 0;\n        float temp18\
    \ = 0;\n        float temp19 = 0;\n        float temp20 = 0;\n        float temp21\
    \ = 0;\n        float temp22 = 0;\n        float temp23 = 0;\n        float temp24\
    \ = 0;\n        float temp25 = 0;\n        float temp26 = 0;\n        float temp27\
    \ = 0;\n        float temp28 = 0;\n        float temp29 = 0;\n        float temp30\
    \ = 0;\n        float temp31 = 0;\n        float temp32 = 0;\n        float temp33\
    \ = 0;\n        float temp34 = 0;\n        float temp35 = 0;\n        float temp36\
    \ = 0;\n        float temp37 = 0;\n        float temp38 = 0;\n        float temp39\
    \ = 0;\n        float temp40 = 0;\n        float temp41 = 0;\n        float temp42\
    \ = 0;\n        float temp43 = 0;\n        float temp44 = 0;\n        float temp45\
    \ = 0;\n        float temp46 = 0;\n        float temp47 = 0;\n        float temp48\
    \ = 0;\n        float temp49 = 0;\n        float temp50 = 0;\n        float temp51\
    \ = 0;\n        float temp52 = 0;\n        float temp53 = 0;\n        float temp54\
    \ = 0;\n        float temp55 = 0;\n        float temp56 = 0;\n        float temp57\
    \ = 0;\n        float temp58 = 0;\n        float temp59 = 0;\n        float temp60\
    \ = 0;\n        float temp61 = 0;\n        float temp62 = 0;\n        float temp63\
    \ = 0;\n        float temp64 = 0;\n        float temp65 = 0;\n        float temp66\
    \ = 0;\n        float temp67 = 0;\n        float temp68 = 0;\n        float temp69\
    \ = 0;\n        float temp70 = 0;\n        float temp71 = 0;\n        float temp72\
    \ = 0;\n        float temp73 = 0;\n        float temp74 = 0;\n        float temp75\
    \ = 0;\n        float temp76 = 0;\n        float temp77 = 0;\n        float temp78\
    \ = 0;\n        float temp79 = 0;\n        float temp80 = 0;\n        float temp81\
    \ = 0;\n        float temp82 = 0;\n        float temp83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9oicht7y.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int size = l.size();\n\
    \        if (size == 0) {\n            return 0;\n        }\n        float largest\
    \ = l.get(0);\n        for (int i = 1; i < size; i++) {\n            sum += l.get(i);\n\
    \            if (largest < l.get(i)) {\n                largest = l.get(i);\n\
    \            }\n        }\n        average = sum / size;\n        median = average\
    \ + (largest - average) / 2;\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwun3ykp_.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        if (l.size() % 2 == 0) {\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2).findFirst().getAsDouble();\n        } else {\n            median = (float)\
    \ l.stream().sorted().skip(l.size() / 2 + 1).findFirst().getAsDouble();\n    \
    \    }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0axggkar.java:17: error: cannot find symbol\n            median\
    \ = (float) l.stream().sorted().skip(l.size() / 2).findFirst().getAsDouble();\n\
    \                                                                            \
    \   ^\n  symbol:   method getAsDouble()\n  location: class Optional<Long>\n/tmp/tmp0axggkar.java:19:\
    \ error: cannot find symbol\n            median = (float) l.stream().sorted().skip(l.size()\
    \ / 2 + 1).findFirst().getAsDouble();\n                                      \
    \                                             ^\n  symbol:   method getAsDouble()\n\
    \  location: class Optional<Long>\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        float count = 0;\n  \
    \      float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences =\
    \ 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferences = 0;\n        float averageOfSquaresOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferences = 0;\n        float averageOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferences = 0;\n        float\
    \ averageOfSquaresOfDifferencesOfDifferences = 0;\n        float sumOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfSquaresOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float sumOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n      \
    \  float averageOfDifferencesOfDifferencesOfDifferencesOfDifferences = 0;\n  \
    \      float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float averageOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n        float sumOfSquaresOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferencesOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf18y6n51.java:50: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float max = 0;\n        float min = 0;\n        float temp = 0;\n\
    \        float temp2 = 0;\n        float temp3 = 0;\n        float temp4 = 0;\n\
    \        float temp5 = 0;\n        float temp6 = 0;\n        float temp7 = 0;\n\
    \        float temp8 = 0;\n        float temp9 = 0;\n        float temp10 = 0;\n\
    \        float temp11 = 0;\n        float temp12 = 0;\n        float temp13 =\
    \ 0;\n        float temp14 = 0;\n        float temp15 = 0;\n        float temp16\
    \ = 0;\n        float temp17 = 0;\n        float temp18 = 0;\n        float temp19\
    \ = 0;\n        float temp20 = 0;\n        float temp21 = 0;\n        float temp22\
    \ = 0;\n        float temp23 = 0;\n        float temp24 = 0;\n        float temp25\
    \ = 0;\n        float temp26 = 0;\n        float temp27 = 0;\n        float temp28\
    \ = 0;\n        float temp29 = 0;\n        float temp30 = 0;\n        float temp31\
    \ = 0;\n        float temp32 = 0;\n        float temp33 = 0;\n        float temp34\
    \ = 0;\n        float temp35 = 0;\n        float temp36 = 0;\n        float temp37\
    \ = 0;\n        float temp38 = 0;\n        float temp39 = 0;\n        float temp40\
    \ = 0;\n        float temp41 = 0;\n        float temp42 = 0;\n        float temp43\
    \ = 0;\n        float temp44 = 0;\n        float temp45 = 0;\n        float temp46\
    \ = 0;\n        float temp47 = 0;\n        float temp48 = 0;\n        float temp49\
    \ = 0;\n        float temp50 = 0;\n        float temp51 = 0;\n        float temp52\
    \ = 0;\n        float temp53 = 0;\n        float temp54 = 0;\n        float temp55\
    \ = 0;\n        float temp56 = 0;\n        float temp57 = 0;\n        float temp58\
    \ = 0;\n        float temp59 = 0;\n        float temp60 = 0;\n        float temp61\
    \ = 0;\n        float temp62 = 0;\n        float temp63 = 0;\n        float temp64\
    \ = 0;\n        float temp65 = 0;\n        float temp66 = 0;\n        float temp67\
    \ = 0;\n        float temp68 = 0;\n        float temp69 = 0;\n        float temp70\
    \ = 0;\n        float temp71 = 0;\n        float temp72 = 0;\n        float temp73\
    \ = 0;\n        float temp74 = 0;\n        float temp75 = 0;\n        float temp76\
    \ = 0;\n        float temp77 = 0;\n        float temp78 = 0;\n        float temp79\
    \ = 0;\n        float temp80 = 0;\n        float temp81 = 0;\n        float \n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfifnanqp.java:102: error: not a statement\n        float \n   \
    \     ^\n/tmp/tmpfifnanqp.java:102: error: ';' expected\n        float \n    \
    \         ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        for (long i : l) {\n            sum +=\
    \ i;\n        }\n        if (sum % 2 == 0) {\n            median = (float) (sum\
    \ / 2);\n        } else {\n            median = (float) (sum / 2) + 1;\n     \
    \   }\n        return median;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj_n6aqfs.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n      \
    \  float sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float\
    \ sumOfSquares = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares\
    \ = 0;\n        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n\
    \        float averageOfSquares = 0;\n        float sumOfSquares = 0;\n      \
    \  float averageOfSquares = 0;\n        float sumOfSquares = 0;\n        float\
    \ averageOfSquares = 0;\n        float sum\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaow9k6q_.java:89: error: ';' expected\n        float sum\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfbo01qs_.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average;\n        int count = 0;\n    \
    \    long largest = Collections.max(l);\n        long smallest = Collections.min(l);\n\
    \        float largestFloat = Float.parseFloat(String.valueOf(largest));\n   \
    \     float smallestFloat = Float.parseFloat(String.valueOf(smallest));\n    \
    \    float largestInt = Integer.parseInt(String.valueOf(largest));\n        float\
    \ smallestInt = Integer.parseInt(String.valueOf(smallest));\n        float largestLong\
    \ = Long.parseLong(String.valueOf(largest));\n        float smallestLong = Long.parseLong(String.valueOf(smallest));\n\
    \        float largestFloatInt = Float.parseFloat(String.valueOf(largestInt));\n\
    \        float smallestFloatInt = Float.parseFloat(String.valueOf(smallestInt));\n\
    \        float largestIntLong = Integer.parseInt(String.valueOf(largestLong));\n\
    \        float smallestIntLong = Integer.parseInt(String.valueOf(smallestLong));\n\
    \        float largestLongInt = Long.parseLong(String.valueOf(largestLong));\n\
    \        float smallestLongInt = Long.parseLong(String.valueOf(smallestLong));\n\
    \        float largestFloatLong = Float.parseFloat(String.valueOf(largestLongInt));\n\
    \        float smallestFloatLong = Float.parseFloat(String.valueOf(smallestLongInt));\n\
    \        float largestIntFloat = Integer.parseInt(String.valueOf(largestFloat));\n\
    \        float smallestIntFloat = Integer.parseInt(String.valueOf(smallestFloat));\n\
    \        float largestIntInt = Integer.parseInt(String.valueOf(largestInt));\n\
    \        float smallestIntInt = Integer.parseInt(String.valueOf(smallestInt));\n\
    \        float largestLongFloat = Long.parseLong(String.valueOf(largestFloat));\n\
    \        float smallestLongFloat = Long.parseLong(String.valueOf(smallestFloat));\n\
    \        float largestLongInt = Long.parseLong(String.valueOf(largestInt));\n\
    \        float smallestLongInt = Long.parseLong(String.valueOf(smallestInt));\n\
    \        float largestFloatFloat = Float.parseFloat(String.valueOf(largestFloatLong));\n\
    \        float smallestFloatFloat = Float.parseFloat(String.valueOf(smallestFloatLong));\n\
    \        float largestIntFloatInt = Integer.parseInt(String.valueOf(largestFloatInt));\n\
    \        float smallestIntFloatInt = Integer.parseInt(String.valueOf(smallestFloat\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu4738uiy.java:46: error: ')' expected\n        float smallestIntFloatInt\
    \ = Integer.parseInt(String.valueOf(smallestFloat\n                          \
    \                                                       ^\n/tmp/tmpu4738uiy.java:47:\
    \ error: ';' expected\n    }\n     ^\n/tmp/tmpu4738uiy.java:48: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmpu4738uiy.java:48: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmpu4738uiy.java:48: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmpu4738uiy.java:48: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmpu4738uiy.java:56:\
    \ error: reached end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpucave78k.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp41mrwx7x.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum / count;\n        for (Long i : l) {\n     \
    \       if (i < average) {\n                median = i;\n                break;\n\
    \            }\n        }\n        return median;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpro9bhka4.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmx9drus.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnurx8jkg.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8bupvn80.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxnac6660.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum = 0;\n        float average\
    \ = 0;\n        int count = 0;\n        float median = 0;\n        float sum =\
    \ 0;\n        float average = 0;\n        int count = 0;\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        float median = 0;\n        float sum\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphgz32blb.java:128: error: ';' expected\n        float sum\n   \
    \              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptgpbnq7n.java:25: error: variable sumOfSquareOfDifferences is already\
    \ defined in method median(ArrayList<Long>)\n        float sumOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:26: error: variable averageOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:27: error: variable sumOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:28: error: variable averageOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:29: error: variable sumOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:30: error: variable averageOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:31: error: variable sumOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:32: error: variable averageOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:33: error: variable sumOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:34: error: variable averageOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:35: error: variable sumOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfDifferences\
    \ = 0;\n              ^\n/tmp/tmptgpbnq7n.java:36: error: variable averageOfDifferences\
    \ is already defined in method median(ArrayList"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        int count\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        average = sum/count;\n        for(long i : l) {\n        \
    \    if(average - i > median) {\n                median = average - i;\n     \
    \       }\n        }\n        return median;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwfyuzxa.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkrph2wn8.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianIndex = (long) l.size() / 2;\n        if (l.size() % 2 ==\
    \ 0) {\n            median = l.get(medianIndex);\n        } else {\n         \
    \   median = (float) l.get(medianIndex);\n            median = (float) l.get(medianIndex\
    \ + 1);\n        }\n        return median;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbugypjx4.java:18: error: no suitable method found for get(long)\n\
    \            median = l.get(medianIndex);\n                      ^\n    method\
    \ List.get(int) is not applicable\n      (argument mismatch; possible lossy conversion\
    \ from long to int)\n    method AbstractList.get(int) is not applicable\n    \
    \  (argument mismatch; possible lossy conversion from long to int)\n    method\
    \ ArrayList.get(int) is not applicable\n      (argument mismatch; possible lossy\
    \ conversion from long to int)\n/tmp/tmpbugypjx4.java:20: error: no suitable method\
    \ found for get(long)\n            median = (float) l.get(medianIndex);\n    \
    \                          ^\n    method List.get(int) is not applicable\n   \
    \   (argument mismatch; possible lossy conversion from long to int)\n    method\
    \ AbstractList.get(int) is not applicable\n      (argument mismatch; possible\
    \ lossy conversion from long to int)\n    method ArrayList.get(int) is not applicable\n\
    \      (argument mismatch; possible lossy conversion from long to int)\n/tmp/tmpbugypjx4.java:21:\
    \ error: no suitable method found for get(long)\n            median = (float)\
    \ l.get(medianIndex + 1);\n                              ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbximfe5h.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp568lpft9.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbdwsemgp.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long median\
    \ = 0;\n        long largest = l.get(0);\n        long smallest = l.get(0);\n\
    \        for(long i : l) {\n            if(i>largest) {\n                largest\
    \ = i;\n            }\n            if(i<smallest) {\n                smallest\
    \ = i;\n            }\n        }\n        float median = (float)(largest + smallest)/2;\n\
    \        return median;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsm_zueb_.java:26: error: variable median is already defined in\
    \ method median(ArrayList<Long>)\n        float median = (float)(largest + smallest)/2;\n\
    \              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float temp\
    \ = 0;\n        float count = 0;\n        float sum2 = 0;\n        float average2\
    \ = 0;\n        float temp2 = 0;\n        float count2 = 0;\n        float sum3\
    \ = 0;\n        float average3 = 0;\n        float temp3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float temp4\
    \ = 0;\n        float count4 = 0;\n        float sum5 = 0;\n        float average5\
    \ = 0;\n        float temp5 = 0;\n        float count5 = 0;\n        float sum6\
    \ = 0;\n        float average6 = 0;\n        float temp6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float temp7\
    \ = 0;\n        float count7 = 0;\n        float sum8 = 0;\n        float average8\
    \ = 0;\n        float temp8 = 0;\n        float count8 = 0;\n        float sum9\
    \ = 0;\n        float average9 = 0;\n        float temp9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ temp10 = 0;\n        float count10 = 0;\n        float sum11 = 0;\n        float\
    \ average11 = 0;\n        float temp11 = 0;\n        float count11 = 0;\n    \
    \    float sum12 = 0;\n        float average12 = 0;\n        float temp12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float temp13 = 0;\n        float count13 = 0;\n        float sum14\
    \ = 0;\n        float average14 = 0;\n        float temp14 = 0;\n        float\
    \ count14 = 0;\n        float sum15 = 0;\n        float average15 = 0;\n     \
    \   float temp15 = 0;\n        float count15 = 0;\n        float sum16 = 0;\n\
    \        float average16 = 0;\n        float temp16 = 0;\n        float count16\
    \ = 0;\n        float sum17 = 0;\n        float average17 = 0;\n        float\
    \ temp17 = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float\
    \ average18 = 0;\n        float temp18 = 0;\n        float count18 = 0;\n    \
    \    float sum19 = 0;\n        float average19 = 0;\n        float temp19 = 0;\n\
    \        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float temp20 = 0;\n        float count20 = 0;\n        float sum21\
    \ = 0;\n        float average21 = 0;\n        float temp21 = 0;\n        float\
    \ count21 = 0;\n        float sum22 = 0;\n        float average22 = 0;\n     \
    \   float temp22 = 0;\n        float count22 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt8hs_ha7.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqanbb0y.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqzyk7tqk.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float temp = 0;\n        float temp2 = 0;\n        float temp3\
    \ = 0;\n        float temp4 = 0;\n        float temp5 = 0;\n        float temp6\
    \ = 0;\n        float temp7 = 0;\n        float temp8 = 0;\n        float temp9\
    \ = 0;\n        float temp10 = 0;\n        float temp11 = 0;\n        float temp12\
    \ = 0;\n        float temp13 = 0;\n        float temp14 = 0;\n        float temp15\
    \ = 0;\n        float temp16 = 0;\n        float temp17 = 0;\n        float temp18\
    \ = 0;\n        float temp19 = 0;\n        float temp20 = 0;\n        float temp21\
    \ = 0;\n        float temp22 = 0;\n        float temp23 = 0;\n        float temp24\
    \ = 0;\n        float temp25 = 0;\n        float temp26 = 0;\n        float temp27\
    \ = 0;\n        float temp28 = 0;\n        float temp29 = 0;\n        float temp30\
    \ = 0;\n        float temp31 = 0;\n        float temp32 = 0;\n        float temp33\
    \ = 0;\n        float temp34 = 0;\n        float temp35 = 0;\n        float temp36\
    \ = 0;\n        float temp37 = 0;\n        float temp38 = 0;\n        float temp39\
    \ = 0;\n        float temp40 = 0;\n        float temp41 = 0;\n        float temp42\
    \ = 0;\n        float temp43 = 0;\n        float temp44 = 0;\n        float temp45\
    \ = 0;\n        float temp46 = 0;\n        float temp47 = 0;\n        float temp48\
    \ = 0;\n        float temp49 = 0;\n        float temp50 = 0;\n        float temp51\
    \ = 0;\n        float temp52 = 0;\n        float temp53 = 0;\n        float temp54\
    \ = 0;\n        float temp55 = 0;\n        float temp56 = 0;\n        float temp57\
    \ = 0;\n        float temp58 = 0;\n        float temp59 = 0;\n        float temp60\
    \ = 0;\n        float temp61 = 0;\n        float temp62 = 0;\n        float temp63\
    \ = 0;\n        float temp64 = 0;\n        float temp65 = 0;\n        float temp66\
    \ = 0;\n        float temp67 = 0;\n        float temp68 = 0;\n        float temp69\
    \ = 0;\n        float temp70 = 0;\n        float temp71 = 0;\n        float temp72\
    \ = 0;\n        float temp73 = 0;\n        float temp74 = 0;\n        float temp75\
    \ = 0;\n        float temp76 = 0;\n        float temp77 = 0;\n        float temp78\
    \ = 0;\n        float temp79 = 0;\n        float temp80 = 0;\n        float temp81\
    \ = 0;\n        float temp82 = 0;\n        float temp83 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn4t82xpk.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long median\
    \ = Collections.median(l);\n        return Float.parseFloat(String.valueOf(median));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu617ke82.java:15: error: cannot find symbol\n        long median\
    \ = Collections.median(l);\n                                 ^\n  symbol:   method\
    \ median(ArrayList<Long>)\n  location: class Collections\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sum2 = 0;\n        float average2 = 0;\n        float count2\
    \ = 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2is2p2lb.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float average = 0;\n        float sum = 0;\n        float count\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n            count++;\n\
    \        }\n        if (count == 0) {\n            return 0;\n        }\n    \
    \    average = sum / count;\n        for (long i : l) {\n            if (i < average)\
    \ {\n                median = i;\n            }\n        }\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchshwru6.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjf6l3g1.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpexfqvy86.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        float sum = 0;\n        float average = 0;\n        float count = 0;\n\
    \        float sum2 = 0;\n        float average2 = 0;\n        float count2 =\
    \ 0;\n        float sum3 = 0;\n        float average3 = 0;\n        float count3\
    \ = 0;\n        float sum4 = 0;\n        float average4 = 0;\n        float count4\
    \ = 0;\n        float sum5 = 0;\n        float average5 = 0;\n        float count5\
    \ = 0;\n        float sum6 = 0;\n        float average6 = 0;\n        float count6\
    \ = 0;\n        float sum7 = 0;\n        float average7 = 0;\n        float count7\
    \ = 0;\n        float sum8 = 0;\n        float average8 = 0;\n        float count8\
    \ = 0;\n        float sum9 = 0;\n        float average9 = 0;\n        float count9\
    \ = 0;\n        float sum10 = 0;\n        float average10 = 0;\n        float\
    \ count10 = 0;\n        float sum11 = 0;\n        float average11 = 0;\n     \
    \   float count11 = 0;\n        float sum12 = 0;\n        float average12 = 0;\n\
    \        float count12 = 0;\n        float sum13 = 0;\n        float average13\
    \ = 0;\n        float count13 = 0;\n        float sum14 = 0;\n        float average14\
    \ = 0;\n        float count14 = 0;\n        float sum15 = 0;\n        float average15\
    \ = 0;\n        float count15 = 0;\n        float sum16 = 0;\n        float average16\
    \ = 0;\n        float count16 = 0;\n        float sum17 = 0;\n        float average17\
    \ = 0;\n        float count17 = 0;\n        float sum18 = 0;\n        float average18\
    \ = 0;\n        float count18 = 0;\n        float sum19 = 0;\n        float average19\
    \ = 0;\n        float count19 = 0;\n        float sum20 = 0;\n        float average20\
    \ = 0;\n        float count20 = 0;\n        float sum21 = 0;\n        float average21\
    \ = 0;\n        float count21 = 0;\n        float sum22 = 0;\n        float average22\
    \ = 0;\n        float count22 = 0;\n        float sum23 = 0;\n        float average23\
    \ = 0;\n        float count23 = 0;\n        float sum24 = 0;\n        float average24\
    \ = 0;\n        float count24 = 0;\n        float sum25 = 0;\n        float average25\
    \ = 0;\n        float count25 = 0;\n        float sum26 = 0;\n        float average26\
    \ = 0;\n        float count26 = 0;\n        float sum27 = 0;\n        float average27\
    \ = 0;\n        float count27 = 0;\n        float sum28 = 0;\n        float average28\
    \ = 0;\n        float count28 = 0;\n        float sum29 = 0;\n        float average29\
    \ = 0;\n        float count29 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7czqf6i0.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        long median\
    \ = Collections.max(l) + Collections.min(l);\n        return (float) median /\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2tefmn03.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe02z7jgs.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8t1srha.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        for (long i : l) {\n            sum +=\
    \ i;\n        }\n        float average = sum / l.size();\n        for (long i\
    \ : l) {\n            if (i < average) {\n                median += i;\n     \
    \       }\n        }\n        return median / l.size();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf9qaq2m.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = (float) l.get(l.size() / 2);\n        return median;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mv7lboi.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median;\n\
    \        long medianOfAllElements;\n        float average;\n        float sum\
    \ = 0;\n        float count = 0;\n        float averageOfAllElements;\n      \
    \  float sumOfAllElements;\n        float countOfAllElements;\n        float averageOfAllElementsOfAllElements;\n\
    \        float sumOfAllElementsOfAllElements;\n        float countOfAllElementsOfAllElements;\n\
    \        float averageOfAllElementsOfAllElementsOfAllElements;\n        float\
    \ sumOfAllElementsOfAllElementsOfAllElements;\n        float countOfAllElementsOfAllElementsOfAllElements;\n\
    \        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n    \
    \    float countOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n      \
    \  float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float countOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float countOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float countOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float averageOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElements;\n\
    \        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAll\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplexjkj2m.java:42: error: ';' expected\n        float sumOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAllElementsOfAll\n\
    \                                                                            \
    \                        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size()/2);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgdzlwan.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return l.get(mid);\n        } else {\n            return (float) l.get(mid)\
    \ + l.get(mid + 1);\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2bzrd7v.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Long> l) {\n        float median\
    \ = 0;\n        float sum = 0;\n        float average = 0;\n        float count\
    \ = 0;\n        float sumOfSquares = 0;\n        float averageOfSquares = 0;\n\
    \        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n        float sumOfSquareOfDifferences = 0;\n        float averageOfSquareOfDifferences\
    \ = 0;\n        float sumOfDifferences = 0;\n        float averageOfDifferences\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa_ac3k0a.java:25: error: variable sumOfSquareOfDifferences is already\
    \ defined in method median(ArrayList<Long>)\n        float sumOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:26: error: variable averageOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:27: error: variable sumOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:28: error: variable averageOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:29: error: variable sumOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:30: error: variable averageOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:31: error: variable sumOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:32: error: variable averageOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:33: error: variable sumOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:34: error: variable averageOfSquareOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float averageOfSquareOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:35: error: variable sumOfDifferences\
    \ is already defined in method median(ArrayList<Long>)\n        float sumOfDifferences\
    \ = 0;\n              ^\n/tmp/tmpa_ac3k0a.java:36: error: variable averageOfDifferences\
    \ is already defined in method median(ArrayList"
  exit_code: 1
  status: SyntaxError

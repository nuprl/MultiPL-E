name: HumanEval_58_common
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                common.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return common;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpwwg7d7gh.java:18)\n\tat Problem.main(tmpwwg7d7gh.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = 0, min2 = 0;\n        long max1 = 0, max2 = 0;\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            min1 = Math.min(min1, l1.get(i));\n\
    \            max1 = Math.max(max1, l1.get(i));\n        }\n        for (int i\
    \ = 0; i < l2.size(); i++) {\n            min2 = Math.min(min2, l2.get(i));\n\
    \            max2 = Math.max(max2, l2.get(i));\n        }\n        for (int i\
    \ = 0; i < l1.size(); i++) {\n            common = Math.min(common, l1.get(i));\n\
    \        }\n        for (int i = 0; i < l2.size(); i++) {\n            common\
    \ = Math.min(common, l2.get(i));\n        }\n        for (int i = 0; i < l1.size();\
    \ i++) {\n            if (l1.get(i) == common) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        for (int i = 0; i < l2.size(); i++) {\n   \
    \         if (l2.get(i) == common) {\n                result.add(l2.get(i));\n\
    \            }\n        }\n        for (int i = 0; i < result.size(); i++) {\n\
    \            if (result.get(i) < min1) {\n                result.add(min1);\n\
    \            }\n            if (result.get(i) > max1) {\n                result.add(max1);\n\
    \            }\n            if (result.get(i) < min2) {\n                result.add(min2);\n\
    \            }\n            if (result.get(i) > max2) {\n                result.add(max2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9c0uk091.java:61)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7vg90kb.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE;\n        long min2 = Long.MAX_VALUE;\n  \
    \      for (long i : l1) {\n            if (min1 < i) {\n                min1\
    \ = i;\n            }\n        }\n        for (long i : l2) {\n            if\
    \ (min2 < i) {\n                min2 = i;\n            }\n        }\n        for\
    \ (long i : l1) {\n            for (long j : l2) {\n                if (i == j)\
    \ {\n                    common++;\n                }\n            }\n       \
    \ }\n        for (long i : l1) {\n            if (min1 < i) {\n              \
    \  result.add(min1);\n            }\n        }\n        for (long i : l2) {\n\
    \            if (min2 < i) {\n                result.add(min2);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_5b0p4v.java:50)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            map.put(i,\
    \ map.getOrDefault(i, 0) + 1);\n        }\n        for (Long i : l2) {\n     \
    \       map.put(i, map.getOrDefault(i, 0) + 1);\n        }\n        for (Map.Entry<Long,\
    \ Long> entry : map.entrySet()) {\n            if (entry.getValue() == l1.size()\
    \ || entry.getValue() == l2.size()) {\n                common.add(entry.getKey());\n\
    \            }\n        }\n        Collections.sort(common);\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmrdunwug.java:18: error: no suitable method found for getOrDefault(Long,int)\n\
    \            map.put(i, map.getOrDefault(i, 0) + 1);\n                       \
    \   ^\n    method Map.getOrDefault(Object,Long) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Long)\n    method HashMap.getOrDefault(Object,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    /tmp/tmpmrdunwug.java:21: error: no suitable method found for getOrDefault(Long,int)\n\
    \            map.put(i, map.getOrDefault(i, 0) + 1);\n                       \
    \   ^\n    method Map.getOrDefault(Object,Long) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Long)\n    method HashMap.getOrDefault(Object,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvp79qglc.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbghloj9u.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kanftir.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a < b) {\n                result.add(b);\n\
    \            } else {\n                result.add(a);\n            }\n       \
    \ }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn7zug0sp.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghzomuj5.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long max1 = 0;\n      \
    \  long min1 = 0;\n        long max2 = 0;\n        long min2 = 0;\n        long\
    \ max3 = 0;\n        long min3 = 0;\n        long max4 = 0;\n        long min4\
    \ = 0;\n        long max5 = 0;\n        long min5 = 0;\n        long max6 = 0;\n\
    \        long min6 = 0;\n        long max7 = 0;\n        long min7 = 0;\n    \
    \    long max8 = 0;\n        long min8 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long max10 = 0;\n        long min10 = 0;\n        long max11\
    \ = 0;\n        long min11 = 0;\n        long max12 = 0;\n        long min12 =\
    \ 0;\n        long max13 = 0;\n        long min13 = 0;\n        long max14 = 0;\n\
    \        long min14 = 0;\n        long max15 = 0;\n        long min15 = 0;\n \
    \       long max16 = 0;\n        long min16 = 0;\n        long max17 = 0;\n  \
    \      long min17 = 0;\n        long max18 = 0;\n        long min18 = 0;\n   \
    \     long max19 = 0;\n        long min19 = 0;\n        long max20 = 0;\n    \
    \    long min20 = 0;\n        long max21 = 0;\n        long min21 = 0;\n     \
    \   long max22 = 0;\n        long min22 = 0;\n        long max23 = 0;\n      \
    \  long min23 = 0;\n        long max24 = 0;\n        long min24 = 0;\n       \
    \ long max25 = 0;\n        long min25 = 0;\n        long max26 = 0;\n        long\
    \ min26 = 0;\n        long max27 = 0;\n        long min27 = 0;\n        long max28\
    \ = 0;\n        long min28 = 0;\n        long max29 = 0;\n        long min29 =\
    \ 0;\n        long max30 = 0;\n        long min30 = 0;\n        long max31 = 0;\n\
    \        long min31 = 0;\n        long max32 = 0;\n        long min32 = 0;\n \
    \       long max33 = 0;\n        long min33 = 0;\n        long max34 = 0;\n  \
    \      long min34 = 0;\n        long max35 = 0;\n        long min35 = 0;\n   \
    \     long max36 = 0;\n        long min36 = 0;\n        long max37 = 0;\n    \
    \    long min37 = 0;\n        long max38 = 0;\n        long min38 = 0;\n     \
    \   long max39 = 0;\n        long min39 = 0;\n        long max40 = 0;\n      \
    \  long min40 = 0;\n        long max41 = 0;\n        long min41 = 0;\n       \
    \ long max42 = 0;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2do0ffzb.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmppv337o_p.java:18)\n\tat Problem.main(tmppv337o_p.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpf7n7hi9h.java:18)\n\tat Problem.main(tmpf7n7hi9h.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpijyepfbv.java:18)\n\tat Problem.main(tmpijyepfbv.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long num : set1) {\n            if (set2.contains(num))\
    \ {\n                common.add(num);\n            }\n        }\n        for (Long\
    \ num : set2) {\n            if (!set1.contains(num)) {\n                common.add(num);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplljw9_o9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpvfinj_gv.java:18)\n\tat Problem.main(tmpvfinj_gv.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = l1.stream().filter(x\
    \ -> l2.contains(x)).count();\n        result.add(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo47g72_y.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp4ckn_cqy.java:18)\n\tat Problem.main(tmp4ckn_cqy.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        common.addAll(h1);\n\
    \        common.addAll(h2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3pcbampk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqqhquol.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ h1 = new HashMap<>();\n        HashMap<Long, Long> h2 = new HashMap<>();\n \
    \       for (Long x : l1) {\n            h1.put(x, x);\n        }\n        for\
    \ (Long x : l2) {\n            h2.put(x, x);\n        }\n        for (Long x :\
    \ h1.keySet()) {\n            if (h2.containsKey(x)) {\n                result.add(x);\n\
    \                h1.remove(x);\n                h2.remove(x);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpkro0uldq.java:24)\n\tat Problem.main(tmpkro0uldq.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long n1 = it1.next();\n\
    \            Long n2 = it2.next();\n            if (n1 == n2) {\n            \
    \    result.add(n1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (n1 < n2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7s0oobwx.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp4tjpr8up.java:18)\n\tat Problem.main(tmp4tjpr8up.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sg03qcc.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgsqfvyk.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzjskui6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next()\
    \ == it2.next()) {\n                result.add(it1.next());\n            }\n \
    \       }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxgojsxyt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr9uwyw6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6ouoolg.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp75p8a0nn.java:18)\n\tat Problem.main(tmp75p8a0nn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        for (Long i : common) {\n            if (l1.contains(i) && l2.contains(i))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpjnvp7xal.java:18)\n\tat Problem.main(tmpjnvp7xal.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5jd1v3d.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9x6c1iv0.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l2) {\n            for (long j : l1) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyulrns4w.java:136: error: ')' expected\n        for (long i : l\n\
    \                       ^\n/tmp/tmpyulrns4w.java:137: error: illegal start of\
    \ statement\n    }\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        set1.retainAll(set2);\n\
    \        set2.retainAll(set1);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9m0naw3x.java:85: error: <identifier> expected\n        set1.\n\
    \             ^\n/tmp/tmp9m0naw3x.java:85: error: not a statement\n        set1.\n\
    \            ^\n/tmp/tmp9m0naw3x.java:87: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n/tmp/tmp9m0naw3x.java:87:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \  ^\n/tmp/tmp9m0naw3x.java:87: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n                  ^\n/tmp/tmp9m0naw3x.java:87:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                   ^\n/tmp/tmp9m0naw3x.java:87: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                                        \
    \ ^\n/tmp/tmp9m0naw3x.java:94: error: reached end of file while parsing\n}\n ^\n\
    8 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyiany8y6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp8b8vgi4k.java:18)\n\tat Problem.main(tmp8b8vgi4k.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpeck1zxo3.java:18)\n\tat Problem.main(tmpeck1zxo3.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mu_b7gy.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsi517hd.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpuccsed8m.java:18)\n\tat Problem.main(tmpuccsed8m.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = h1.iterator();\n        Iterator<Long> it2 = h2.iterator();\n        while\
    \ (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() != it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmsfpqa8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long common2 = 0;\n        long common3 = 0;\n        long common4 =\
    \ 0;\n        long common5 = 0;\n        long common6 = 0;\n        long common7\
    \ = 0;\n        long common8 = 0;\n        long common9 = 0;\n        long common10\
    \ = 0;\n        long common11 = 0;\n        long common12 = 0;\n        long common13\
    \ = 0;\n        long common14 = 0;\n        long common15 = 0;\n        long common16\
    \ = 0;\n        long common17 = 0;\n        long common18 = 0;\n        long common19\
    \ = 0;\n        long common20 = 0;\n        long common21 = 0;\n        long common22\
    \ = 0;\n        long common23 = 0;\n        long common24 = 0;\n        long common25\
    \ = 0;\n        long common26 = 0;\n        long common27 = 0;\n        long common28\
    \ = 0;\n        long common29 = 0;\n        long common30 = 0;\n        long common31\
    \ = 0;\n        long common32 = 0;\n        long common33 = 0;\n        long common34\
    \ = 0;\n        long common35 = 0;\n        long common36 = 0;\n        long common37\
    \ = 0;\n        long common38 = 0;\n        long common39 = 0;\n        long common40\
    \ = 0;\n        long common41 = 0;\n        long common42 = 0;\n        long common43\
    \ = 0;\n        long common44 = 0;\n        long common45 = 0;\n        long common46\
    \ = 0;\n        long common47 = 0;\n        long common48 = 0;\n        long common49\
    \ = 0;\n        long common50 = 0;\n        long common51 = 0;\n        long common52\
    \ = 0;\n        long common53 = 0;\n        long common54 = 0;\n        long common55\
    \ = 0;\n        long common56 = 0;\n        long common57 = 0;\n        long common58\
    \ = 0;\n        long common59 = 0;\n        long common60 = 0;\n        long common61\
    \ = 0;\n        long common62 = 0;\n        long common63 = 0;\n        long common64\
    \ = 0;\n        long common65 = 0;\n        long common66 = 0;\n        long common67\
    \ = 0;\n        long common68 = 0;\n        long common69 = 0;\n        long common70\
    \ = 0;\n        long common71 = 0;\n        long common72 = 0;\n        long common73\
    \ = 0;\n        long common74 = 0;\n        long common75 = 0;\n        long common76\
    \ = 0;\n        long common77 = 0;\n        long common78 = 0;\n        long common79\
    \ = 0;\n        long common80 = 0;\n        long common81 = 0;\n        long common82\
    \ = 0;\n        long common83 = 0;\n        long common84 = 0;\n        long common85\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmefqd82e.java:100: error: ';' expected\n        long common85\n\
    \                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (a > b) {\n                it1.remove();\n            }\
    \ else {\n                it2.remove();\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps51bp9s4.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpekj_xsdw.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy9ge82r5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchjbulco.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8_ktrbc.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmk0l778.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (a > b) {\n                it1.remove();\n            }\
    \ else {\n                it2.remove();\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebd94lgg.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpke0gkegs.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (i1 < i2) result.add(i1);\n            if (i2 < i1) result.add(i2);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkk352qs0.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpizt11qhf.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        common.addAll(h1);\n\
    \        common.addAll(h2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4w8p64c.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8489mag4.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ufsaxcm.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (set1.contains(b) && set2.contains(a)) {\n                result.add(a);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbke8s1c_.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lrm4lnc.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7it1b0d4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE;\n        long min2 = Long.MAX_VALUE;\n  \
    \      for (long i : l1) {\n            if (min1 < i) {\n                min1\
    \ = i;\n            }\n        }\n        for (long i : l2) {\n            if\
    \ (min2 < i) {\n                min2 = i;\n            }\n        }\n        for\
    \ (long i : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l1) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l2) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : \n    }\n  \
    \  public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8geopk8i.java:120: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp8geopk8i.java:121: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp8geopk8i.java:121: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp8geopk8i.java:121:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp8geopk8i.java:121: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp8geopk8i.java:121:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp8geopk8i.java:128: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhgvrllq.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp45f6s58h.java:18)\n\tat Problem.main(tmp45f6s58h.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l2) {\n            for (long j : l1) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiny834su.java:136: error: ')' expected\n        for (long i : l\n\
    \                       ^\n/tmp/tmpiny834su.java:137: error: illegal start of\
    \ statement\n    }\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbho819l6.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() != it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbe3e7ts1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpftutwpb_.java:18)\n\tat Problem.main(tmpftutwpb_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp6cz9pjvt.java:18)\n\tat Problem.main(tmp6cz9pjvt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwinrc84h.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfwjitx39.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmppd7h2951.java:18)\n\tat Problem.main(tmppd7h2951.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64n8ul0a.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long val : set1) {\n            if (set2.contains(val))\
    \ {\n                common.add(val);\n            }\n        }\n        for (Long\
    \ val : set2) {\n            if (!set1.contains(val)) {\n                common.add(val);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mo462e3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7tqz9bt3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdrub6l4.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdugzl_7u.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjsrwcb_f.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7se051i_.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ hs1 = new HashSet<Long>(l1);\n        HashSet<Long> hs2 = new HashSet<Long>(l2);\n\
    \        common.addAll(hs1);\n        common.addAll(hs2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7eg8x6y.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ l : set1) {\n            if(set2.contains(l)) {\n                result.add(l);\n\
    \                set1.remove(l);\n                set2.remove(l);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmphr2vgnbs.java:18)\n\tat Problem.main(tmphr2vgnbs.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5wwsh5q.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp_9dau8mk.java:18)\n\tat Problem.main(tmp_9dau8mk.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptc75c8fg.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n        commonSet.addAll(set2);\n\
    \        commonSet.removeAll(set1);\n        commonSet.removeAll(set2);\n    \
    \    commonSet.removeAll(common);\n        common.addAll(commonSet);\n       \
    \ Collections.sort(common);\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr2nnknv.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!commonSet.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx3era8s.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpad8e7_k2.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!set1.contains(i)) {\n\
    \                commonSet.add(i);\n            }\n        }\n        for (Long\
    \ i : commonSet) {\n            common.add(i);\n        }\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn630lp34.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4kr4o3d0.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1h0cfn81.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyw69o65q.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long count = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp0cojdvw.java:101: error: ';' expected\n        long sum81\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqy2g6kan.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpzcc1x7al.java:18)\n\tat Problem.main(tmpzcc1x7al.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE, min2 = Long.MAX_VALUE;\n        for (long\
    \ i : l1) {\n            if (min1 < i) {\n                min1 = i;\n        \
    \    }\n        }\n        for (long i : l2) {\n            if (min2 < i) {\n\
    \                min2 = i;\n            }\n        }\n        for (long i : l1)\
    \ {\n            if (min1 < i && min2 < i) {\n                common++;\n    \
    \        }\n        }\n        for (long i : l2) {\n            if (min1 < i &&\
    \ min2 < i) {\n                common++;\n            }\n        }\n        for\
    \ (long i : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l1) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l2) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpekd_1idi.java:121: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpekd_1idi.java:121: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmpekd_1idi.java:121: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpekd_1idi.java:121: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpekd_1idi.java:121: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpekd_1idi.java:128: error: reached end of file while parsing\n\
    }\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcc89fkd3.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyz0zyjed.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzo0lz_w9.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpfz338u0a.java:18)\n\tat Problem.main(tmpfz338u0a.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjp3qn88.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd663zpel.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9edidcsn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp96f2t22d.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplc0gql4m.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvcts545y.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6xme5fku.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4k85vcv.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        h1.retainAll(h2);\n\
    \        h2.retainAll(h1);\n        result.addAll(h1);\n        result.addAll(h2);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd_iqvtu8.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpycx4hw3t.java:18)\n\tat Problem.main(tmpycx4hw3t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9278wkjd.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt0eamcg.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long common2 = 0;\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common2++;\n                }\n            }\n        }\n        if (common\
    \ == common2) {\n            for (long i : l1) {\n                result.add(i);\n\
    \            }\n        } else {\n            for (long i : l2) {\n          \
    \      result.add(i);\n            }\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cnj03rg.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqm1sloi.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            map.put(i,\
    \ i);\n        }\n        for (Long i : l2) {\n            if (map.containsKey(i))\
    \ {\n                result.add(map.get(i));\n                map.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprqcztd84.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg4psq4be.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long l : set1) {\n            if (set2.contains(l))\
    \ {\n                common.add(l);\n            }\n        }\n        for (Long\
    \ l : set2) {\n            if (!common.contains(l)) {\n                result.add(l);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7pxdm6dl.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpslt5zwrf.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!set1.contains(i)) {\n\
    \                commonSet.add(i);\n            }\n        }\n        for (Long\
    \ i : commonSet) {\n            common.add(i);\n        }\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnqhjdtqr.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zn7bsj0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_s_t1uv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpptfdokph.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long val : set1) {\n            if(set2.contains(val)) {\n          \
    \      result.add(val);\n                set1.remove(val);\n                set2.remove(val);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp4yv5l2ui.java:18)\n\tat Problem.main(tmp4yv5l2ui.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq7sr8etg.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwa_1njt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (result.contains(a)) {\n                it1.remove();\n             \
    \   it2.remove();\n            } else if (result.contains(b)) {\n            \
    \    it2.remove();\n            } else {\n                result.add(a);\n   \
    \             result.add(b);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_qfhm16.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        for(long i : l1) {\n  \
    \          for(long j : l2) {\n                if(i == j) continue;\n        \
    \        if(i == j) common++;\n                if(i == j) break;\n           \
    \     if(i>j) max = i;\n                else if(j>i) min = j;\n            }\n\
    \        }\n        for(long i : l2) {\n            for(long j : l1) {\n     \
    \           if(i == j) continue;\n                if(i == j) common++;\n     \
    \           if(i == j) break;\n                if(i>j) max = i;\n            \
    \    else if(j>i) min = j;\n            }\n        }\n        for(long i : l1)\
    \ {\n            for(long j : l2) {\n                if(i == j) continue;\n  \
    \              if(i == j) common++;\n                if(i == j) break;\n     \
    \           if(i>j) max = i;\n                else if(j>i) min = j;\n        \
    \    }\n        }\n        for(long i : l2) {\n            for(long j : l1) {\n\
    \                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) max = i;\n       \
    \         else if(j>i) min = j;\n            }\n        }\n        for(long i\
    \ : l1) {\n            for(long j : l2) {\n                if(i == j) continue;\n\
    \                if(i == j) common++;\n                if(i == j) break;\n   \
    \             if(i>j) max = i;\n                else if(j>i) min = j;\n      \
    \      }\n        }\n        for(long i : l2) {\n            for(long j : l1)\
    \ {\n                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) max = i;\n       \
    \         else if(j>i) min = j;\n            }\n        }\n        for(long i\
    \ : l1) {\n            for(long j : l2) {\n                if(i == j) continue;\n\
    \                if(i == j) common++;\n                if(i == j) break;\n   \
    \             if(i>j) max = i;\n                else if(j>i) min = j;\n      \
    \      }\n        }\n        for(long i : l2) {\n            for(long j : l1)\
    \ {\n                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) \n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp6linr4k.java:88: error: illegal start of statement\n    }\n  \
    \  ^\n/tmp/tmpp6linr4k.java:89: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpp6linr4k.java:89: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmpp6linr4k.java:89: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmpp6linr4k.java:89: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmpp6linr4k.java:89: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmpp6linr4k.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpct_o6f8b.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmp3weic.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6_movok.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiunizgum.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long i : set1) {\n            if(set2.contains(i)) {\n              \
    \  result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpmb3dsh1f.java:18)\n\tat Problem.main(tmpmb3dsh1f.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long i : set1) {\n            if(set2.contains(i)) {\n              \
    \  result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp2s_0hopz.java:18)\n\tat Problem.main(tmp2s_0hopz.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long i : set1) {\n            if(set2.contains(i)) {\n              \
    \  result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp_8hmvjgj.java:18)\n\tat Problem.main(tmp_8hmvjgj.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE, min2 = Long.MAX_VALUE;\n        for (long\
    \ i : l1) {\n            if (min1 < i) {\n                min1 = i;\n        \
    \    }\n        }\n        for (long i : l2) {\n            if (min2 < i) {\n\
    \                min2 = i;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) {\n        \
    \            common++;\n                }\n            }\n        }\n        for\
    \ (long i : l1) {\n            if (min1 < i) {\n                result.add(min1);\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min2 <\
    \ i) {\n                result.add(min2);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpda7thm0d.java:49)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8c_cxl4o.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41uek2ff.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        h1.removeAll(h2);\n\
    \        h2.removeAll(h1);\n        result.addAll(h1);\n        result.addAll(h2);\n\
    \        Collections.sort(result);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp05j6r9lj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8e_c0_je.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() != it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_knicjma.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a != b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wauxa9f.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcpcjxkv.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ num : set1) {\n            if(set2.contains(num)) {\n                result.add(num);\n\
    \                set1.remove(num);\n                set2.remove(num);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpiq8ccm1p.java:18)\n\tat Problem.main(tmpiq8ccm1p.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd9op7wh.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (i1 > i2) result.add(i1);\n            else if (i1 < i2) result.add(i2);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcpm4o3yi.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpeiwxdma6.java:18)\n\tat Problem.main(tmpeiwxdma6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzip0jxli.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ set1 = new HashSet<Long>(l1);\n        HashSet<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphtu3rxyo.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        for(long i : l1) {\n  \
    \          for(long j : l2) {\n                if(i == j) {\n                \
    \    common++;\n                    if(common > max) {\n                     \
    \   max = common;\n                    }\n                    if(common < min)\
    \ {\n                        min = common;\n                    }\n          \
    \      }\n            }\n        }\n        for(long i : l1) {\n            for(long\
    \ j : l2) {\n                if(i == j) {\n                    common++;\n   \
    \                 if(common > max) {\n                        max = common;\n\
    \                    }\n                    if(common < min) {\n             \
    \           min = common;\n                    }\n                }\n        \
    \    }\n        }\n        for(long i : l1) {\n            for(long j : l2) {\n\
    \                if(i == j) {\n                    common++;\n               \
    \     if(common > max) {\n                        max = common;\n            \
    \        }\n                    if(common < min) {\n                        min\
    \ = common;\n                    }\n                }\n            }\n       \
    \ }\n        for(long i : l1) {\n            for(long j : l2) {\n            \
    \    if(i == j) {\n                    common++;\n                    if(common\
    \ > max) {\n                        max = common;\n                    }\n   \
    \                 if(common < min) {\n                        min = common;\n\
    \                    }\n                }\n            }\n        }\n        for(long\
    \ i : l1) {\n            for(long j : l2) {\n                if(i == j) {\n  \
    \                  common++;\n                    if(common > max) {\n       \
    \                 max = common;\n                    }\n                    if(common\
    \ < min) {\n                        min = common;\n                    }\n   \
    \             }\n            }\n        }\n        for(long i : l1) {\n      \
    \      for(long j : l2) {\n                if(i == j) {\n                    common++;\n\
    \                    if(common > max) {\n                        max = common;\n\
    \                    }\n                    if(common < min) {\n             \
    \           min = common;\n                    }\n                }\n        \
    \    }\n        }\n        for(long i : l1) {\n            for(long j : l2) {\n\
    \                if(i == j) {\n                    common++;\n               \
    \     if(common > max) {\n                        max = common;\n            \
    \        }\n                    if(common < min) {\n                        min\
    \ = common;\n                    }\n                }\n            }\n       \
    \ }\n        for(long i : l1) {\n            for(long j : l2) {\n            \
    \    if(i == j) {\n                    common++;\n                    if(common\
    \ > max) {\n                        max = common;\n                    }\n   \
    \                 if(common < min) {\n                        min = common;\n\
    \                    }\n                }\n            }\n        }\n        for(long\
    \ i : l1) {\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeikgotwp.java:126: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpeikgotwp.java:126: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmpeikgotwp.java:126: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpeikgotwp.java:126: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpeikgotwp.java:126: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpeikgotwp.java:133: error: reached end of file while parsing\n\
    }\n ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk3c2c2ga.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n        commonSet.addAll(set2);\n\
    \        commonSet.removeAll(set1);\n        commonSet.removeAll(set2);\n    \
    \    commonSet.removeAll(common);\n        common.addAll(commonSet);\n       \
    \ Collections.sort(common);\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpay43_817.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ set1 = new HashSet<Long>(l1);\n        HashSet<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoxyelhmn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqljt7tq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            if (l2.contains(i)) {\n            \
    \    common++;\n            }\n        }\n        for (long i : l2) {\n      \
    \      if (l1.contains(i)) {\n                common++;\n            }\n     \
    \   }\n        if (common == 0) {\n            return result;\n        }\n   \
    \     for (long i : l1) {\n            if (l2.contains(i)) {\n               \
    \ result.add(i);\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (l1.contains(i)) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6v4d61ks.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (result.contains(a)) {\n                it1.remove();\n             \
    \   it2.remove();\n            } else {\n                result.add(a);\n    \
    \        }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeno2i90a.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpgthjg9av.java:18)\n\tat Problem.main(tmpgthjg9av.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (result.contains(a)) {\n                it1.remove();\n             \
    \   it2.remove();\n            } else {\n                result.add(a);\n    \
    \        }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyf5rt6zu.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        ArrayList<Long> l3\
    \ = new ArrayList<>();\n        ArrayList<Long> l4 = new ArrayList<>();\n    \
    \    ArrayList<Long> l5 = new ArrayList<>();\n        ArrayList<Long> l6 = new\
    \ ArrayList<>();\n        ArrayList<Long> l7 = new ArrayList<>();\n        ArrayList<Long>\
    \ l8 = new ArrayList<>();\n        ArrayList<Long> l9 = new ArrayList<>();\n \
    \       ArrayList<Long> l10 = new ArrayList<>();\n        ArrayList<Long> l11\
    \ = new ArrayList<>();\n        ArrayList<Long> l12 = new ArrayList<>();\n   \
    \     ArrayList<Long> l13 = new ArrayList<>();\n        ArrayList<Long> l14 =\
    \ new ArrayList<>();\n        ArrayList<Long> l15 = new ArrayList<>();\n     \
    \   ArrayList<Long> l16 = new ArrayList<>();\n        ArrayList<Long> l17 = new\
    \ ArrayList<>();\n        ArrayList<Long> l18 = new ArrayList<>();\n        ArrayList<Long>\
    \ l19 = new ArrayList<>();\n        ArrayList<Long> l20 = new ArrayList<>();\n\
    \        ArrayList<Long> l21 = new ArrayList<>();\n        ArrayList<Long> l22\
    \ = new ArrayList<>();\n        ArrayList<Long> l23 = new ArrayList<>();\n   \
    \     ArrayList<Long> l24 = new ArrayList<>();\n        ArrayList<Long> l25 =\
    \ new ArrayList<>();\n        ArrayList<Long> l26 = new ArrayList<>();\n     \
    \   ArrayList<Long> l27 = new ArrayList<>();\n        ArrayList<Long> l28 = new\
    \ ArrayList<>();\n        ArrayList<Long> l29 = new ArrayList<>();\n        ArrayList<Long>\
    \ l30 = new ArrayList<>();\n        ArrayList<Long> l31 = new ArrayList<>();\n\
    \        ArrayList<Long> l32 = new ArrayList<>();\n        ArrayList<Long> l33\
    \ = new ArrayList<>();\n        ArrayList<Long> l34 = new ArrayList<>();\n   \
    \     ArrayList<Long> l35 = new ArrayList<>();\n        ArrayList<Long> l36 =\
    \ new ArrayList<>();\n        ArrayList<Long> l37 = new ArrayList<>();\n     \
    \   ArrayList<Long> l38 = new ArrayList<>();\n        ArrayList<Long> l39 = new\
    \ ArrayList<>();\n        ArrayList<Long> l40 = new ArrayList<>();\n        ArrayList<Long>\
    \ l41 = new ArrayList<>();\n        ArrayList<Long> l42 = new ArrayList<>();\n\
    \        ArrayList<Long> l43 = new ArrayList<>();\n        ArrayList<Long> l44\
    \ = new ArrayList<>();\n        ArrayList<Long> l45 = new ArrayList<>();\n   \
    \     ArrayList<Long> l46 = new ArrayList<>();\n        ArrayList<Long> l47 =\
    \ new ArrayList<>();\n        ArrayList<Long> l48 = new ArrayList<>();\n     \
    \   ArrayList<Long> l49 = new ArrayList<>();\n        ArrayList<Long> l50 = new\
    \ ArrayList<>();\n        ArrayList<Long> l51 = new ArrayList<>();\n        ArrayList<Long>\
    \ l52 = \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptdxlj_41.java:66: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmptdxlj_41.java:67: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmptdxlj_41.java:67: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmptdxlj_41.java:67:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmptdxlj_41.java:67: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmptdxlj_41.java:67:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmptdxlj_41.java:74: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpht5t85_r.java:18)\n\tat Problem.main(tmpht5t85_r.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!commonSet.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9c90833b.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long num : set1) {\n            if(set2.contains(num)) {\n          \
    \      result.add(num);\n                set1.remove(num);\n                set2.remove(num);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpoe5nxprp.java:18)\n\tat Problem.main(tmpoe5nxprp.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n        commonSet.addAll(set2);\n\
    \        commonSet.removeAll(set1);\n        commonSet.removeAll(set2);\n    \
    \    commonSet.removeAll(common);\n        commonSet.addAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.remove\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp23ejb5_0.java:76: error: not a statement\n        commonSet.remove\n\
    \                 ^\n/tmp/tmp23ejb5_0.java:76: error: ';' expected\n        commonSet.remove\n\
    \                        ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            if (map.containsKey(i))\
    \ {\n                map.put(i, map.get(i) + 1);\n            } else {\n     \
    \           map.put(i, 1);\n            }\n        }\n        for (Long i : l2)\
    \ {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i)\
    \ - 1);\n            } else {\n                map.put(i, -1);\n            }\n\
    \        }\n        for (Long i : map.keySet()) {\n            if (map.get(i)\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplozseyg2.java:21: error: no suitable method found for put(Long,int)\n\
    \                map.put(i, 1);\n                   ^\n    method Map.put(Long,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method AbstractMap.put(Long,Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n    method HashMap.put(Long,Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n/tmp/tmplozseyg2.java:28:\
    \ error: no suitable method found for put(Long,int)\n                map.put(i,\
    \ -1);\n                   ^\n    method Map.put(Long,Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method AbstractMap.put(Long,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method HashMap.put(Long,Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ num : set1) {\n            if(set2.contains(num)) {\n                result.add(num);\n\
    \                set1.remove(num);\n                set2.remove(num);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp9hf61k8k.java:18)\n\tat Problem.main(tmp9hf61k8k.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max1 = 0, max2 = 0;\n        for (long i : l1) {\n            if\
    \ (l2.contains(i)) {\n                common += i;\n                max1 = Math.max(max1,\
    \ i);\n            }\n        }\n        for (long i : l2) {\n            if (l1.contains(i))\
    \ {\n                common += i;\n                max2 = Math.max(max2, i);\n\
    \            }\n        }\n        if (max1 == max2) {\n            result.add(common);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqenh9h9_.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqro989o.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpopyvac8s.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqz_c3m5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmkh1g818.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        Set<Long> commonSet = new HashSet<Long>(set1);\n        commonSet.removeAll(set2);\n\
    \        commonSet.removeAll(set1);\n        common.addAll(commonSet);\n     \
    \   Collections.sort(common);\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3dzbg8t.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnodu9b3a.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_csrnlqp.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpowlxa5wq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            if (l2.contains(i)) {\n            \
    \    common++;\n            }\n        }\n        for (long i : l2) {\n      \
    \      if (l1.contains(i)) {\n                common++;\n            }\n     \
    \   }\n        if (common == 0) {\n            return result;\n        }\n   \
    \     for (long i : l1) {\n            if (l2.contains(i)) {\n               \
    \ result.add(i);\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (l1.contains(i)) {\n                result.add(i);\n            }\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67ah3xuj.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpv8gy86n7.java:18)\n\tat Problem.main(tmpv8gy86n7.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (result.contains(i1) || result.contains(i2)) continue;\n         \
    \   result.add(i1);\n            result.add(i2);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpseigyg25.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            map.put(i,\
    \ i);\n        }\n        for (Long i : l2) {\n            if (map.containsKey(i))\
    \ {\n                result.add(map.get(i));\n                map.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptrwzlr3i.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjuenn0w7.java:85: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        for (long i : l1) {\n            for (long j :\
    \ l2) {\n                if (i == j) {\n                    common++;\n      \
    \          }\n                if (common > max) {\n                    max = common;\n\
    \                }\n            }\n        }\n        for (long i : l1) {\n  \
    \          for (long j : l2) {\n                if (i == j) {\n              \
    \      common++;\n                }\n                if (common > max) {\n   \
    \                 max = common;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \       if (common > max) {\n                    max = common;\n             \
    \   }\n            }\n        }\n        for (long i : l1) {\n            for\
    \ (long j : l2) {\n                if (i == j) {\n                    common++;\n\
    \                }\n                if (common > max) {\n                    max\
    \ = common;\n                }\n            }\n        }\n        for (long i\
    \ : l1) {\n            for (long j : l2) {\n                if (i == j) {\n  \
    \                  common++;\n                }\n                if (common >\
    \ max) {\n                    max = common;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \                if (common > max) {\n                    max = common;\n    \
    \            }\n            }\n        }\n        for (long i : l1) {\n      \
    \      for (long j : l2) {\n                if (i == j) {\n                  \
    \  common++;\n                }\n                if (common > max) {\n       \
    \             max = common;\n                }\n            }\n        }\n   \
    \     for (long i : l1) {\n            for (long j : l2) {\n                if\
    \ (i == j) {\n                    common++;\n                }\n             \
    \   if (common > max) {\n                    max = common;\n                }\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n                if (common > max) {\n                    max\
    \ = common;\n                }\n            }\n        }\n        for (long i\
    \ : l1) {\n            for (long j : l2) {\n                if (i == j) {\n  \
    \                  common++;\n                }\n                if (common >\
    \ max) {\n                    max = common;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \                if (common > max) {\n                    max = common;\n    \
    \            }\n            }\n        }\n        for (long i : l1) {\n      \
    \      for (long j : l2) {\n                if (i == j) {\n                  \
    \  common++;\n                }\n                if (common > max) {\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc3b9uyy9.java:136: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpc3b9uyy9.java:136: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmpc3b9uyy9.java:136: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpc3b9uyy9.java:136: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpc3b9uyy9.java:136: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpc3b9uyy9.java:143: error: reached end of file while parsing\n\
    }\n ^\n/tmp/tmpc3b9uyy9.java:144: error: reached end of file while parsing\n7\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoloqwyhm.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfuc5_m5p.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk9v7hwvu.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a > b) {\n                it1.remove();\n\
    \            } else {\n                it2.remove();\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7qbdig15.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpizpkhf_8.java:18)\n\tat Problem.main(tmpizpkhf_8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = h1.iterator();\n        Iterator<Long> it2 = h2.iterator();\n        while\
    \ (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n    \
    \        Long i2 = it2.next();\n            if (i1 == i2) {\n                result.add(i1);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphtzpnxqz.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ h1 = new HashSet<Long>(l1);\n        HashSet<Long> h2 = new HashSet<Long>(l2);\n\
    \        h1.retainAll(h2);\n        common.addAll(h1);\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_omirbr4.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm06aewu2.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a > b) {\n                it1.remove();\n\
    \            } else {\n                it2.remove();\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdhvus6k6.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmppwl4bsra.java:18)\n\tat Problem.main(tmppwl4bsra.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmp_wxm0v6t.java:18)\n\tat Problem.main(tmp_wxm0v6t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdqw7sb60.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long count = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppjb17iqg.java:101: error: ';' expected\n        long sum81\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj65sogjg.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long val : set1) {\n            if(set2.contains(val)) {\n          \
    \      result.add(val);\n                set1.remove(val);\n                set2.remove(val);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)\n\tat java.util.HashMap$KeyIterator.next(HashMap.java:1466)\n\
    \tat Problem.common(tmpz6jjxdf5.java:18)\n\tat Problem.main(tmpz6jjxdf5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjr9caoib.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_y394qij.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd6zvj5wm.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : \n \
    \   }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpslyhio0t.java:113: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpslyhio0t.java:114: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpslyhio0t.java:114: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpslyhio0t.java:114:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpslyhio0t.java:114: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpslyhio0t.java:114:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpslyhio0t.java:121: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmevgckfj.java:25)\n"
  exit_code: 1
  status: Exception

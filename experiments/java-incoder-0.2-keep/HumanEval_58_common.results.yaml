name: HumanEval_58_common
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                common.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return common;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpd66xzmjq.java:18)\n\
    \tat Problem.main(tmpd66xzmjq.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = 0, min2 = 0;\n        long max1 = 0, max2 = 0;\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            min1 = Math.min(min1, l1.get(i));\n\
    \            max1 = Math.max(max1, l1.get(i));\n        }\n        for (int i\
    \ = 0; i < l2.size(); i++) {\n            min2 = Math.min(min2, l2.get(i));\n\
    \            max2 = Math.max(max2, l2.get(i));\n        }\n        for (int i\
    \ = 0; i < l1.size(); i++) {\n            common = Math.min(common, l1.get(i));\n\
    \        }\n        for (int i = 0; i < l2.size(); i++) {\n            common\
    \ = Math.min(common, l2.get(i));\n        }\n        for (int i = 0; i < l1.size();\
    \ i++) {\n            if (l1.get(i) == common) {\n                result.add(l1.get(i));\n\
    \            }\n        }\n        for (int i = 0; i < l2.size(); i++) {\n   \
    \         if (l2.get(i) == common) {\n                result.add(l2.get(i));\n\
    \            }\n        }\n        for (int i = 0; i < result.size(); i++) {\n\
    \            if (result.get(i) < min1) {\n                result.add(min1);\n\
    \            }\n            if (result.get(i) > max1) {\n                result.add(max1);\n\
    \            }\n            if (result.get(i) < min2) {\n                result.add(min2);\n\
    \            }\n            if (result.get(i) > max2) {\n                result.add(max2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1wz1ph0.java:61)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd96ett8e.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE;\n        long min2 = Long.MAX_VALUE;\n  \
    \      for (long i : l1) {\n            if (min1 < i) {\n                min1\
    \ = i;\n            }\n        }\n        for (long i : l2) {\n            if\
    \ (min2 < i) {\n                min2 = i;\n            }\n        }\n        for\
    \ (long i : l1) {\n            for (long j : l2) {\n                if (i == j)\
    \ {\n                    common++;\n                }\n            }\n       \
    \ }\n        for (long i : l1) {\n            if (min1 < i) {\n              \
    \  result.add(min1);\n            }\n        }\n        for (long i : l2) {\n\
    \            if (min2 < i) {\n                result.add(min2);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ny395fh.java:50)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            map.put(i,\
    \ map.getOrDefault(i, 0) + 1);\n        }\n        for (Long i : l2) {\n     \
    \       map.put(i, map.getOrDefault(i, 0) + 1);\n        }\n        for (Map.Entry<Long,\
    \ Long> entry : map.entrySet()) {\n            if (entry.getValue() == l1.size()\
    \ || entry.getValue() == l2.size()) {\n                common.add(entry.getKey());\n\
    \            }\n        }\n        Collections.sort(common);\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu4kb9mlk.java:18: error: incompatible types: int cannot be converted\
    \ to Long\n            map.put(i, map.getOrDefault(i, 0) + 1);\n             \
    \                              ^\n/tmp/tmpu4kb9mlk.java:21: error: incompatible\
    \ types: int cannot be converted to Long\n            map.put(i, map.getOrDefault(i,\
    \ 0) + 1);\n                                           ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ape0pml.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp548jkx73.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk34xkh64.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a < b) {\n                result.add(b);\n\
    \            } else {\n                result.add(a);\n            }\n       \
    \ }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa3ucx4sm.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxxytzxy1.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long max1 = 0;\n      \
    \  long min1 = 0;\n        long max2 = 0;\n        long min2 = 0;\n        long\
    \ max3 = 0;\n        long min3 = 0;\n        long max4 = 0;\n        long min4\
    \ = 0;\n        long max5 = 0;\n        long min5 = 0;\n        long max6 = 0;\n\
    \        long min6 = 0;\n        long max7 = 0;\n        long min7 = 0;\n    \
    \    long max8 = 0;\n        long min8 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long max10 = 0;\n        long min10 = 0;\n        long max11\
    \ = 0;\n        long min11 = 0;\n        long max12 = 0;\n        long min12 =\
    \ 0;\n        long max13 = 0;\n        long min13 = 0;\n        long max14 = 0;\n\
    \        long min14 = 0;\n        long max15 = 0;\n        long min15 = 0;\n \
    \       long max16 = 0;\n        long min16 = 0;\n        long max17 = 0;\n  \
    \      long min17 = 0;\n        long max18 = 0;\n        long min18 = 0;\n   \
    \     long max19 = 0;\n        long min19 = 0;\n        long max20 = 0;\n    \
    \    long min20 = 0;\n        long max21 = 0;\n        long min21 = 0;\n     \
    \   long max22 = 0;\n        long min22 = 0;\n        long max23 = 0;\n      \
    \  long min23 = 0;\n        long max24 = 0;\n        long min24 = 0;\n       \
    \ long max25 = 0;\n        long min25 = 0;\n        long max26 = 0;\n        long\
    \ min26 = 0;\n        long max27 = 0;\n        long min27 = 0;\n        long max28\
    \ = 0;\n        long min28 = 0;\n        long max29 = 0;\n        long min29 =\
    \ 0;\n        long max30 = 0;\n        long min30 = 0;\n        long max31 = 0;\n\
    \        long min31 = 0;\n        long max32 = 0;\n        long min32 = 0;\n \
    \       long max33 = 0;\n        long min33 = 0;\n        long max34 = 0;\n  \
    \      long min34 = 0;\n        long max35 = 0;\n        long min35 = 0;\n   \
    \     long max36 = 0;\n        long min36 = 0;\n        long max37 = 0;\n    \
    \    long min37 = 0;\n        long max38 = 0;\n        long min38 = 0;\n     \
    \   long max39 = 0;\n        long min39 = 0;\n        long max40 = 0;\n      \
    \  long min40 = 0;\n        long max41 = 0;\n        long min41 = 0;\n       \
    \ long max42 = 0;\n\n    }\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe4oval0x.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp4lx7k21j.java:18)\n\
    \tat Problem.main(tmp4lx7k21j.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp4te1guem.java:18)\n\
    \tat Problem.main(tmp4te1guem.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpt5ml3tj_.java:18)\n\
    \tat Problem.main(tmpt5ml3tj_.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long num : set1) {\n            if (set2.contains(num))\
    \ {\n                common.add(num);\n            }\n        }\n        for (Long\
    \ num : set2) {\n            if (!set1.contains(num)) {\n                common.add(num);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7ehm1yu.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp1k3omt30.java:18)\n\
    \tat Problem.main(tmp1k3omt30.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = l1.stream().filter(x\
    \ -> l2.contains(x)).count();\n        result.add(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4wns8502.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp1fpdhjqt.java:18)\n\
    \tat Problem.main(tmp1fpdhjqt.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        common.addAll(h1);\n\
    \        common.addAll(h2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphoc2vk63.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt93tc8_1.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ h1 = new HashMap<>();\n        HashMap<Long, Long> h2 = new HashMap<>();\n \
    \       for (Long x : l1) {\n            h1.put(x, x);\n        }\n        for\
    \ (Long x : l2) {\n            h2.put(x, x);\n        }\n        for (Long x :\
    \ h1.keySet()) {\n            if (h2.containsKey(x)) {\n                result.add(x);\n\
    \                h1.remove(x);\n                h2.remove(x);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpy4yb83g3.java:24)\n\
    \tat Problem.main(tmpy4yb83g3.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long n1 = it1.next();\n\
    \            Long n2 = it2.next();\n            if (n1 == n2) {\n            \
    \    result.add(n1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (n1 < n2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd5wmh3sd.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp9qw1p6lg.java:18)\n\
    \tat Problem.main(tmp9qw1p6lg.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5zkgq9c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42fs1lau.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg36hisuy.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next()\
    \ == it2.next()) {\n                result.add(it1.next());\n            }\n \
    \       }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv1guyu59.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptoquzp6x.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr99visoi.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpk21fiiwn.java:18)\n\
    \tat Problem.main(tmpk21fiiwn.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        for (Long i : common) {\n            if (l1.contains(i) && l2.contains(i))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpon2fty9s.java:18)\n\
    \tat Problem.main(tmpon2fty9s.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvt4t27im.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxrr3uoi.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l2) {\n            for (long j : l1) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbsjwn9fn.java:136: error: ')' expected\n        for (long i : l\n\
    \                       ^\n/tmp/tmpbsjwn9fn.java:137: error: illegal start of\
    \ statement\n    }\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        set1.retainAll(set2);\n\
    \        set2.retainAll(set1);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.addAll(set2);\n        set1.removeAll(set2);\n        set2.removeAll(set1);\n\
    \        set1.\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv209i0rb.java:85: error: <identifier> expected\n        set1.\n\
    \             ^\n/tmp/tmpv209i0rb.java:85: error: not a statement\n        set1.\n\
    \            ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe30_82jr.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpgf0dtte1.java:18)\n\
    \tat Problem.main(tmpgf0dtte1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpdndtbu3o.java:18)\n\
    \tat Problem.main(tmpdndtbu3o.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpflqfulw0.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4j5s1jr8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpw2g4kb4i.java:18)\n\
    \tat Problem.main(tmpw2g4kb4i.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = h1.iterator();\n        Iterator<Long> it2 = h2.iterator();\n        while\
    \ (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() != it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfjgi2g68.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long common2 = 0;\n        long common3 = 0;\n        long common4 =\
    \ 0;\n        long common5 = 0;\n        long common6 = 0;\n        long common7\
    \ = 0;\n        long common8 = 0;\n        long common9 = 0;\n        long common10\
    \ = 0;\n        long common11 = 0;\n        long common12 = 0;\n        long common13\
    \ = 0;\n        long common14 = 0;\n        long common15 = 0;\n        long common16\
    \ = 0;\n        long common17 = 0;\n        long common18 = 0;\n        long common19\
    \ = 0;\n        long common20 = 0;\n        long common21 = 0;\n        long common22\
    \ = 0;\n        long common23 = 0;\n        long common24 = 0;\n        long common25\
    \ = 0;\n        long common26 = 0;\n        long common27 = 0;\n        long common28\
    \ = 0;\n        long common29 = 0;\n        long common30 = 0;\n        long common31\
    \ = 0;\n        long common32 = 0;\n        long common33 = 0;\n        long common34\
    \ = 0;\n        long common35 = 0;\n        long common36 = 0;\n        long common37\
    \ = 0;\n        long common38 = 0;\n        long common39 = 0;\n        long common40\
    \ = 0;\n        long common41 = 0;\n        long common42 = 0;\n        long common43\
    \ = 0;\n        long common44 = 0;\n        long common45 = 0;\n        long common46\
    \ = 0;\n        long common47 = 0;\n        long common48 = 0;\n        long common49\
    \ = 0;\n        long common50 = 0;\n        long common51 = 0;\n        long common52\
    \ = 0;\n        long common53 = 0;\n        long common54 = 0;\n        long common55\
    \ = 0;\n        long common56 = 0;\n        long common57 = 0;\n        long common58\
    \ = 0;\n        long common59 = 0;\n        long common60 = 0;\n        long common61\
    \ = 0;\n        long common62 = 0;\n        long common63 = 0;\n        long common64\
    \ = 0;\n        long common65 = 0;\n        long common66 = 0;\n        long common67\
    \ = 0;\n        long common68 = 0;\n        long common69 = 0;\n        long common70\
    \ = 0;\n        long common71 = 0;\n        long common72 = 0;\n        long common73\
    \ = 0;\n        long common74 = 0;\n        long common75 = 0;\n        long common76\
    \ = 0;\n        long common77 = 0;\n        long common78 = 0;\n        long common79\
    \ = 0;\n        long common80 = 0;\n        long common81 = 0;\n        long common82\
    \ = 0;\n        long common83 = 0;\n        long common84 = 0;\n        long common85\n\
    \    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpye56z_zi.java:100: error: ';' expected\n        long common85\n\
    \                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (a > b) {\n                it1.remove();\n            }\
    \ else {\n                it2.remove();\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj36_d_sv.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_w6aqod.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeswue90i.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1mfp2xyt.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwnq2m1cs.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9frq6ilk.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (a > b) {\n                it1.remove();\n            }\
    \ else {\n                it2.remove();\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xshv2yq.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfhbd2u6u.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (i1 < i2) result.add(i1);\n            if (i2 < i1) result.add(i2);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2_qcedg6.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprm8aamrm.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        common.addAll(h1);\n\
    \        common.addAll(h2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfng22m1.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6u_azh7v.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn6qcg6se.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (set1.contains(b) && set2.contains(a)) {\n                result.add(a);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvv32ekz2.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ik5s1qx.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpevznh7y4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE;\n        long min2 = Long.MAX_VALUE;\n  \
    \      for (long i : l1) {\n            if (min1 < i) {\n                min1\
    \ = i;\n            }\n        }\n        for (long i : l2) {\n            if\
    \ (min2 < i) {\n                min2 = i;\n            }\n        }\n        for\
    \ (long i : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l1) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l2) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : \n    }\n  \
    \  public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp150nv_l4.java:120: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbjqk1n2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp52hfj5__.java:18)\n\
    \tat Problem.main(tmp52hfj5__.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l1) {\n    \
    \        for (long j : l2) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l2) {\n            for (long j : l1) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l2) {\n            for (long j : l1) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common++;\n                }\n            }\n        }\n        for (long\
    \ i : l1) {\n            for (long j : l2) {\n                if (i == j) {\n\
    \                    common++;\n                }\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \   }\n        }\n        for (long i : l1) {\n            for (long j : l2) {\n\
    \                if (i == j) {\n                    common++;\n              \
    \  }\n            }\n        }\n        for (long i : l\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqzwiogeo.java:136: error: ')' expected\n        for (long i : l\n\
    \                       ^\n/tmp/tmpqzwiogeo.java:137: error: illegal start of\
    \ statement\n    }\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbgsc8aw.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() != it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ytwz2hd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp444kyj6t.java:18)\n\
    \tat Problem.main(tmp444kyj6t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp01xpm_93.java:18)\n\
    \tat Problem.main(tmp01xpm_93.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqb0gxd40.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpheao4nqh.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpgq7gkobw.java:18)\n\
    \tat Problem.main(tmpgq7gkobw.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyagj3ibu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long val : set1) {\n            if (set2.contains(val))\
    \ {\n                common.add(val);\n            }\n        }\n        for (Long\
    \ val : set2) {\n            if (!set1.contains(val)) {\n                common.add(val);\n\
    \            }\n        }\n        result.addAll(common);\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplzxj7ncs.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdcb649o4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvw4i6q4.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52s7nah3.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ax14brt.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpirc4popb.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ hs1 = new HashSet<Long>(l1);\n        HashSet<Long> hs2 = new HashSet<Long>(l2);\n\
    \        common.addAll(hs1);\n        common.addAll(hs2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67_ug8dy.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ l : set1) {\n            if(set2.contains(l)) {\n                result.add(l);\n\
    \                set1.remove(l);\n                set2.remove(l);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp22ku5uoo.java:18)\n\
    \tat Problem.main(tmp22ku5uoo.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9bjtwjwv.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpu8jsyl01.java:18)\n\
    \tat Problem.main(tmpu8jsyl01.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4wuxdec.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n        commonSet.addAll(set2);\n\
    \        commonSet.removeAll(set1);\n        commonSet.removeAll(set2);\n    \
    \    commonSet.removeAll(common);\n        common.addAll(commonSet);\n       \
    \ Collections.sort(common);\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_a1jifud.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!commonSet.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwotfwa2m.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprcvmu72t.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!set1.contains(i)) {\n\
    \                commonSet.add(i);\n            }\n        }\n        for (Long\
    \ i : commonSet) {\n            common.add(i);\n        }\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdbph4dlr.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnv0aiskv.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpixeivsst.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_rd5atfz.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long count = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc_yk5kkc.java:101: error: ';' expected\n        long sum81\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(!set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2np85qpo.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpyzj0ylbl.java:18)\n\
    \tat Problem.main(tmpyzj0ylbl.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE, min2 = Long.MAX_VALUE;\n        for (long\
    \ i : l1) {\n            if (min1 < i) {\n                min1 = i;\n        \
    \    }\n        }\n        for (long i : l2) {\n            if (min2 < i) {\n\
    \                min2 = i;\n            }\n        }\n        for (long i : l1)\
    \ {\n            if (min1 < i && min2 < i) {\n                common++;\n    \
    \        }\n        }\n        for (long i : l2) {\n            if (min1 < i &&\
    \ min2 < i) {\n                common++;\n            }\n        }\n        for\
    \ (long i : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l2) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l1) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l2) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l1) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min1 <\
    \ i && min2 < i) {\n                common++;\n            }\n        }\n    \
    \    for (long i : l1) {\n            if (min1 < i && min2 < i) {\n          \
    \      common++;\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (min1 < i && min2 < i) {\n                common++;\n            }\n\
    \        }\n        for (long i : l1) {\n            if (min1 < i && min2 < i)\
    \ {\n                common++;\n            }\n        }\n        for (long i\
    \ : l2) {\n            if (min1 < i && min2 < i) {\n                common++;\n\
    \            }\n        }\n        for (long i : l1) {\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi6zx3rn9.java:121: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxb7__iu.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbf4li_hh.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzk921oka.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp5uxz20gu.java:18)\n\
    \tat Problem.main(tmp5uxz20gu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnwtgjlh8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63bthtmy.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv9cjlzkx.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9hzdu77x.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoxq1wdu8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchl0fz1j.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg26c2lbb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbyobt8x5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        h1.retainAll(h2);\n\
    \        h2.retainAll(h1);\n        result.addAll(h1);\n        result.addAll(h2);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckt41zzh.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpiaxls4d6.java:18)\n\
    \tat Problem.main(tmpiaxls4d6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7fbnthb7.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gftiww1.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long common2 = 0;\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n            }\n        }\n        for (long i : l2) {\n    \
    \        for (long j : l1) {\n                if (i == j) {\n                \
    \    common2++;\n                }\n            }\n        }\n        if (common\
    \ == common2) {\n            for (long i : l1) {\n                result.add(i);\n\
    \            }\n        } else {\n            for (long i : l2) {\n          \
    \      result.add(i);\n            }\n        }\n        return result;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoa1o0anf.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_iuju2k1.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            map.put(i,\
    \ i);\n        }\n        for (Long i : l2) {\n            if (map.containsKey(i))\
    \ {\n                result.add(map.get(i));\n                map.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg4aa4slp.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk8nzq_fj.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long l : set1) {\n            if (set2.contains(l))\
    \ {\n                common.add(l);\n            }\n        }\n        for (Long\
    \ l : set2) {\n            if (!common.contains(l)) {\n                result.add(l);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrwwupg4.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpef4ngcld.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!set1.contains(i)) {\n\
    \                commonSet.add(i);\n            }\n        }\n        for (Long\
    \ i : commonSet) {\n            common.add(i);\n        }\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mfpiotx.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp48hamij7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(l1);\n        common.removeAll(l2);\n        result.addAll(common);\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjy_dd9p.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpttnsix_3.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long val : set1) {\n            if(set2.contains(val)) {\n          \
    \      result.add(val);\n                set1.remove(val);\n                set2.remove(val);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpdo0z7ve8.java:18)\n\
    \tat Problem.main(tmpdo0z7ve8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5l_zi1p.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nyu94rb.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (result.contains(a)) {\n                it1.remove();\n             \
    \   it2.remove();\n            } else if (result.contains(b)) {\n            \
    \    it2.remove();\n            } else {\n                result.add(a);\n   \
    \             result.add(b);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ayq47du.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        for(long i : l1) {\n  \
    \          for(long j : l2) {\n                if(i == j) continue;\n        \
    \        if(i == j) common++;\n                if(i == j) break;\n           \
    \     if(i>j) max = i;\n                else if(j>i) min = j;\n            }\n\
    \        }\n        for(long i : l2) {\n            for(long j : l1) {\n     \
    \           if(i == j) continue;\n                if(i == j) common++;\n     \
    \           if(i == j) break;\n                if(i>j) max = i;\n            \
    \    else if(j>i) min = j;\n            }\n        }\n        for(long i : l1)\
    \ {\n            for(long j : l2) {\n                if(i == j) continue;\n  \
    \              if(i == j) common++;\n                if(i == j) break;\n     \
    \           if(i>j) max = i;\n                else if(j>i) min = j;\n        \
    \    }\n        }\n        for(long i : l2) {\n            for(long j : l1) {\n\
    \                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) max = i;\n       \
    \         else if(j>i) min = j;\n            }\n        }\n        for(long i\
    \ : l1) {\n            for(long j : l2) {\n                if(i == j) continue;\n\
    \                if(i == j) common++;\n                if(i == j) break;\n   \
    \             if(i>j) max = i;\n                else if(j>i) min = j;\n      \
    \      }\n        }\n        for(long i : l2) {\n            for(long j : l1)\
    \ {\n                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) max = i;\n       \
    \         else if(j>i) min = j;\n            }\n        }\n        for(long i\
    \ : l1) {\n            for(long j : l2) {\n                if(i == j) continue;\n\
    \                if(i == j) common++;\n                if(i == j) break;\n   \
    \             if(i>j) max = i;\n                else if(j>i) min = j;\n      \
    \      }\n        }\n        for(long i : l2) {\n            for(long j : l1)\
    \ {\n                if(i == j) continue;\n                if(i == j) common++;\n\
    \                if(i == j) break;\n                if(i>j) \n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0cee45f3.java:88: error: illegal start of statement\n    }\n  \
    \  ^\n/tmp/tmp0cee45f3.java:89: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            } else if (i1 < i2) {\n                it1.remove();\n          \
    \  } else {\n                it2.remove();\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgekdbovs.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp745tvkf4.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6u1b7r39.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp37qbvc2g.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long i : set1) {\n            if(set2.contains(i)) {\n              \
    \  result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpfhvmn_9y.java:18)\n\
    \tat Problem.main(tmpfhvmn_9y.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long i : set1) {\n            if(set2.contains(i)) {\n              \
    \  result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp3a702oy4.java:18)\n\
    \tat Problem.main(tmp3a702oy4.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long i : set1) {\n            if(set2.contains(i)) {\n              \
    \  result.add(i);\n                set1.remove(i);\n                set2.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpobqoxlzm.java:18)\n\
    \tat Problem.main(tmpobqoxlzm.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long min1 = Long.MAX_VALUE, min2 = Long.MAX_VALUE;\n        for (long\
    \ i : l1) {\n            if (min1 < i) {\n                min1 = i;\n        \
    \    }\n        }\n        for (long i : l2) {\n            if (min2 < i) {\n\
    \                min2 = i;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) {\n        \
    \            common++;\n                }\n            }\n        }\n        for\
    \ (long i : l1) {\n            if (min1 < i) {\n                result.add(min1);\n\
    \            }\n        }\n        for (long i : l2) {\n            if (min2 <\
    \ i) {\n                result.add(min2);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ffivvki.java:49)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph2in7sn6.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4yp8a4bu.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        h1.removeAll(h2);\n\
    \        h2.removeAll(h1);\n        result.addAll(h1);\n        result.addAll(h2);\n\
    \        Collections.sort(result);\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps39gciz3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppong8pre.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() != it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0hxehsga.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a != b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfvcswtlr.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jnj7iz_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ num : set1) {\n            if(set2.contains(num)) {\n                result.add(num);\n\
    \                set1.remove(num);\n                set2.remove(num);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpnu84jog9.java:18)\n\
    \tat Problem.main(tmpnu84jog9.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyidlaw2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (i1 > i2) result.add(i1);\n            else if (i1 < i2) result.add(i2);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bwd5rvo.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpcz77ma_m.java:18)\n\
    \tat Problem.main(tmpcz77ma_m.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3esairev.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ set1 = new HashSet<Long>(l1);\n        HashSet<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9w3hkis.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        for(long i : l1) {\n  \
    \          for(long j : l2) {\n                if(i == j) {\n                \
    \    common++;\n                    if(common > max) {\n                     \
    \   max = common;\n                    }\n                    if(common < min)\
    \ {\n                        min = common;\n                    }\n          \
    \      }\n            }\n        }\n        for(long i : l1) {\n            for(long\
    \ j : l2) {\n                if(i == j) {\n                    common++;\n   \
    \                 if(common > max) {\n                        max = common;\n\
    \                    }\n                    if(common < min) {\n             \
    \           min = common;\n                    }\n                }\n        \
    \    }\n        }\n        for(long i : l1) {\n            for(long j : l2) {\n\
    \                if(i == j) {\n                    common++;\n               \
    \     if(common > max) {\n                        max = common;\n            \
    \        }\n                    if(common < min) {\n                        min\
    \ = common;\n                    }\n                }\n            }\n       \
    \ }\n        for(long i : l1) {\n            for(long j : l2) {\n            \
    \    if(i == j) {\n                    common++;\n                    if(common\
    \ > max) {\n                        max = common;\n                    }\n   \
    \                 if(common < min) {\n                        min = common;\n\
    \                    }\n                }\n            }\n        }\n        for(long\
    \ i : l1) {\n            for(long j : l2) {\n                if(i == j) {\n  \
    \                  common++;\n                    if(common > max) {\n       \
    \                 max = common;\n                    }\n                    if(common\
    \ < min) {\n                        min = common;\n                    }\n   \
    \             }\n            }\n        }\n        for(long i : l1) {\n      \
    \      for(long j : l2) {\n                if(i == j) {\n                    common++;\n\
    \                    if(common > max) {\n                        max = common;\n\
    \                    }\n                    if(common < min) {\n             \
    \           min = common;\n                    }\n                }\n        \
    \    }\n        }\n        for(long i : l1) {\n            for(long j : l2) {\n\
    \                if(i == j) {\n                    common++;\n               \
    \     if(common > max) {\n                        max = common;\n            \
    \        }\n                    if(common < min) {\n                        min\
    \ = common;\n                    }\n                }\n            }\n       \
    \ }\n        for(long i : l1) {\n            for(long j : l2) {\n            \
    \    if(i == j) {\n                    common++;\n                    if(common\
    \ > max) {\n                        max = common;\n                    }\n   \
    \                 if(common < min) {\n                        min = common;\n\
    \                    }\n                }\n            }\n        }\n        for(long\
    \ i : l1) {\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0bdxo0aq.java:126: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxol0o1gk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n        commonSet.addAll(set2);\n\
    \        commonSet.removeAll(set1);\n        commonSet.removeAll(set2);\n    \
    \    commonSet.removeAll(common);\n        common.addAll(commonSet);\n       \
    \ Collections.sort(common);\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgzdagrpq.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ set1 = new HashSet<Long>(l1);\n        HashSet<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpess0ppce.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9n_3g8e.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            if (l2.contains(i)) {\n            \
    \    common++;\n            }\n        }\n        for (long i : l2) {\n      \
    \      if (l1.contains(i)) {\n                common++;\n            }\n     \
    \   }\n        if (common == 0) {\n            return result;\n        }\n   \
    \     for (long i : l1) {\n            if (l2.contains(i)) {\n               \
    \ result.add(i);\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (l1.contains(i)) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjkk1wprx.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (result.contains(a)) {\n                it1.remove();\n             \
    \   it2.remove();\n            } else {\n                result.add(a);\n    \
    \        }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoerccrzt.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ val : set1) {\n            if(set2.contains(val)) {\n                result.add(val);\n\
    \                set1.remove(val);\n                set2.remove(val);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpqd3h5co7.java:18)\n\
    \tat Problem.main(tmpqd3h5co7.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) continue;\n       \
    \     if (result.contains(a)) {\n                it1.remove();\n             \
    \   it2.remove();\n            } else {\n                result.add(a);\n    \
    \        }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpomx7cg9e.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        ArrayList<Long> l3\
    \ = new ArrayList<>();\n        ArrayList<Long> l4 = new ArrayList<>();\n    \
    \    ArrayList<Long> l5 = new ArrayList<>();\n        ArrayList<Long> l6 = new\
    \ ArrayList<>();\n        ArrayList<Long> l7 = new ArrayList<>();\n        ArrayList<Long>\
    \ l8 = new ArrayList<>();\n        ArrayList<Long> l9 = new ArrayList<>();\n \
    \       ArrayList<Long> l10 = new ArrayList<>();\n        ArrayList<Long> l11\
    \ = new ArrayList<>();\n        ArrayList<Long> l12 = new ArrayList<>();\n   \
    \     ArrayList<Long> l13 = new ArrayList<>();\n        ArrayList<Long> l14 =\
    \ new ArrayList<>();\n        ArrayList<Long> l15 = new ArrayList<>();\n     \
    \   ArrayList<Long> l16 = new ArrayList<>();\n        ArrayList<Long> l17 = new\
    \ ArrayList<>();\n        ArrayList<Long> l18 = new ArrayList<>();\n        ArrayList<Long>\
    \ l19 = new ArrayList<>();\n        ArrayList<Long> l20 = new ArrayList<>();\n\
    \        ArrayList<Long> l21 = new ArrayList<>();\n        ArrayList<Long> l22\
    \ = new ArrayList<>();\n        ArrayList<Long> l23 = new ArrayList<>();\n   \
    \     ArrayList<Long> l24 = new ArrayList<>();\n        ArrayList<Long> l25 =\
    \ new ArrayList<>();\n        ArrayList<Long> l26 = new ArrayList<>();\n     \
    \   ArrayList<Long> l27 = new ArrayList<>();\n        ArrayList<Long> l28 = new\
    \ ArrayList<>();\n        ArrayList<Long> l29 = new ArrayList<>();\n        ArrayList<Long>\
    \ l30 = new ArrayList<>();\n        ArrayList<Long> l31 = new ArrayList<>();\n\
    \        ArrayList<Long> l32 = new ArrayList<>();\n        ArrayList<Long> l33\
    \ = new ArrayList<>();\n        ArrayList<Long> l34 = new ArrayList<>();\n   \
    \     ArrayList<Long> l35 = new ArrayList<>();\n        ArrayList<Long> l36 =\
    \ new ArrayList<>();\n        ArrayList<Long> l37 = new ArrayList<>();\n     \
    \   ArrayList<Long> l38 = new ArrayList<>();\n        ArrayList<Long> l39 = new\
    \ ArrayList<>();\n        ArrayList<Long> l40 = new ArrayList<>();\n        ArrayList<Long>\
    \ l41 = new ArrayList<>();\n        ArrayList<Long> l42 = new ArrayList<>();\n\
    \        ArrayList<Long> l43 = new ArrayList<>();\n        ArrayList<Long> l44\
    \ = new ArrayList<>();\n        ArrayList<Long> l45 = new ArrayList<>();\n   \
    \     ArrayList<Long> l46 = new ArrayList<>();\n        ArrayList<Long> l47 =\
    \ new ArrayList<>();\n        ArrayList<Long> l48 = new ArrayList<>();\n     \
    \   ArrayList<Long> l49 = new ArrayList<>();\n        ArrayList<Long> l50 = new\
    \ ArrayList<>();\n        ArrayList<Long> l51 = new ArrayList<>();\n        ArrayList<Long>\
    \ l52 = \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy5yc839l.java:66: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpzoom4kl8.java:18)\n\
    \tat Problem.main(tmpzoom4kl8.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        for (Long i : set1) {\n            if\
    \ (set2.contains(i)) {\n                commonSet.add(i);\n            }\n   \
    \     }\n        for (Long i : set2) {\n            if (!commonSet.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurt8xlt5.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long num : set1) {\n            if(set2.contains(num)) {\n          \
    \      result.add(num);\n                set1.remove(num);\n                set2.remove(num);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpm5zk_44t.java:18)\n\
    \tat Problem.main(tmpm5zk_44t.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ commonSet = new HashSet<>();\n        commonSet.addAll(set1);\n        commonSet.addAll(set2);\n\
    \        commonSet.removeAll(set1);\n        commonSet.removeAll(set2);\n    \
    \    commonSet.removeAll(common);\n        commonSet.addAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.removeAll(common);\n       \
    \ commonSet.removeAll(common);\n        commonSet.remove\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp7hpnvic.java:76: error: not a statement\n        commonSet.remove\n\
    \                 ^\n/tmp/tmpp7hpnvic.java:76: error: ';' expected\n        commonSet.remove\n\
    \                        ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            if (map.containsKey(i))\
    \ {\n                map.put(i, map.get(i) + 1);\n            } else {\n     \
    \           map.put(i, 1);\n            }\n        }\n        for (Long i : l2)\
    \ {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i)\
    \ - 1);\n            } else {\n                map.put(i, -1);\n            }\n\
    \        }\n        for (Long i : map.keySet()) {\n            if (map.get(i)\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ydw5mf0.java:21: error: incompatible types: int cannot be converted\
    \ to Long\n                map.put(i, 1);\n                           ^\n/tmp/tmp6ydw5mf0.java:28:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ map.put(i, -1);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ num : set1) {\n            if(set2.contains(num)) {\n                result.add(num);\n\
    \                set1.remove(num);\n                set2.remove(num);\n      \
    \      }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpi45b3lau.java:18)\n\
    \tat Problem.main(tmpi45b3lau.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max1 = 0, max2 = 0;\n        for (long i : l1) {\n            if\
    \ (l2.contains(i)) {\n                common += i;\n                max1 = Math.max(max1,\
    \ i);\n            }\n        }\n        for (long i : l2) {\n            if (l1.contains(i))\
    \ {\n                common += i;\n                max2 = Math.max(max2, i);\n\
    \            }\n        }\n        if (max1 == max2) {\n            result.add(common);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyk2g3baa.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpconw9rsy.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92rqgtnb.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) result.add(i1);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzgqdozle.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2yp8j2v.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        Set<Long> commonSet = new HashSet<Long>(set1);\n        commonSet.removeAll(set2);\n\
    \        commonSet.removeAll(set1);\n        common.addAll(commonSet);\n     \
    \   Collections.sort(common);\n        return common;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4di7vxvg.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9k75f2o1.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme2111qa.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            if (it1.next() == it2.next())\
    \ {\n                result.add(it1.next());\n            }\n        }\n     \
    \   return result;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmefpzq4.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            if (l2.contains(i)) {\n            \
    \    common++;\n            }\n        }\n        for (long i : l2) {\n      \
    \      if (l1.contains(i)) {\n                common++;\n            }\n     \
    \   }\n        if (common == 0) {\n            return result;\n        }\n   \
    \     for (long i : l1) {\n            if (l2.contains(i)) {\n               \
    \ result.add(i);\n            }\n        }\n        for (long i : l2) {\n    \
    \        if (l1.contains(i)) {\n                result.add(i);\n            }\n\
    \        }\n        Collections.sort(result);\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ss_kt14.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpekvdw5x5.java:18)\n\
    \tat Problem.main(tmpekvdw5x5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) continue;\n    \
    \        if (result.contains(i1) || result.contains(i2)) continue;\n         \
    \   result.add(i1);\n            result.add(i2);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9hchjw6j.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long>\
    \ map = new HashMap<>();\n        for (Long i : l1) {\n            map.put(i,\
    \ i);\n        }\n        for (Long i : l2) {\n            if (map.containsKey(i))\
    \ {\n                result.add(map.get(i));\n                map.remove(i);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93vt9z71.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        common.addAll(set1);\n        common.addAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n        common.removeAll(set1);\n        common.removeAll(set2);\n\
    \        common.removeAll(set1);\n        common.removeAll(set2);\n        common.removeAll(set1);\n\
    \        common.removeAll(set2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqizdxojg.java:85: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        for (long i : l1) {\n            for (long j :\
    \ l2) {\n                if (i == j) {\n                    common++;\n      \
    \          }\n                if (common > max) {\n                    max = common;\n\
    \                }\n            }\n        }\n        for (long i : l1) {\n  \
    \          for (long j : l2) {\n                if (i == j) {\n              \
    \      common++;\n                }\n                if (common > max) {\n   \
    \                 max = common;\n                }\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) {\n                    common++;\n                }\n         \
    \       if (common > max) {\n                    max = common;\n             \
    \   }\n            }\n        }\n        for (long i : l1) {\n            for\
    \ (long j : l2) {\n                if (i == j) {\n                    common++;\n\
    \                }\n                if (common > max) {\n                    max\
    \ = common;\n                }\n            }\n        }\n        for (long i\
    \ : l1) {\n            for (long j : l2) {\n                if (i == j) {\n  \
    \                  common++;\n                }\n                if (common >\
    \ max) {\n                    max = common;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \                if (common > max) {\n                    max = common;\n    \
    \            }\n            }\n        }\n        for (long i : l1) {\n      \
    \      for (long j : l2) {\n                if (i == j) {\n                  \
    \  common++;\n                }\n                if (common > max) {\n       \
    \             max = common;\n                }\n            }\n        }\n   \
    \     for (long i : l1) {\n            for (long j : l2) {\n                if\
    \ (i == j) {\n                    common++;\n                }\n             \
    \   if (common > max) {\n                    max = common;\n                }\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) {\n                    common++;\n  \
    \              }\n                if (common > max) {\n                    max\
    \ = common;\n                }\n            }\n        }\n        for (long i\
    \ : l1) {\n            for (long j : l2) {\n                if (i == j) {\n  \
    \                  common++;\n                }\n                if (common >\
    \ max) {\n                    max = common;\n                }\n            }\n\
    \        }\n        for (long i : l1) {\n            for (long j : l2) {\n   \
    \             if (i == j) {\n                    common++;\n                }\n\
    \                if (common > max) {\n                    max = common;\n    \
    \            }\n            }\n        }\n        for (long i : l1) {\n      \
    \      for (long j : l2) {\n                if (i == j) {\n                  \
    \  common++;\n                }\n                if (common > max) {\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk_47gq44.java:136: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpszcj22.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xv_otgz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbe7nernr.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a > b) {\n                it1.remove();\n\
    \            } else {\n                it2.remove();\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwevmge8c.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmplv5c54pd.java:18)\n\
    \tat Problem.main(tmplv5c54pd.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> h1 =\
    \ new HashSet<>(l1);\n        HashSet<Long> h2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = h1.iterator();\n        Iterator<Long> it2 = h2.iterator();\n        while\
    \ (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n    \
    \        Long i2 = it2.next();\n            if (i1 == i2) {\n                result.add(i1);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8n4yvk53.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        HashSet<Long>\
    \ h1 = new HashSet<Long>(l1);\n        HashSet<Long> h2 = new HashSet<Long>(l2);\n\
    \        h1.retainAll(h2);\n        common.addAll(h1);\n        return common;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_l36b_4.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n                it1.remove();\n                it2.remove();\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc3801hq3.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    Iterator<Long> it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n\
    \        while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            } else if (a > b) {\n                it1.remove();\n\
    \            } else {\n                it2.remove();\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxof_vgq.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpc6x9tc_2.java:18)\n\
    \tat Problem.main(tmpc6x9tc_2.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        for(Long\
    \ i : set1) {\n            if(set2.contains(i)) {\n                result.add(i);\n\
    \                set1.remove(i);\n                set2.remove(i);\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmp047df058.java:18)\n\
    \tat Problem.main(tmp047df058.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        common.addAll(set1);\n\
    \        common.addAll(set2);\n        Collections.sort(common);\n        return\
    \ common;\n\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu164483t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long count = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81\n    }\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)34l, (long)653l,\
    \ (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l, (long)7l,\
    \ (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)5l, (long)653l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l)))));\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l,\
    \ (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)4l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8ui1kc7c.java:101: error: ';' expected\n        long sum81\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Set<Long>\
    \ common = new HashSet<>();\n        for (Long i : set1) {\n            if (set2.contains(i))\
    \ {\n                common.add(i);\n            }\n        }\n        for (Long\
    \ i : set2) {\n            if (!set1.contains(i)) {\n                common.add(i);\n\
    \            }\n        }\n        for (Long i : common) {\n            result.add(i);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l,\
    \ (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53sowaj1.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set1\
    \ = new HashSet<>(l1);\n        HashSet<Long> set2 = new HashSet<>(l2);\n    \
    \    for(Long val : set1) {\n            if(set2.contains(val)) {\n          \
    \      result.add(val);\n                set1.remove(val);\n                set2.remove(val);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.common(tmpo569xt4o.java:18)\n\
    \tat Problem.main(tmpo569xt4o.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long a = it1.next();\n\
    \            Long b = it2.next();\n            if (a == b) {\n               \
    \ result.add(a);\n            }\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0jc7dpit.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswt9pnko.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set1 = new\
    \ HashSet<>(l1);\n        Set<Long> set2 = new HashSet<>(l2);\n        Iterator<Long>\
    \ it1 = set1.iterator();\n        Iterator<Long> it2 = set2.iterator();\n    \
    \    while (it1.hasNext() && it2.hasNext()) {\n            Long i1 = it1.next();\n\
    \            Long i2 = it2.next();\n            if (i1 == i2) {\n            \
    \    result.add(i1);\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppz2fsdrz.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long common = 0;\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l2)\
    \ {\n            for (long j : l1) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l1) {\n            for (long\
    \ j : l2) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l2) {\n            for (long j : l1) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : l1)\
    \ {\n            for (long j : l2) {\n                if (i == j) common++;\n\
    \            }\n        }\n        for (long i : l2) {\n            for (long\
    \ j : l1) {\n                if (i == j) common++;\n            }\n        }\n\
    \        for (long i : l1) {\n            for (long j : l2) {\n              \
    \  if (i == j) common++;\n            }\n        }\n        for (long i : \n \
    \   }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)3l, (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyjvnf9gi.java:113: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Long> common(ArrayList<Long> l1, ArrayList<Long> l2) {\n  \
    \      ArrayList<Long> common = new ArrayList<Long>();\n        Set<Long> set1\
    \ = new HashSet<Long>(l1);\n        Set<Long> set2 = new HashSet<Long>(l2);\n\
    \        common.addAll(set1);\n        common.addAll(set2);\n        Collections.sort(common);\n\
    \        return common;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l,\
    \ (long)34l, (long)653l, (long)2l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)7l, (long)1l, (long)5l, (long)9l, (long)653l, (long)121l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)653l)))));\n    assert(common((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)8l))), (new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)3l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)2l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l,\
    \ (long)4l)))));\n    assert(common((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)3l, (long)2l, (long)8l))), (new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdbw9wosv.java:25)\n"
  exit_code: 1
  status: Exception

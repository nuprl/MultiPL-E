name: HumanEval_121_solution
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6cwq2ki9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnm7xsr5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphvbsb_p1.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8igcnje2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1fxwmngj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcmfvrhlx.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxn3xopv9.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3e235flo.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafkbzlpz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyik8bga.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp859d4ymz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7oe2qhqp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47wuqall.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80rpcl1m.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpab93mxch.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmrd4rmcp.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp56s7hfxa.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphc1_rvfk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpabfg54my.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_e11y61.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzisaad7s.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcb9ympn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0jynb82r.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwq88_uz5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0exgv5qu.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpniw5tjg7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_yvl_sgk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi5bvj_px.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xycjpd0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw7j5aua7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqh7qi1x.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzpq33ic1.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i%2) == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mni6w0n.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw5zpjuvi.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21w2g460.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrqjpamz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu7nqdxe_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9xodp0y.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmtdbn09k.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpla4g7vuk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplctjvdz9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpysl3nrr6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp31xkdch3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9uid2qq0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpomvigcl9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptt8xv64v.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6tye2p6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqzxrp6u.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf_eijh5e.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6looml2.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2uyvvqtw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppy3rt6hk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_mpqltz8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8g7j64eb.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpduxf8isd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoj3nvlb9.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb86_1vic.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf32emfue.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzzdx1rsr.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfuwkkyab.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsitwxl5x.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsa3xe6j6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_i8denfc.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2byanqh7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ihgejgm.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkoyh_u4t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7wykdny1.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i%2) == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz7mpwhgv.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk4saix32.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl551y96g.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphnt0v9zj.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpji96mbun.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf8okk_8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdjog6ap.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_3h3inxx.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyn_9s4af.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljrba3m5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadhlo6m8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2i8ivi7c.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxz874vx.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmnk7gv0b.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41eoq5t3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmo52lfyv.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5gbjclwb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzietnkat.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsypsvzb.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5y4zixn5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ix331a2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhr13_67.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqy_36zp4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4grxsulm.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp87labb0i.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp908a57ce.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4e8u_pb.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2l7jc3z.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwntobp5q.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf_fuuzdc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp34pgzaef.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2w9diu5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6q6iflp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1a27fik8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4ihnnvu.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphw7uj39j.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i%2) == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0z1ratba.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6etgz_pn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvoywo0fy.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9bne0a45.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzyua55mx.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6695ul45.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5anymov.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2to__m_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx2flyfs.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2hf6k9q.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe0iblx7v.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcwrsxr9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptoi42i3l.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9u8e5q2z.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplf7uvtkc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphab6jrya.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq72jfdu.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6y0eurl_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jw043d6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1vvf8549.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yqml0h4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy3qxful.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xqryv7n.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxatanzmf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5fmx0_i7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvro8n66e.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp027z9cfe.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp__wcj477.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmp_bh8iz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzmi5nc0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7oqky51n.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2a2n_bp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9id8mw6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp85m1d_wl.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgrs3h6_r.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa6sri9dp.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpepfi98v0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01z6i1x2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppqwox_a0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkqdycyto.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3panp0fj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpihrdjgim.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3eyufdei.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfuh68lzf.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8djtwjui.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsxbyshlz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518w000y.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kosioma.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5p8ybzlu.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1w7y1qt4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8di667r.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjvan0yd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmrmf6bsn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv49g2t6l.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuikhkwsp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6x32kd0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3azq_d_x.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7ibj0kj.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxem7mtw.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgpmoa5gw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprauglzx_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaair7ebm.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjv1p7p8c.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3__e8znn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z0dvlvc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3ygcd4x.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptoidwdlw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy5z48x_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzkv93l_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3kd67f2v.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1lrldqlr.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrhln7mq.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sjpxjda.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3hi3e5i7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpruvls2r6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2wdvqjl8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfa_34l0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7oo5c117.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiemoq8sc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj7hqpqkl.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6pd84ol1.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpch6koo8m.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcbjcjobe.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyiiutnl.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9er8yi1h.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9cm8ujj2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf9emo3t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdft1tre7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf1skvbjm.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkkuajgqn.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchdo5hdf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4i_of3t4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_bmr9ng.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjfuz2ix.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgzh78lf5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp204wq67n.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp31bvvfmp.java:27)\n"
  exit_code: 1
  status: Exception

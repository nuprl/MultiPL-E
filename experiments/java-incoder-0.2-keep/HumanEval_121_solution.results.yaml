name: HumanEval_121_solution
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb13lhcii.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0mmwaxz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzyx3f2gf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq528mwxd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldm3cmkq.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpli5xfz3t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1ubrj87.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpif6j6b4r.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnilq6ye_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp373zelqg.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z068sxd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy8v2wxlq.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7336gb_u.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphiy01qil.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9tbard55.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4wl3f7q.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6uputisp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlc4cff5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpac_uraia.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyti8cken.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe8vrzrzc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpifcl64lk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zxjxok8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp03e1nj1a.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprlrau8n3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jhcazmx.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsqmtwegt.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xlkiw66.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8q_fuxbw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprtxbchzn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0aw3f41.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpznz3igxk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i%2) == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmj26dtmc.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptrkx1ga6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpes6ho31u.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_ck6clw.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8uwsf_um.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcmnpinzd.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotgufazc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcwpu6dk5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdrxp4wm_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpixm20d6f.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3knwf42c.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2g5t_bn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cxvipux.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_dwy9xv0.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6_ioc_r.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5d5v4abr.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5e9hkowc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpys28e1ys.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp395g_yuc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2h7mvbp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppc_tludg.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0irimtu.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0vxcmplz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6zmblpf.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyhysq_vi.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvr7uwcol.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfm42farj.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkkjw5k70.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80dwb2z7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt6i57r0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuuyokpur.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5wg360nk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94zp6rgv.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyu27fjol.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdvg72h88.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i%2) == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_ghc3s7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnenr8th_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4y6xisf0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7up7v1x.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbbahips.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wfdiqvh.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20tb97dd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpad8q5vnf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuiii3lli.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdyjx3yg.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvc76le6.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_9r5frp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahlgiad6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8r0rhhi6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4lwpt87.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeokgg7jb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xr1ezlj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp91gq5e7z.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpek0_zk3t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nn5c6ti.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4x9rbunu.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8h46b2r.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv1tb_fw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgvep3uq.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacg7iyia.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdy0361qp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbzauauz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfh96jeqo.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphzinw98a.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeytri4__.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp50087rx_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsu9r388_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp578mvzox.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpojz2d7e1.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdnpc2jlw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpduh8h5l9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i%2) == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4sad8q54.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6x7hgot.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpky4p35s5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajjzkv0v.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzno2stq8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmil3smv5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9r9xy2hd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv73fwxt.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy3efr7l.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp212rzosf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbd6tnp8x.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv5nruh2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bp7ak67.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkk013yxq.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvbv2_v9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcj900iaj.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjs804o_d.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudgv3x64.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf8m7f98f.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ob_6tuw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph0f9o3bl.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptish02op.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphe7ymgbp.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps4nq3z_z.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptc24c7q0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpggyevd11.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9uo848dn.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0ux1xqu.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf3ghr67y.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_msdppc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppvumd_z5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj1ln60ja.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0x7g0vsg.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptce0desb.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj775hq1o.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghqc992u.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiqw1fyp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkokisl1c.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1ycazpo.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzjqmutya.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphbnpfrlx.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5k0pdly.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7135qxko.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2r__85wx.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplknlosu3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9wgkdj7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy69bka3r.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj19g9l55.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphwbfgfu9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj_mb0160.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2inl99a9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzublqv_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahd8tuzz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5eos1gh9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprwzs8nlv.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_7cc66ch.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2jpj7gcd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4n1m86u4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy4j129_l.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprd40ze_i.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8w7g25sn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if((i % 2) == 0) {\n                sum += lst.get(i);\n        \
    \    }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2tsrfsj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpen893pin.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yfisvm8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_d3wv25.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xqbfwo7.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3mcrfbdk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmlqcfmg2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe8j_xzez.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1f_6e0q9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5r0fcrab.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm89ejgeq.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplma214cz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw7qmmsov.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5cs1ad3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4h5itoj.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0agknwuv.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps7pr7d7t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1e2l0vdk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjje9f7vv.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mh1zqie.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_90vr4t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgpuhezx1.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplxoaz8yu.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkau2shq4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0svqjdq.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3vu0xze.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7er2yklw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd4_rscf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbt6m6npb.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpflathp3c.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcz57c1s.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i< lst.size(); i++){\n\
    \            if(lst.get(i) % 2 == 0){\n                sum += lst.get(i);\n  \
    \          }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbm_6_q_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn1p1bie.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw525149n.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsoflwz__.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ solution([5, 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    //\
    \ solution([30, 13, 24, 321]) ==>0\n    public static long solution(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9zs2vxl.java:27)\n"
  exit_code: 1
  status: Exception

name: HumanEval_85_add
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3m9nsowu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpes0jmi3q.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dvlhfpy.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pvkmvjm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpka2l597a.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            sum += lst.get(i);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4v7qihw3.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr30829gq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnz1bmb5j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8xn_yt_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpizw3sbxs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7fnzxdf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctxbywtf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7gyzyyu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1mmxn3p.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptn57pnsq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ggsjsop.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugzmgbbn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8xdvl86.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplq7en8u2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2qews0wx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi1b_iodb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh491pyy.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzh420z3s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7s7n9o13.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpun4w57sk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprrv0mxfa.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrj87lgr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwaomjci.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7441lzwh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc8urpl2s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgawsi2x.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if((i % 2) == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_crl3jy6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmr2wbnen.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3ovi6rs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxry0aynb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsomge_r2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpilye1xjh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxd143_zr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1q0hund.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2mcz4xf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnw6sjq5t.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpub83gzui.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwl6c43pf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpducdchi5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            sum += lst.get(i);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqa1c3uyx.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_n4nf3t.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22tw4rrn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5935g0k.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptcpc973y.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ufr4pmm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpija09a9h.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8l35wsst.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7pgy3ro.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4gb7zxb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0gz2ur0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_tqpnoo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdc74b7jw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjtbf9495.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6nontwf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2oyx56aa.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ejxqmtu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ng7nexd.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1u2n4tq4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41naz1vh.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsctwr9vi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbzivfpj8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwe1wyspz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9j9m0xdj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajr_f6yj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz94cycqp.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp74_qx6y2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyw0poaok.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpba5pjhe1.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5w18ernt.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptv2yqucc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qvh8ucd.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprm65ebx0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzvv_a7j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynvp1sos.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyz4dbor.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8n8sjcmn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4k_hncf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnmbhkovi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if((i%2) == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpch2ojrdg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf21l7ic.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_v02vv5o.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_k44hgo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf_fy61ki.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17ke1arj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9xc7cely.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptg7hfjcj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp65foaqcg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxtq0u3ib.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9d_wesbk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgv7sqcbx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_33dhnzk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7aeli8e2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpqcu2wz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9zv5p8_v.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf5wgrl0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mb5jl_s.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrvdnm1b.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpirsrg_lz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdxv3clou.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppchst_q2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2qkcobs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo23t22fv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3loiv5lj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmposqueg3c.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp930glkny.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptxer1k9i.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp86rss3jw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1zctzqxq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8jr_yol.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnm_2hdqs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9v0j_x0n.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvz5f_5_m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpov3slb4m.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2mvkypn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8k0l8qlf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8ievm8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10wy_q43.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpziyoprpx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpub7wzqrx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy826oog_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfezov2df.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpel2tzsgn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsintkqs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9nca99yi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl_hfs3gq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqjp2v9d.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp70od5cvj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0smo92yu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32ij253x.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbqpvwt0k.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39n6tgoe.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6xk8pixj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprogwcnd4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphstcrc_2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplr8tufrc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoakuivqw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpua2rkgkj.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2d6tezse.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3g25kf0y.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm5in35hf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_am9uy7j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo65lnu7z.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1k9vw17u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_e83y4q.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9an_sj0u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzz3e3nlf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn33rosq9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdyk0wlv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyjy78tl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuclvwl5x.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2nikgj9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvlkw0a8e.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_e8lnch2.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxp6bhk4v.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffa6xm4l.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphbz1rowo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp49iazvwn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_35_cuf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4if_6mhc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_zdfjs2a.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yq1iyn5.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp506wv7_9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0hzvl1r.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2faks29.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5cpu4iea.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8pjlup4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpve5s38i4.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xdd3dvz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpflc89iuk.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpepfossis.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpho_78l_8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_9awuhom.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegquvk4g.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_lj4ors0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpez1yjh4e.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuewloke.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1o8_p3uf.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdinmav.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz84xrvqd.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ckjbi2p.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j9alrix.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppj4cpv3a.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_6tpd84.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgyefmbz.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7c71pvb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds4gmgmr.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfythp0p9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_c4948t_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3j9qbdpw.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkx7_v3f6.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdrr6vt61.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wtgs_7i.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            sum += lst.get(i);\n\
    \        }\n        return sum;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeci0lxml.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8iv0xkp.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // add([4, 2, 6, 7]) ==> 2\n\
    \    public static long add(ArrayList<Long> lst) {\n        long sum = 0;\n  \
    \      for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n \
    \               sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_x3j3pdd.java:23)\n"
  exit_code: 1
  status: Exception

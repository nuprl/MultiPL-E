name: HumanEval_131_digits
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_lwxa14t.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdym837ft.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfck9wkbx.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6cf_x0n7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nxnnwgr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt7lxhgh1.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvagycp_o.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpswbtpjc4.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdxm0s4q.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gq5wys9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpog6z7ewc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgsqzvim1.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnk9brkj.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppkmsj328.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkc9io5pr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcuqas5ri.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0q7sps_q.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsxgg9pn.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10ny9gec.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_6ijcrx.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblyk29d2.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            long digit = n % 10;\n            product *= digit;\n \
    \           n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk8czi0il.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrsq8riv.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            long digit = n % 10;\n            product *= digit;\n \
    \           n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8u3c8en4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx497df4o.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnmg5lnzo.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo52vmvp8.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpptpd78xz.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx1i7w7xh.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            long digit = n % 10;\n            product *= digit;\n \
    \           n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfsqceza.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfnwufawt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpil0ho8ei.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpphjaes5g.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4em3duh0.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp257n52z1.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpne5k6yu9.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl6wcr5aw.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6muefxhv.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpapzepinl.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20pgleoa.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpouzu3yvw.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0ab9c1lv.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwz6yat1t.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0te19g3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt2egh4vt.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjkyptvqv.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3t480rg4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe87kngv3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_gey259.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf6al8jmg.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7x2icjri.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqv00643r.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1jilyoy.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpagnk6og5.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp07smip5q.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ihzcmjz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyjcl70e7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp648dvpdw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5ci6vf4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaaxns9t3.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5tua7bdq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9m0p5fts.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7651flpo.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt_cuwji.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5p7rpx3t.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgstb829w.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 1)\
    \ {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkqzmbdp.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ijspq3k.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqhr9qrk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwytniyd2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_76ojvs.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiphfc26i.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ohm2huc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7o44yua_.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 != 0)\
    \ {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewx840dp.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoxr136pr.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvecudd3n.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeadgsz8b.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2v9maa02.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg59vwk8p.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp31orolej.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprw22zck_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgnd3ngn.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9egmrj3t.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxbx1mf_k.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9a5a19ex.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7f6m4y8.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo4fepxpw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd98ezi07.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_iim3sf.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ubcbf_s.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94lv44e8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzp20z6m.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyeqja6o5.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9up1yre.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wshn7zt.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqty3ojig.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp59px_x1j.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxbt26c8e.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            long digit = n % 10;\n            product *= digit;\n \
    \           n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxc5og9as.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpti1ewx1i.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpryma6lza.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgbka1du.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmn8c04q3.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkmkgatot.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            long digit = n % 10;\n            if (digit % 2 == 1) {\n\
    \                product *= digit;\n            }\n            n /= 10;\n    \
    \    }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpraeq3y66.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpipimeeft.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 1)\
    \ {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpskmps9oz.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 != 0)\
    \ {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd10ephh2.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxg3mkvmu.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzc4otw7k.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzr7ng9nv.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjd02rsm.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64m9_6kk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwksdvfpc.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk75iaa9m.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_huc0ru.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_5oth4vb.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsi8l5ue7.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1dsfpqb3.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmjrhdm5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmdx1owv.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp567tlg8e.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yewp3vk.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf0tzarrp.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpztbu4wc7.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq5ijxsvr.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 != 0)\
    \ {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6kt04xci.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgdqdfky.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwh1u0h1w.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpay1rua8v.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe49vvhb1.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_qc8bm6.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq7ace765.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8nw7g07.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkueicant.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehskasza.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf4vn43p_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3asgm9s.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcm6jv3gm.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptg966iwr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfxwdz29b.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3pwx40_n.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl9awe415.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp867c1ihh.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx7l33km4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6slzwai2.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 != 0)\
    \ {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprojmmepu.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo83sacl8.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_m4scxvu.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp70rm7vtk.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplayxwfj9.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwju1h8sh.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprlnj8z8f.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9_g1k8p.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5873oy1.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dmnvv0o.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn0wint5.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyg5b9vv_.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2ebx26d.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6r9rvbt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_xb18q_8.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpy4t8oz.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplp8el9pc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk_b642e.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponbgjb3k.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpww6c2j6v.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5xqz0a0.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnmmkhson.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkz8p77wy.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaagpjcwq.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprcdm_7es.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjo9uh8ip.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa693rhnp.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaog7xsmp.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1pjt9f34.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpov52xgfc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            long digit = n % 10;\n            product *= digit;\n \
    \           n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjjodj48v.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgf9jlg7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnou56g_7.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            if (digit % 2 == 1)\
    \ {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnnaya_2i.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5nn6d2gn.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmg4nmsq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjcsodjt.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7is4_p_3.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9sx_xa6j.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdqp16sht.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfqjk5tau.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp56v65t4m.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = n % 10;\n                        \
    \  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhklcmcj.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67mvf7x5.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9qghhfu.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpztyspbme.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ago9y74.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_p8_oehy.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n>0) {\n            long digit = n % 10;\n            product *= digit;\n \
    \           n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjkdhg9bh.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7gex4xvf.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfthnwdm.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4s8is0fp.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // digits(1)  == 1\n    // digits(4)  == 0\n    // digits(235) == 15\n  \
    \  public static long digits(long n) {\n        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6nr_371.java:27)\n"
  exit_code: 1
  status: Exception

name: HumanEval_80_is_happy
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        char[] arr = s.toCharArray();\n\
    \        Arrays.sort(arr);\n        boolean flag = true;\n        for (int i =\
    \ 0; i < arr.length - 3; i++) {\n            if (arr[i] == arr[i + 1] && arr[i]\
    \ == arr[i + 2] && arr[i] == arr[i + 3]) {\n                flag = false;\n  \
    \              break;\n            }\n        }\n        return flag;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22e5d692.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        return\
    \ s.length() >= 3 && Arrays.equals(chars, Arrays.copyOfRange(chars, 0, 3));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsd8bseeq.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiq9owj7a.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        int i = 0;\n        while (i < chars.length - 3) {\n\
    \            if (chars[i] != chars[i + 1] || chars[i + 1] != chars[i + 2] || chars[i\
    \ + 2] != chars[i + 3]) {\n                isHappy = false;\n                break;\n\
    \            }\n            i += 3;\n        }\n        return isHappy;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6pnzg5z.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfodbnfze.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xc7mkus.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        for (int i = 0; i < s.length() - 1; i++) {\n\
    \            set.add(s.charAt(i));\n        }\n        for (int i = 0; i < s.length()\
    \ - 2; i++) {\n            if (set.contains(s.charAt(i))) {\n                return\
    \ false;\n            }\n        }\n        return true;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nw4zxr9.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i=0;i<s.length();i++){\n         \
    \   for(int j=i+1;j<s.length();j++){\n                for(int k=j+1;k<s.length();k++){\n\
    \                    if(s.charAt(i)==s.charAt(j)&&s.charAt(j)==s.charAt(k)&&s.charAt(k)!=s.charAt(i)){\n\
    \                        happy = false;\n                        break;\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ happy;\n\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxsea9yu_.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          char c = s.charAt(i);\n            for(int j = i; j < s.length(); j++)\
    \ {\n                char d = s.charAt(j);\n                if(i != j) {\n   \
    \                 if(c != d) {\n                        happy = false;\n     \
    \                   break;\n                    }\n                }\n       \
    \     }\n        }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps0cpxdk6.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = false;\n        if (s.length() >= 3 && s.matches(\"[a-z]+\"\
    )) {\n            Set<String> set = new HashSet<>();\n            for (int i =\
    \ 0; i < s.length() - 1; i++) {\n                set.add(s.charAt(i));\n     \
    \       }\n            for (int i = s.length() - 2; i >= 0; i--) {\n         \
    \       set.add(s.charAt(i));\n            }\n            happy = set.size() >=\
    \ 3;\n        }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkpbcb8gg.java:24: error: no suitable method found for add(char)\n\
    \                set.add(s.charAt(i));\n                   ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n/tmp/tmpkpbcb8gg.java:27: error: no suitable\
    \ method found for add(char)\n                set.add(s.charAt(i));\n        \
    \           ^\n    method Collection.add(String) is not applicable\n      (argument\
    \ mismatch; char cannot be converted to String)\n    method Set.add(String) is\
    \ not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80tqznox.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3) {\n            isHappy = false;\n\
    \        } else {\n            int i = 0;\n            while (i < chars.length\
    \ - 3) {\n                if (chars[i] == chars[i + 1] && chars[i] == chars[i\
    \ + 2] && chars[i] == chars[i + 3]) {\n                    i++;\n            \
    \    } else {\n                    isHappy = false;\n                    break;\n\
    \                }\n            }\n        }\n        return isHappy;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6of43gsd.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i=0; i<s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length()/3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4uwdhbdy.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        } else {\n            Set<String> set = new HashSet<>();\n \
    \           for (int i = 0; i < s.length(); i++) {\n                set.add(s.charAt(i));\n\
    \            }\n            happy = set.size() >= 3;\n        }\n        return\
    \ happy;\n\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5bt7y476.java:26: error: no suitable method found for add(char)\n\
    \                set.add(s.charAt(i));\n                   ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuznv13cr.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length() - 1; i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if\
    \ (!set.contains(s.charAt(i))) return false;\n        }\n        return true;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvxr5djz.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars[0] != chars[1] || chars[1]\
    \ != chars[2] || chars[2] != chars[3]) {\n            isHappy = false;\n     \
    \   }\n        return isHappy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivzgy402.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7uv5n4dy.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudqy3ia2.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3 && set.size() == set.stream().distinct().count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9d41q7u.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean isHappy\
    \ = true;\n        for (int i = 0; i < chars.length - 2; i++) {\n            if\
    \ (chars[i] != chars[i + 1]) {\n                isHappy = false;\n           \
    \     break;\n            }\n        }\n        return isHappy;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwb9m_vad.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkz21dtvu.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppksft4_6.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp6ucfo1n.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() % 3 == 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglasmsqq.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        int n = arr.length;\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < n-3; i++) {\n            if(arr[i] == arr[i+1] &&\
    \ arr[i] == arr[i+2] && arr[i] != arr[i+3]) {\n                return false;\n\
    \            }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ycij30n.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_w2_7ry.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxbr3b_c0.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhx7hrpw.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ flag = false;\n        if (arr.length >= 3 && arr[0] == arr[1] && arr[1] ==\
    \ arr[2] && arr[0] != arr[1] && arr[0] != arr[2] && arr[0] != arr[3]) {\n    \
    \        flag = true;\n        }\n        return flag;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1ba_9lw.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgclejiu.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean isHappy = true;\n        if (s.length() < 3) {\n            isHappy\
    \ = false;\n        }\n        else {\n            char[] chars = s.toCharArray();\n\
    \            Arrays.sort(chars);\n            int i = 0;\n            while (i\
    \ < chars.length - 3) {\n                if (chars[i] == chars[i + 1] && chars[i]\
    \ == chars[i + 2] && chars[i] == chars[i + 3]) {\n                    i++;\n \
    \               }\n                else {\n                    isHappy = false;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return isHappy;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gnnft92.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        for (int i = 0; i < s.length() - 1; i++) {\n\
    \            set.add(s.charAt(i));\n        }\n        for (int i = 0; i < s.length()\
    \ - 1; i++) {\n            if (set.contains(s.charAt(i))) {\n                return\
    \ false;\n            }\n        }\n        return true;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpez_2st5z.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kdyuojk.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        for (int i = 0; i < chars.length - 2; i++) {\n    \
    \        if (chars[i] != chars[i + 1]) {\n                isHappy = false;\n \
    \               break;\n            }\n        }\n        return isHappy;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67nh_g6k.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    if (s.charAt(i) != s.charAt(i + 1)) {\n                happy = false;\n \
    \           }\n        }\n        return happy;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.lang.String.charAt(String.java:658)\n\
    \tat Problem.isHappy(tmp9l6orosu.java:25)\n\tat Problem.main(tmp9l6orosu.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length() / 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb33k7ia.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        char[] chars = s.toCharArray();\n\
    \        Arrays.sort(chars);\n        boolean flag = true;\n        for (int i\
    \ = 0; i < chars.length - 3; i++) {\n            if (chars[i] != chars[i + 1]\
    \ || chars[i + 1] != chars[i + 2] || chars[i + 2] != chars[i + 3]) {\n       \
    \         flag = false;\n                break;\n            }\n        }\n  \
    \      return flag;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx444doid.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        Set<Character> set = new HashSet<>();\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n    \
    \    }\n        if (set.size() != s.length()) {\n            happy = false;\n\
    \        }\n        for (int i = 0; i < s.length() - 3; i++) {\n            if\
    \ (set.contains(s.charAt(i))) {\n                happy = false;\n            }\n\
    \        }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsd7_m23.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          for(int j = 0; j < s.length(); j++) {\n                if(i != j) {\n\
    \                    if(s.charAt(i) == s.charAt(j)) {\n                      \
    \  happy = false;\n                        break;\n                    }\n   \
    \             }\n            }\n        }\n        return happy;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme8efzf3.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42sfakkt.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean flag\
    \ = true;\n        for (int i = 0; i < chars.length - 2; i++) {\n            if\
    \ (chars[i] != chars[i + 1]) {\n                flag = false;\n              \
    \  break;\n            }\n        }\n        return flag;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp6gq_32g.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        return\
    \ s.length() >= 3 && Arrays.equals(chars, Arrays.copyOfRange(chars, 0, 3));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp27an304p.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n   \
    \         set.add(s.charAt(i));\n        }\n        return set.size() >= 3;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbztz3mlf.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx04uvusn.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length() - 1; i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        for (int i = 0; i < s.length() - 2; i++) {\n            if\
    \ (!set.contains(s.charAt(i))) return false;\n        }\n        return true;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzk35b53.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean isHappy = false;\n        if (s.length() >= 3 && s.matches(\".*[abc]+.*\"\
    )) {\n            isHappy = true;\n        }\n        return isHappy;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fl9h9ok.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() % 3 == 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt0mfzb4y.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fng41uw.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmt9nmx2.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n    \
    \        set.add(s.charAt(i));\n        }\n        return set.size() >= 3;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6yl20o7.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2rv2tqw2.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<String> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa237jpw8.java:23: error: no suitable method found for add(char)\n\
    \            set.add(s.charAt(i));\n               ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6dzq72a.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpduot3jk6.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rxg3teg.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy2tpp9j_.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp427jt27p.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          char c = s.charAt(i);\n            for(int j = i; j < s.length(); j++)\
    \ {\n                if(s.charAt(j) != c) {\n                    happy = false;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return happy;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk06234ya.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length() - 2; i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() == 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwir1oko5.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptcjgwr3_.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        for (int i = 0; i < chars.length - 3; i++) {\n    \
    \        if (chars[i] != chars[i + 1] && chars[i] != chars[i + 2] && chars[i]\
    \ != chars[i + 3]) {\n                isHappy = false;\n                break;\n\
    \            }\n        }\n        return isHappy;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa6uipsll.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxvtveg0c.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          if(!s.substring(i, i+3).equals(s.substring(i, i+4))) {\n          \
    \      happy = false;\n                break;\n            }\n        }\n    \
    \    return happy;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 3\n\tat java.lang.String.substring(String.java:1963)\n\
    \tat Problem.isHappy(tmpmlvn916l.java:22)\n\tat Problem.main(tmpmlvn916l.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        Set<Character> set = new HashSet<>();\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n    \
    \    }\n        if (set.size() != 3) {\n            happy = false;\n        }\n\
    \        for (int i = 0; i < s.length() - 2; i++) {\n            if (set.contains(s.charAt(i)\
    \ + s.charAt(i + 1) + s.charAt(i + 2))) {\n                happy = false;\n  \
    \          }\n        }\n        return happy;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspcfehh8.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length() - 1; i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() == s.length();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmp3ts2ha.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        boolean isHappy = true;\n        for (int i\
    \ = 0; i < s.length() - 1; i++) {\n            char c = s.charAt(i);\n       \
    \     char d = s.charAt(i + 1);\n            if (!set.contains(c)) {\n       \
    \         isHappy = false;\n                break;\n            }\n          \
    \  if (!set.contains(d)) {\n                isHappy = false;\n               \
    \ break;\n            }\n            set.add(c);\n            set.add(d);\n  \
    \      }\n        return isHappy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptolwb4pr.java:45)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        else {\n            char[] chars = s.toCharArray();\n\
    \            Arrays.sort(chars);\n            int i = 0;\n            int j =\
    \ 0;\n            while (i < chars.length && j < chars.length) {\n           \
    \     if (chars[i] == chars[j]) {\n                    i++;\n                \
    \    j++;\n                }\n                else {\n                    happy\
    \ = false;\n                    break;\n                }\n            }\n   \
    \     }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx7ko0rmk.java:47)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdan74thc.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1veacb96.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        else {\n            Set<Character> set = new HashSet<>();\n\
    \            for (int i = 0; i < s.length(); i++) {\n                set.add(s.charAt(i));\n\
    \            }\n            if (set.size() != s.length()) {\n                happy\
    \ = false;\n            }\n            else {\n                for (int i = 0;\
    \ i < s.length() - 2; i++) {\n                    if (set.contains(s.charAt(i))\
    \ && set.contains(s.charAt(i + 1)) && set.contains(s.charAt(i + 2))) {\n     \
    \                   happy = false;\n                    }\n                }\n\
    \            }\n        }\n        return happy;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpedu07k1x.java:46)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ flag = false;\n        if (arr.length >= 3 && arr[0] == arr[1] && arr[1] ==\
    \ arr[2] && arr[0] != arr[1] && arr[0] != arr[2] && arr[0] != arr[3]) {\n    \
    \        flag = true;\n        }\n        return flag;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6kyf_gpo.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ result = true;\n        for (int i = 0; i < chars.length - 2; i++) {\n     \
    \       if (chars[i] != chars[i + 1]) {\n                result = false;\n   \
    \             break;\n            }\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"))\
    \ == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd83gkw7b.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3c5c2fmz.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        for (int i = 0; i < s.length() - 3; i++) {\n    \
    \        char c = s.charAt(i);\n            char d = s.charAt(i + 1);\n      \
    \      char e = s.charAt(i + 2);\n            char f = s.charAt(i + 3);\n    \
    \        if (c == d && d == e && e == f) {\n                happy = false;\n \
    \           }\n        }\n        return happy;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtraq_q8.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars[0] != chars[1] || chars[1]\
    \ != chars[2] || chars[2] != chars[3]) {\n            isHappy = false;\n     \
    \   }\n        return isHappy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjr1z8s58.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprugc0lof.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          for(int j = 0; j < s.length(); j++) {\n                if(i != j) {\n\
    \                    if(s.charAt(i) != s.charAt(j)) {\n                      \
    \  happy = false;\n                        break;\n                    }\n   \
    \             }\n            }\n        }\n        return happy;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg5o00veu.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        return\
    \ arr.length >= 3 && Arrays.equals(arr, Arrays.copyOfRange(arr, 0, arr.length-1));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lslllnb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        char[] arr = s.toCharArray();\n        for (int\
    \ i = 0; i < arr.length; i++) {\n            set.add(arr[i]);\n        }\n   \
    \     return set.size() >= 3;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) ==\
    \ (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mvc3tfy.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        return\
    \ s.length() >= 3 && Arrays.equals(chars, Arrays.copyOfRange(chars, 0, 3));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jj0ji78.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() % 3 == 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1dq8n29.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpum65yx0_.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnim1rdff.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0k7oynw.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          char c = s.charAt(i);\n            for(int j = 0; j < i; j++) {\n \
    \               if(s.charAt(j) == c) {\n                    happy = false;\n \
    \                   break;\n                }\n            }\n        }\n    \
    \    return happy;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwb_6nw9q.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeidf2fm1.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcqu14zzm.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp15s4vu2k.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ flag = false;\n        for(int i = 0; i < arr.length-3; i++) {\n           \
    \ if(arr[i] == arr[i+1] && arr[i] == arr[i+2] && arr[i] == arr[i+3]) {\n     \
    \           flag = true;\n                break;\n            }\n        }\n \
    \       return flag;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3q33kmn0.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        for (int i = 0; i < s.length() - 1; i++) {\n    \
    \        if (s.charAt(i) != s.charAt(i + 1)) {\n                happy = false;\n\
    \                break;\n            }\n        }\n        return happy;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptvk7ylh6.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3goul5wf.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        int len = arr.length;\n        int\
    \ count = 0;\n        for(int i = 0; i < len; i++){\n            for(int j = i+1;\
    \ j < len; j++){\n                for(int k = j+1; k < len; k++){\n          \
    \          if(arr[i] == arr[j] && arr[i] == arr[k]){\n                       \
    \ count++;\n                    }\n                }\n            }\n        }\n\
    \        return len >= 3 && count % 3 == 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4zxqokhc.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        char[] arr = s.toCharArray();\n        for (int\
    \ i = 0; i < arr.length; i++) {\n            set.add(arr[i]);\n        }\n   \
    \     return set.size() >= 3 && set.size() == arr.length;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpltbuvwt_.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpew7s6r9r.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        int len = arr.length;\n        if\
    \ (len < 3 || len % 3 != 0)\n            return false;\n        Set<Character>\
    \ set = new HashSet<>();\n        for (int i = 0; i < len; i++) {\n          \
    \  set.add(arr[i]);\n        }\n        return set.size() == len;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqh2z4a16.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        return\
    \ s.length() >= 3 && Arrays.equals(chars, Arrays.copyOfRange(chars, 1, chars.length));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_qfxdq1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjanff3n.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ happy = true;\n        for (int i = 0; i < chars.length - 3; i++) {\n      \
    \      if (chars[i] != chars[i + 1] || chars[i + 1] != chars[i + 2] || chars[i\
    \ + 2] != chars[i + 3]) {\n                happy = false;\n                break;\n\
    \            }\n        }\n        return happy;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3s3whb3k.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length() / 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcj9tte1n.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i=0; i<s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4wg6rnb9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmipa25x.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars[0] == chars[1] || chars[1]\
    \ == chars[2] || chars[2] == chars[3]) {\n            isHappy = false;\n     \
    \   }\n        return isHappy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ 3\n\tat Problem.isHappy(tmpoq25zpvg.java:23)\n\tat Problem.main(tmpoq25zpvg.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ flag = false;\n        for(int i = 0; i < arr.length-3; i++) {\n           \
    \ if(arr[i] == arr[i+1] && arr[i] == arr[i+2] && arr[i] == arr[i+3]) {\n     \
    \           flag = true;\n            }\n        }\n        return flag;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfbwtxn1.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6rnm2c3m.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6x5imfs.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          char c = s.charAt(i);\n            for(int j = i + 1; j < s.length();\
    \ j++) {\n                if(s.charAt(i) == s.charAt(j)) {\n                 \
    \   happy = false;\n                    break;\n                }\n          \
    \  }\n        }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd27mr9ry.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyjdw86xe.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        for(int i = 0; i < chars.length - 2; i++) {\n     \
    \       if(chars[i] != chars[i + 1]) {\n                isHappy = false;\n   \
    \             break;\n            }\n        }\n        return isHappy;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yyxs28a.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<String> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnzsbyenz.java:23: error: no suitable method found for add(char)\n\
    \            set.add(s.charAt(i));\n               ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3e_mhen2.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<String> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5xq_cfjg.java:22: error: no suitable method found for add(char)\n\
    \            set.add(s.charAt(i));\n               ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4ggx0lx.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        int\
    \ count = 0;\n        for (int i = 0; i < chars.length - 2; i++) {\n         \
    \   if (chars[i] != chars[i + 1]) {\n                count++;\n            }\n\
    \        }\n        return count >= 3 && count == chars.length - 3;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpya5gqfxf.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        int\
    \ n = chars.length;\n        if (n < 3) return false;\n        for (int i = 0;\
    \ i < n - 3; i++) {\n            if (chars[i] == chars[i + 1] && chars[i] == chars[i\
    \ + 2]) return false;\n        }\n        return true;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvxdmfegf.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n    \
    \        set.add(s.charAt(i));\n        }\n        return set.size() >= 3;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr1_cgf4l.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ isHappy = true;\n        for (int i = 0; i < arr.length-3; i++) {\n        \
    \    if (arr[i] == arr[i+1] && arr[i+1] == arr[i+2] && arr[i+2] == arr[i+3]) {\n\
    \                isHappy = false;\n            }\n        }\n        return isHappy;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjemcv2vi.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptw3t29f8.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58u7qd2v.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<String> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1w81d_es.java:23: error: no suitable method found for add(char)\n\
    \            set.add(s.charAt(i));\n               ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvf2qlllu.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi1m3b2va.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        for (int i = 0; i < s.length(); i++) {\n   \
    \         set.add(s.charAt(i));\n        }\n        return set.size() == 3 &&\
    \ set.size() == set.size();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) ==\
    \ (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsck_df4r.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars.length % 3 != 0) {\n\
    \            isHappy = false;\n        }\n        for (int i = 0; i < chars.length\
    \ - 2; i++) {\n            if (chars[i] == chars[i + 1] && chars[i + 1] == chars[i\
    \ + 2]) {\n                isHappy = false;\n                break;\n        \
    \    }\n        }\n        return isHappy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhsle4d1.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        int len = arr.length;\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < len-3; i++) {\n            if(arr[i] == arr[i+1] &&\
    \ arr[i] == arr[i+2] && arr[i] != arr[i+3]) {\n                return false;\n\
    \            }\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pnjl7kx.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp958glfo2.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        int n = arr.length;\n        Arrays.sort(arr);\n\
    \        return (n>=3 && Arrays.equals(arr,Arrays.copyOfRange(arr,0,n-3)));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9wkeej1.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        for (int i = 0; i < chars.length - 3; i++) {\n            if (chars[i]\
    \ != chars[i + 1] || chars[i + 1] != chars[i + 2] || chars[i + 2] != chars[i +\
    \ 3]) {\n                happy = false;\n                break;\n            }\n\
    \        }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsp8587uk.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_w86nvpn.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjmy3ozhm.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3 && set.size() == set.stream().distinct().count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9lhq1w37.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23uku2g4.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprkyzkj71.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptszruf74.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsp0bzbb4.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length() / 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpayyqlvy0.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f6xzdqm.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3 && set.size() == set.stream().distinct().count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplxvzic9b.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        char[] chars = s.toCharArray();\n\
    \        Arrays.sort(chars);\n        boolean distinct = true;\n        for (int\
    \ i = 0; i < chars.length - 2; i++) {\n            if (chars[i] != chars[i + 1])\
    \ return false;\n        }\n        return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgbiozkp.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        int i = 0;\n        while (i < chars.length - 3) {\n\
    \            if (chars[i] != chars[i + 1] || chars[i + 1] != chars[i + 2] || chars[i\
    \ + 2] != chars[i + 3]) {\n                isHappy = false;\n                break;\n\
    \            }\n            i += 3;\n        }\n        return isHappy;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4kb6abp4.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          for(int j = i + 1; j < s.length(); j++) {\n                for(int\
    \ k = j + 1; k < s.length(); k++) {\n                    if(s.charAt(i) == s.charAt(j)\
    \ && s.charAt(i) == s.charAt(k)) {\n                        happy = false;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ happy;\n\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp76r0_q_b.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0zlszix.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        for(int\
    \ i = 0; i < arr.length-3; i++) {\n            if(arr[i] == arr[i+1] && arr[i+1]\
    \ == arr[i+2] && arr[i+2] == arr[i+3]) {\n                return false;\n    \
    \        }\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxe0ess5t.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_vi8876.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyafk6p8.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ isHappy = true;\n        for(int i = 0; i < arr.length-3; i++) {\n         \
    \   if(!isDistinct(arr[i], arr[i+1], arr[i+2])) {\n                isHappy = false;\n\
    \                break;\n            }\n        }\n        return isHappy;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp84djsthc.java:24: error: cannot find symbol\n            if(!isDistinct(arr[i],\
    \ arr[i+1], arr[i+2])) {\n                ^\n  symbol:   method isDistinct(char,char,char)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        for(int i = 0; i < s.length(); i++) {\n    \
    \        set.add(s.charAt(i));\n        }\n        return set.size() >= 3 && set.size()\
    \ == set.stream().distinct().count();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy14cp8m.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = false;\n        if (s.length() >= 3) {\n            Set<Character>\
    \ set = new HashSet<>();\n            for (int i = 0; i < s.length() - 1; i++)\
    \ {\n                set.add(s.charAt(i));\n            }\n            for (int\
    \ i = 0; i < s.length() - 1; i++) {\n                if (!set.contains(s.charAt(i)))\
    \ {\n                    happy = false;\n                    break;\n        \
    \        }\n            }\n        }\n        return happy;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n\
    \    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"abcd\")) ==\
    \ (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl5_qf8si.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_z24r56p.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        int\
    \ count = 0;\n        for (int i = 0; i < chars.length - 2; i++) {\n         \
    \   if (chars[i] == chars[i + 1] && chars[i + 1] == chars[i + 2]) {\n        \
    \        count++;\n            }\n        }\n        return count >= 3 && count\
    \ == chars.length / 3;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbq8of3ve.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean distinct\
    \ = true;\n        for (int i = 0; i < chars.length - 3; i++) {\n            if\
    \ (chars[i] == chars[i + 1] && chars[i] == chars[i + 2] && chars[i] == chars[i\
    \ + 3]) {\n                distinct = false;\n            }\n        }\n     \
    \   return distinct;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6atisb6.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_prv4bk.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ happy = true;\n        for (int i = 0; i < chars.length - 3; i++) {\n      \
    \      if (chars[i] != chars[i + 1] || chars[i + 1] != chars[i + 2] || chars[i\
    \ + 2] != chars[i + 3]) {\n                happy = false;\n                break;\n\
    \            }\n        }\n        return happy;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_9993o1p.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() == s.length();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5w2w3cnt.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphvct7huu.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<String> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && !set.contains(s.charAt(0)) && !set.contains(s.charAt(1)) && !set.contains(s.charAt(2))\
    \ && !set.contains(s.charAt(3));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp0vzqpn2.java:22: error: no suitable method found for add(char)\n\
    \            set.add(s.charAt(i));\n               ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        char[] chars = s.toCharArray();\n\
    \        Arrays.sort(chars);\n        boolean flag = true;\n        for (int i\
    \ = 0; i < chars.length - 2; i++) {\n            if (chars[i] != chars[i + 1])\
    \ return false;\n        }\n        return flag;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpud_w983f.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        int\
    \ n = chars.length;\n        if (n < 3) return false;\n        for (int i = 0;\
    \ i < n - 3; i++) {\n            if (chars[i] == chars[i + 1] && chars[i] == chars[i\
    \ + 2]) return false;\n        }\n        return true;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdptn58u.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptbcm_47a.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb9hcwyt.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaum3zz68.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrp2q77x.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        for (int i = 0; i < s.length() - 2; i++) {\n    \
    \        if (s.charAt(i) != s.charAt(i + 1) && s.charAt(i) != s.charAt(i + 2))\
    \ {\n                happy = false;\n            }\n        }\n        return\
    \ happy;\n\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi1wvg945.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars[0] == chars[1] || chars[0]\
    \ == chars[2] || chars[1] == chars[2] || chars[0] == chars[1] && chars[1] == chars[2]\
    \ || chars[0] == chars[1] && chars[2] == chars[2] || chars[2] == chars[1] && chars[1]\
    \ == chars[2]) {\n            isHappy = false;\n        }\n        return isHappy;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdxsa2ll.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu_8tduc0.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars.length % 3 != 0) {\n\
    \            isHappy = false;\n        }\n        for (int i = 0; i < chars.length\
    \ - 3; i++) {\n            if (chars[i] != chars[i + 1] || chars[i + 1] != chars[i\
    \ + 2] || chars[i + 2] != chars[i + 3]) {\n                isHappy = false;\n\
    \            }\n        }\n        return isHappy;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_kh7oil.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        if (s.length() < 3) {\n            happy =\
    \ false;\n        }\n        else {\n            char[] chars = s.toCharArray();\n\
    \            for (int i = 0; i < chars.length - 2; i++) {\n                if\
    \ (chars[i] != chars[i + 1]) {\n                    happy = false;\n         \
    \           break;\n                }\n            }\n        }\n        return\
    \ happy;\n\n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakvih7ud.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0jowcvkp.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxo7a0hos.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<String> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.substring(i,\
    \ i + 1));\n        }\n        return set.size() == 3;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc0r2yqjh.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() % 3 == 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp7opqw2.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length() - 2; i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() == s.length();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1m4uyu4w.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ result = true;\n        if (chars.length < 3 || chars[0] == chars[1] || chars[1]\
    \ == chars[2] || chars[2] == chars[3]) {\n            result = false;\n      \
    \  }\n        for (int i = 3; i < chars.length; i += 3) {\n            if (chars[i]\
    \ == chars[i + 1] || chars[i] == chars[i + 2] || chars[i] == chars[i + 3]) {\n\
    \                result = false;\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ 4\n\tat Problem.isHappy(tmpvig4dwx9.java:27)\n\tat Problem.main(tmpvig4dwx9.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpucdjl81c.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars[0] == chars[1] || chars[0]\
    \ == chars[2] || chars[1] == chars[2] || chars[0] == chars[1] || chars[1] == chars[2]\
    \ || chars[2] == chars[3]) {\n            isHappy = false;\n        }\n      \
    \  return isHappy;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ 3\n\tat Problem.isHappy(tmp1ijso_0h.java:23)\n\tat Problem.main(tmp1ijso_0h.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqcgfggtg.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3 && set.size() == s.length() % 3;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9eu29xgl.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ happy = true;\n        for (int i = 0; i < chars.length - 3; i++) {\n      \
    \      if (chars[i] == chars[i + 1] && chars[i] == chars[i + 2] && chars[i] ==\
    \ chars[i + 3]) {\n                happy = false;\n            }\n        }\n\
    \        return happy;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ncwl_cw.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnsryoht9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = false;\n        if (s.length() >= 3 && s.matches(\"^[a-z]+$\"\
    )) {\n            Set<Character> set = new HashSet<>();\n            for (int\
    \ i = 0; i < s.length() - 1; i++) {\n                set.add(s.charAt(i));\n \
    \           }\n            for (int i = 0; i < s.length() - 2; i++) {\n      \
    \          if (!set.contains(s.charAt(i))) {\n                    happy = false;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return happy;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n\
    \    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"aabb\")) ==\
    \ (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp51w_0njc.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == 3;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) ==\
    \ (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxfdfe1c.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        if (chars.length < 3 || chars[0] == chars[1] || chars[1]\
    \ == chars[2] || chars[2] == chars[3]) {\n            isHappy = false;\n     \
    \   }\n        return isHappy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ 3\n\tat Problem.isHappy(tmpzfir7x5f.java:23)\n\tat Problem.main(tmpzfir7x5f.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3 && set.size() == set.stream().distinct().count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6lie5he.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnjo9qob5.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        for (int i = 0; i < chars.length - 3; i++) {\n    \
    \        if (chars[i] == chars[i + 1] && chars[i] == chars[i + 2] && chars[i]\
    \ == chars[i + 3]) {\n                isHappy = false;\n                break;\n\
    \            }\n        }\n        return isHappy;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"\
    aa\")) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljdyhqse.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1q5ltb9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        for (int i = 0; i < chars.length - 2; i++) {\n    \
    \        if (chars[i] != chars[i + 1]) {\n                isHappy = false;\n \
    \               break;\n            }\n        }\n        return isHappy;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph18xl76v.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp432mlfpf.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        boolean\
    \ isHappy = true;\n        for (int i = 0; i < chars.length - 2; i++) {\n    \
    \        if (chars[i] != chars[i + 1]) {\n                isHappy = false;\n \
    \               break;\n            }\n        }\n        return isHappy;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(isHappy((\"a\"\
    )) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnf56nl_r.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ isHappy = true;\n        int count = 0;\n        for (int i = 0; i < arr.length;\
    \ i++) {\n            if (arr[i] != arr[i + 1]) {\n                isHappy = false;\n\
    \                break;\n            }\n            count++;\n            if (count\
    \ == 3) {\n                isHappy = false;\n                break;\n        \
    \    }\n        }\n        return isHappy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ 1\n\tat Problem.isHappy(tmplamwrhzr.java:25)\n\tat Problem.main(tmplamwrhzr.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = false;\n        if (s.length() >= 3) {\n            Set<Character>\
    \ set = new HashSet<>();\n            for (int i = 0; i < s.length(); i++) {\n\
    \                set.add(s.charAt(i));\n            }\n            happy = set.size()\
    \ >= 3;\n        }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp6_n7_iz.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<String> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa9muoomr.java:23: error: no suitable method found for add(char)\n\
    \            set.add(s.charAt(i));\n               ^\n    method Collection.add(String)\
    \ is not applicable\n      (argument mismatch; char cannot be converted to String)\n\
    \    method Set.add(String) is not applicable\n      (argument mismatch; char\
    \ cannot be converted to String)\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ph6wpy9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3 && set.size() == set.stream().distinct().count();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isHappy((\"\
    a\")) == (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7zoe823q.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    return s.length() >= 3 && s.chars().distinct().count() % 3 == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isHappy((\"a\")) ==\
    \ (false));\n    assert(isHappy((\"aa\")) == (false));\n    assert(isHappy((\"\
    abcd\")) == (true));\n    assert(isHappy((\"aabb\")) == (false));\n    assert(isHappy((\"\
    adb\")) == (true));\n    assert(isHappy((\"xyy\")) == (false));\n    assert(isHappy((\"\
    iopaxpoi\")) == (true));\n    assert(isHappy((\"iopaxioi\")) == (false));\n  \
    \  }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa5ch_7iy.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length() / 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mm4l5yo.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) return false;\n        Set<Character> set = new HashSet<>();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            set.add(s.charAt(i));\n\
    \        }\n        return set.size() >= 3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvcx7o_xp.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    if (s.length() < 3) {\n            return false;\n        }\n        Set<Character>\
    \ set = new HashSet<>();\n        char[] arr = s.toCharArray();\n        for (int\
    \ i = 0; i < arr.length; i++) {\n            set.add(arr[i]);\n        }\n   \
    \     return set.size() >= 3;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\")) ==\
    \ (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpuge78w.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    boolean happy = true;\n        for(int i = 0; i < s.length(); i++) {\n  \
    \          for(int j = i + 1; j < s.length(); j++) {\n                for(int\
    \ k = j + 1; k < s.length(); k++) {\n                    if(s.charAt(i) == s.charAt(j)\
    \ && s.charAt(i) == s.charAt(k) && s.charAt(j) == s.charAt(k)) {\n           \
    \             happy = false;\n                    }\n                }\n     \
    \       }\n        }\n        return happy;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjq1d172.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // Your task is to check\
    \ if the string is happy or not.\n    // A string is happy if its length is at\
    \ least 3 and every 3 consecutive letters are distinct\n    // For example:\n\
    \    // is_happy(a) => False\n    // is_happy(aa) => False\n    // is_happy(abcd)\
    \ => True\n    // is_happy(aabb) => False\n    // is_happy(adb) => True\n    //\
    \ is_happy(xyy) => False\n    public static boolean isHappy(String s) {\n    \
    \    Set<Character> set = new HashSet<>();\n        for(int i=0; i<s.length();\
    \ i++) {\n            set.add(s.charAt(i));\n        }\n        return s.length()\
    \ >= 3 && set.size() == s.length()/3;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isHappy((\"a\")) == (false));\n    assert(isHappy((\"aa\"\
    )) == (false));\n    assert(isHappy((\"abcd\")) == (true));\n    assert(isHappy((\"\
    aabb\")) == (false));\n    assert(isHappy((\"adb\")) == (true));\n    assert(isHappy((\"\
    xyy\")) == (false));\n    assert(isHappy((\"iopaxpoi\")) == (true));\n    assert(isHappy((\"\
    iopaxioi\")) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvs9d5252.java:30)\n"
  exit_code: 1
  status: Exception

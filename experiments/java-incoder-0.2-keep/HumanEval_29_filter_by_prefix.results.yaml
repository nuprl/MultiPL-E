name: HumanEval_29_filter_by_prefix
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s : strings) {\n            if(s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String string : strings) {\n            if(string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if(s.startsWith(prefix)) {\n    \
    \            result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s: strings) {\n            if(s.startsWith(prefix)) {\n    \
    \            result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n            .filter(s ->\
    \ s.startsWith(prefix))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s : strings) {\n            if(s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s : strings) {\n            if(s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s : strings) {\n            if(s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream()\n                .filter(s\
    \ -> s.startsWith(prefix))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String string : strings) {\n            if(string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for(String s : strings) {\n            if(s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\"\
    , (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_125_split_words
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\"\\\\s+\");\n        for (String word : words) {\n      \
    \      Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            wordSplit.add(word);\n            result.add(wordSplit);\n      \
    \  }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptj2l3o_a.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmptj2l3o_a.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptj2l3o_a.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptj2l3o_a.java:21: error: cannot find symbol\n\
    \            Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptj2l3o_a.java:21: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n                          \
    \                               ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptj2l3o_a.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptj2l3o_a.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptj2l3o_a.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptj2l3o_a.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmptj2l3o_a.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmptj2l3o_a.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmptj2l3o_a.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmptj2l3o_a.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            if (splitWord != null) {\n       \
    \         result.add(splitWord);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqsvw89c5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqsvw89c5.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpqsvw89c5.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpqsvw89c5.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpqsvw89c5.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmpqsvw89c5.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqsvw89c5.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqsvw89c5.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqsvw89c5.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpqsvw89c5.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqsvw89c5.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqsvw89c5.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqsvw89c5.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo_s3rqwu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpo_s3rqwu.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpo_s3rqwu.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpo_s3rqwu.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpo_s3rqwu.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo_s3rqwu.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo_s3rqwu.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpo_s3rqwu.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpo_s3rqwu.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpo_s3rqwu.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpo_s3rqwu.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpo_s3rqwu.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps9z1_3nf.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmps9z1_3nf.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps9z1_3nf.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps9z1_3nf.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps9z1_3nf.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps9z1_3nf.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps9z1_3nf.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmps9z1_3nf.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps9z1_3nf.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps9z1_3nf.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps9z1_3nf.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.toUpperCase();\n                wordSplit.trim();\n \
    \               wordSplit.trim();\n                wordSplit.trim();\n       \
    \         wordSplit.trim();\n                wordSplit.trim();\n             \
    \   wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu3swb9zw.java:97: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1jl7eazm.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\,\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl351o35e.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpl351o35e.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl351o35e.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpl351o35e.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpl351o35e.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl351o35e.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl351o35e.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpl351o35e.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpl351o35e.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpl351o35e.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpl351o35e.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpl351o35e.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            result.add(word);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpejjuf6fa.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpejjuf6fa.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpejjuf6fa.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpejjuf6fa.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpejjuf6fa.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpejjuf6fa.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpejjuf6fa.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpejjuf6fa.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpejjuf6fa.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpejjuf6fa.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpejjuf6fa.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            result.add(splitWord);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp6epyysm.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpp6epyysm.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpp6epyysm.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpp6epyysm.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpp6epyysm.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmpp6epyysm.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp6epyysm.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp6epyysm.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp6epyysm.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpp6epyysm.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp6epyysm.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp6epyysm.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp6epyysm.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            ret.union(new Union_ArrayList_String__long(word));\n\
    \        }\n        return ret;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvybypfx.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmphvybypfx.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmphvybypfx.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmphvybypfx.java:21: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmphvybypfx.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmphvybypfx.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmphvybypfx.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmphvybypfx.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmphvybypfx.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmphvybypfx.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmphvybypfx.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmphvybypfx.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ newWord = new Union_ArrayList_String__long();\n            newWord.add(word);\n\
    \            result.add(newWord);\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5teni5cm.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5teni5cm.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5teni5cm.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5teni5cm.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long newWord = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5teni5cm.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ newWord = new Union_ArrayList_String__long();\n                            \
    \                           ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5teni5cm.java:28: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5teni5cm.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5teni5cm.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5teni5cm.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp5teni5cm.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5teni5cm.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5teni5cm.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5teni5cm.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfo5ir23d.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.trim();\n        txt = txt.replaceAll(\"\
    \\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt =\
    \ txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \"\
    );\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replace\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1cmvftza.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.trim();\n        txt = txt.toLowerCase();\n\
    \        txt = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt\
    \ = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n\
    \        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppcblsjp1.java:59: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.replaceAll(\"[^a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqwuzwrgo.java:60: error: unclosed string literal\n            \
    \    wordSplit.replaceAll(\"\n                                     ^\n/tmp/tmpqwuzwrgo.java:62:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm_qokjmv.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm7gjpopw.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            result.add(word);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuyldgvut.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpuyldgvut.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuyldgvut.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuyldgvut.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuyldgvut.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuyldgvut.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuyldgvut.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpuyldgvut.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpuyldgvut.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpuyldgvut.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpuyldgvut.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwtnb47de.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpwtnb47de.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwtnb47de.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwtnb47de.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwtnb47de.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwtnb47de.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwtnb47de.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpwtnb47de.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwtnb47de.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwtnb47de.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwtnb47de.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            wordSplit.add(word);\n\
    \            result.add(wordSplit);\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd74f1yjq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpd74f1yjq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpd74f1yjq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpd74f1yjq.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd74f1yjq.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n                          \
    \                               ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpd74f1yjq.java:28: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd74f1yjq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd74f1yjq.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpd74f1yjq.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpd74f1yjq.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpd74f1yjq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpd74f1yjq.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpd74f1yjq.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] wordSplit = word.split(\"\
    ,\");\n            for (String wordSplit : wordSplit) {\n                result.add(wordSplit);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2p4ifsye.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp2p4ifsye.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2p4ifsye.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2p4ifsye.java:21: error: variable wordSplit\
    \ is already defined in method splitWords(String)\n            for (String wordSplit\
    \ : wordSplit) {\n                        ^\n/tmp/tmp2p4ifsye.java:29: error:\
    \ cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2p4ifsye.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2p4ifsye.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2p4ifsye.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp2p4ifsye.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2p4ifsye.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2p4ifsye.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2p4ifsye.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv97e6c0t.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpv97e6c0t.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv97e6c0t.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpv97e6c0t.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpv97e6c0t.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv97e6c0t.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv97e6c0t.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv97e6c0t.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpv97e6c0t.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpv97e6c0t.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpv97e6c0t.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpv97e6c0t.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.replaceAll(\"[^a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjgk40q7f.java:94: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            if (splitWord != null) {\n       \
    \         result.add(splitWord);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0z02rgbz.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0z02rgbz.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0z02rgbz.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0z02rgbz.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp0z02rgbz.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmp0z02rgbz.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0z02rgbz.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0z02rgbz.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0z02rgbz.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp0z02rgbz.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0z02rgbz.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0z02rgbz.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0z02rgbz.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.trim();\n                wordSplit.trim();\n        \
    \        wordSplit.trim();\n                wordSplit.trim();\n              \
    \  wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_qisxnuc.java:97: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4_8h3tth.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp4_8h3tth.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4_8h3tth.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp4_8h3tth.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp4_8h3tth.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4_8h3tth.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4_8h3tth.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4_8h3tth.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp4_8h3tth.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4_8h3tth.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4_8h3tth.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4_8h3tth.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n            split.add(word);\n\
    \            result.add(split);\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv62qse2_.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpv62qse2_.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv62qse2_.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpv62qse2_.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv62qse2_.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n                              \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpv62qse2_.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv62qse2_.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv62qse2_.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpv62qse2_.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpv62qse2_.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpv62qse2_.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpv62qse2_.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpv62qse2_.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            ret.insert(word);\n     \
    \   }\n        return ret;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwrmwldit.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpwrmwldit.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwrmwldit.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpwrmwldit.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwrmwldit.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwrmwldit.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwrmwldit.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpwrmwldit.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwrmwldit.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwrmwldit.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwrmwldit.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word : words) {\n                result.add(word);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2yjecj69.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp2yjecj69.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2yjecj69.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2yjecj69.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmp2yjecj69.java:21: error: variable word\
    \ is already defined in method splitWords(String)\n            for (String word\
    \ : words) {\n                        ^\n/tmp/tmp2yjecj69.java:29: error: cannot\
    \ find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2yjecj69.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2yjecj69.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2yjecj69.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp2yjecj69.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2yjecj69.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2yjecj69.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2yjecj69.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\",\
    \ \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+$\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\\
    s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\
    \\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = \n    }\n \
    \   public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyujqj_h4.java:43: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                split.add(word2);\n\
    \            }\n            result.add(split);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9b1azuth.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp9b1azuth.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9b1azuth.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp9b1azuth.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9b1azuth.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n                              \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp9b1azuth.java:21: error: variable words is already defined\
    \ in method splitWords(String)\n            String[] words = word.split(\",\"\
    );\n                     ^\n/tmp/tmp9b1azuth.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9b1azuth.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9b1azuth.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp9b1azuth.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp9b1azuth.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp9b1azuth.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp9b1azuth.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp9b1azuth.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n14 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8dw7qxhm.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,\\\\s]+\", \" \");\n        txt = txt.replaceAll(\"\\\\\
    s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = \n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzv3up32a.java:57: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\" \");\n        for (String word : words) {\n           \
    \ String[] words = word.split(\",\");\n            for (String word2 : words)\
    \ {\n                result.add(word2);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq130pad1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpq130pad1.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpq130pad1.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpq130pad1.java:21: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpq130pad1.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpq130pad1.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpq130pad1.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpq130pad1.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpq130pad1.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpq130pad1.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpq130pad1.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpq130pad1.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.replaceAll(\"[^a-zA-Z,]\"\
    , \"\");\n        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\",\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp24d6v1gp.java:56: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"\
    [^a-zA-Z ]\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n     \
    \   txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\W\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+$\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W+\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+$\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W+\\\\W+\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\
    \\W+\\\\W+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+\\\\s\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+\\\\W\", \"\");\n \
    \       txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+\\\\W+\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+\\\\W+$\", \"\");\n      \
    \  txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+\\\\W+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+\\\\W+\\\\W\", \"\");\n  \
    \      txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W+\\\\W+\\\\W+\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk6m50qaj.java:45: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\\\\W+\\\\W+\\\\W\n                             ^\n1\
    \ error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            ret.union(new Union_ArrayList_String__long(word));\n\
    \        }\n        return ret;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3mmg548n.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3mmg548n.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3mmg548n.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp3mmg548n.java:21: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp3mmg548n.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3mmg548n.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3mmg548n.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3mmg548n.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp3mmg548n.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3mmg548n.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3mmg548n.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3mmg548n.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm1lzd9vo.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpm1lzd9vo.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpm1lzd9vo.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpm1lzd9vo.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpm1lzd9vo.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpm1lzd9vo.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpm1lzd9vo.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpm1lzd9vo.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpm1lzd9vo.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpm1lzd9vo.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpm1lzd9vo.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpm1lzd9vo.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\"\\\\s+\");\n        for (String word : words) {\n      \
    \      String lowerCaseWord = word.toLowerCase();\n            int count = 0;\n\
    \            int index = 0;\n            while (index < lowerCaseWord.length())\
    \ {\n                char c = lowerCaseWord.charAt(index);\n                if\
    \ (Character.isLetter(c)) {\n                    count++;\n                }\n\
    \                index++;\n            }\n            if (count % 2 == 1) {\n\
    \                result.add(word);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgannwlye.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpgannwlye.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgannwlye.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgannwlye.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgannwlye.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgannwlye.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgannwlye.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpgannwlye.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgannwlye.java:44: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgannwlye.java:45: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgannwlye.java:46: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv7fe2dsr.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpii8wpmg2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpii8wpmg2.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpii8wpmg2.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpii8wpmg2.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpii8wpmg2.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpii8wpmg2.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpii8wpmg2.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpii8wpmg2.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpii8wpmg2.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpii8wpmg2.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpii8wpmg2.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            result.add(word);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8pd3p8l5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp8pd3p8l5.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8pd3p8l5.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp8pd3p8l5.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8pd3p8l5.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8pd3p8l5.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8pd3p8l5.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp8pd3p8l5.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp8pd3p8l5.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp8pd3p8l5.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp8pd3p8l5.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0r9dyyi5.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0r9dyyi5.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0r9dyyi5.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0r9dyyi5.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0r9dyyi5.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0r9dyyi5.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0r9dyyi5.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp0r9dyyi5.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0r9dyyi5.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0r9dyyi5.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0r9dyyi5.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq7gf77jq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpq7gf77jq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpq7gf77jq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpq7gf77jq.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpq7gf77jq.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpq7gf77jq.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpq7gf77jq.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpq7gf77jq.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpq7gf77jq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpq7gf77jq.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpq7gf77jq.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpq7gf77jq.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,\\\\s]+\", \" \");\n        txt = txt.replaceAll(\"\\\\\
    s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = \n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4luc8wcf.java:57: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z0-9]+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\",\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvssoc7_r.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",\\\\s+\"\
    , \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpinlscl06.java:59: error: ';' expected\n        txt = txt\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0odpks1h.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0odpks1h.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0odpks1h.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0odpks1h.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0odpks1h.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0odpks1h.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0odpks1h.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp0odpks1h.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0odpks1h.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0odpks1h.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0odpks1h.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx25y_ctd.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph605ls83.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmph605ls83.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmph605ls83.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmph605ls83.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmph605ls83.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmph605ls83.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmph605ls83.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmph605ls83.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmph605ls83.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmph605ls83.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmph605ls83.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n            String[] words = word.split(\"\
    ,\");\n            for (String word : words) {\n                split.add(word);\n\
    \            }\n            result.add(split);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_a_pu8ff.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp_a_pu8ff.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_a_pu8ff.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_a_pu8ff.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_a_pu8ff.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n                              \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp_a_pu8ff.java:21: error: variable words is already defined\
    \ in method splitWords(String)\n            String[] words = word.split(\",\"\
    );\n                     ^\n/tmp/tmp_a_pu8ff.java:22: error: variable word is\
    \ already defined in method splitWords(String)\n            for (String word :\
    \ words) {\n                        ^\n/tmp/tmp_a_pu8ff.java:31: error: cannot\
    \ find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_a_pu8ff.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_a_pu8ff.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_a_pu8ff.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp_a_pu8ff.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_a_pu8ff.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_a_pu8ff.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_a_pu8ff.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n15 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            result.add(word);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe5202iuq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpe5202iuq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpe5202iuq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpe5202iuq.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe5202iuq.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe5202iuq.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpe5202iuq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpe5202iuq.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpe5202iuq.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpe5202iuq.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpe5202iuq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.trim();\n                wordSplit.trim();\n        \
    \        wordSplit.trim();\n                wordSplit.trim();\n              \
    \  wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphkpax5iz.java:98: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvi37ztnn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpvi37ztnn.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpvi37ztnn.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpvi37ztnn.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpvi37ztnn.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvi37ztnn.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvi37ztnn.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvi37ztnn.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpvi37ztnn.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpvi37ztnn.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpvi37ztnn.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpvi37ztnn.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\s\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\
    \\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S\\\\S\\\\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S\\\\S\\\\S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\
    \\S\\\\S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\
    \\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\
    \\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\\\
    S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\\\
    S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\\\
    S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\
    \\S\\\\S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\
    \\S\\\\S\\\\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\
    \\S\\\\S\\\\S\\\\S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S\\\\S\\\\\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk2hpj3ig.java:44: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            ret.unionArrayList(word);\n\
    \        }\n        return ret;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgqmupgl7.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpgqmupgl7.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqmupgl7.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpgqmupgl7.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqmupgl7.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqmupgl7.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgqmupgl7.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpgqmupgl7.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgqmupgl7.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgqmupgl7.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgqmupgl7.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\"\\\\s+\");\n        for (String word : words) {\n      \
    \      Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            String[] wordSplit = word.split(\",\");\n            for (String\
    \ wordSplit : wordSplit) {\n                wordSplit.toLowerCase();\n       \
    \         wordSplit.trim();\n                wordSplit.replaceAll(\"\\\\s+\",\
    \ \" \");\n                wordSplit.replaceAll(\",\", \" \");\n             \
    \   wordSplit.replaceAll(\"\\\\s\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\r\", \" \");\n                wordSplit.replaceAll(\"\\\\t\", \" \");\n  \
    \              wordSplit.replaceAll(\"\\\\p{Punct}\", \" \");\n              \
    \  wordSplit.replaceAll(\"\\\\p{Cntrl}\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\p{Space}\", \" \");\n                wordSplit.replaceAll(\"\\\\p{Zs}\", \"\
    \ \");\n                wordSplit.replaceAll(\"\\\\p{Zl}\", \" \");\n        \
    \        wordSplit.replaceAll(\"\\\\p{Zp}\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\p{Cc}\", \" \");\n                wordSplit.replaceAll(\"\\\\p{Cf}\", \" \"\
    );\n                wordSplit.replaceAll(\"\\\\p{Cn}\", \" \");\n            \
    \    wordSplit.replaceAll(\"\\\\p{Cs}\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\p{Co}\", \" \");\n                wordSplit.replaceAll(\"\\\\p{Cc}\", \" \"\
    );\n                wordSplit.replaceAll(\"\\\\p{Cf}\", \" \");\n            \
    \    wordSplit.replaceAll(\"\\\\p{Cn}\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\p{Cs}\", \" \");\n                wordSplit.replaceAll(\"\\\\p{Co}\", \" \"\
    );\n                wordSplit.replaceAll(\"\\\\p{Cc}\", \" \");\n            \
    \    wordSplit.replaceAll(\"\\\\p{Cf}\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\p{Cn}\", \" \");\n                wordSplit.replaceAll(\"\\\\p{Cs}\", \" \"\
    );\n                wordSplit.replaceAll(\"\\\\p{Co}\", \" \");\n            \
    \    wordSplit.replaceAll(\"\\\\p{Cc}\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\p{Cf}\", \" \");\n                wordSplit.replaceAll(\"\\\\p{Cn}\", \" \"\
    );\n                word\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcqh61xux.java:55: error: not a statement\n                word\n\
    \                ^\n/tmp/tmpcqh61xux.java:55: error: ';' expected\n          \
    \      word\n                    ^\n/tmp/tmpcqh61xux.java:57: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfc199kqa.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpfc199kqa.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfc199kqa.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfc199kqa.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfc199kqa.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfc199kqa.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfc199kqa.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpfc199kqa.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfc199kqa.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfc199kqa.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfc199kqa.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\\
    p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\
    \\W\", \"\");\n        txt = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n       \
    \ txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\\
    p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\
    \\W\", \"\");\n        txt = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n       \
    \ txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\\
    p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\
    \\W\", \"\");\n        txt = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n       \
    \ txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\\
    p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n        txt = txt.replaceAll(\"\\\
    \\W\", \"\");\n        txt = txt.replaceAll(\"\\\\p{Punct}\", \"\");\n       \
    \ txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\\
    p{Punct}\", \"\");\n        \n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxs_irl2l.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpxs_irl2l.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpxs_irl2l.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpxs_irl2l.java:56: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpxs_irl2l.java:57: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpxs_irl2l.java:58: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpxs_irl2l.java:59: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpxs_irl2l.java:60: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpxs_irl2l.java:61: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpxs_irl2l.java:62: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpxs_irl2l.java:63: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z,]\", \"\");\n        txt = txt.replaceAll(\",\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.trim();\n\
    \        txt = txt.replaceAll(\" \", \"\");\n        txt = txt.replaceAll(\"\\\
    \\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3vbh8wcu.java:57: error: not a statement\n        txt\n       \
    \ ^\n/tmp/tmp3vbh8wcu.java:57: error: ';' expected\n        txt\n           ^\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3nrn0jou.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3nrn0jou.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3nrn0jou.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp3nrn0jou.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp3nrn0jou.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3nrn0jou.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3nrn0jou.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3nrn0jou.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp3nrn0jou.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3nrn0jou.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3nrn0jou.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3nrn0jou.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphwe9yvfk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmphwe9yvfk.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmphwe9yvfk.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmphwe9yvfk.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmphwe9yvfk.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmphwe9yvfk.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmphwe9yvfk.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmphwe9yvfk.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmphwe9yvfk.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmphwe9yvfk.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmphwe9yvfk.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmphwe9yvfk.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            result.add(word);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprv29kra6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmprv29kra6.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprv29kra6.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmprv29kra6.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprv29kra6.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprv29kra6.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmprv29kra6.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmprv29kra6.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmprv29kra6.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmprv29kra6.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmprv29kra6.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkfbo4m_h.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\",\
    \ \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+$\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\\
    s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\
    \\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwhwxrfgf.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpwhwxrfgf.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwhwxrfgf.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwhwxrfgf.java:45: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwhwxrfgf.java:46: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwhwxrfgf.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwhwxrfgf.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpwhwxrfgf.java:49: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwhwxrfgf.java:50: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwhwxrfgf.java:51: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwhwxrfgf.java:52: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\",\", \" \");\n\
    \        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc4u0l9h8.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String wordLowerCase = word.toLowerCase();\n\
    \            int count = 0;\n            for (int i = 0; i < wordLowerCase.length();\
    \ i++) {\n                char c = wordLowerCase.charAt(i);\n                if\
    \ (Character.isLetter(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count % 2 == 1) {\n                result.add(word);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp83lf116r.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp83lf116r.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp83lf116r.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp83lf116r.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp83lf116r.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp83lf116r.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp83lf116r.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp83lf116r.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp83lf116r.java:41: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp83lf116r.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp83lf116r.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            if (splitWord != null) {\n       \
    \         result.add(splitWord);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp69jwsx6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpp69jwsx6.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpp69jwsx6.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpp69jwsx6.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpp69jwsx6.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmpp69jwsx6.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp69jwsx6.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp69jwsx6.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp69jwsx6.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpp69jwsx6.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp69jwsx6.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp69jwsx6.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp69jwsx6.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\",\
    \ \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+$\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\\
    s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\
    \\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb_68i7qb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpb_68i7qb.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpb_68i7qb.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpb_68i7qb.java:45: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb_68i7qb.java:46: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb_68i7qb.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb_68i7qb.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpb_68i7qb.java:49: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb_68i7qb.java:50: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb_68i7qb.java:51: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb_68i7qb.java:52: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.toLowerCase();\n                wordSplit.trim();\n \
    \               wordSplit.toLowerCase();\n                wordSplit.trim();\n\
    \                wordSplit.toLowerCase();\n                wordSplit.trim();\n\
    \                wordSplit.toLowerCase();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpawut1ofp.java:96: error: not a statement\n                wordSplit.trim\n\
    \                         ^\n/tmp/tmpawut1ofp.java:96: error: ';' expected\n \
    \               wordSplit.trim\n                              ^\n/tmp/tmpawut1ofp.java:98:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",\\\\s+\"\
    , \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\"^,\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\", \"\");\n        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\
    ,$\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppxqol50b.java:60: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\",$\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    ,\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\"\
    , \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\
    \\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\", \",\");\n        txt\
    \ = txt.replaceAll(\"\\\\,\", \",\");\n        txt = txt.replaceAll(\"\\\\,\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptt6p3inm.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\,\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.trim();\n        if (txt.isEmpty())\
    \ {\n            return result;\n        }\n        txt = txt.toLowerCase();\n\
    \        txt = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\
    \\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgskjalq7.java:61: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfdf1p4n3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpfdf1p4n3.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfdf1p4n3.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpfdf1p4n3.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpfdf1p4n3.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfdf1p4n3.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfdf1p4n3.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfdf1p4n3.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpfdf1p4n3.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfdf1p4n3.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfdf1p4n3.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfdf1p4n3.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\s\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\
    \\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S\\\\S\\\\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S\\\\S\\\\S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\
    \\S\\\\S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\
    \\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\
    \\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\\\
    S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\\\
    S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\\\
    S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\\\
    \\S\\\\S\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\
    \\S\\\\S\\\\S\\\\S\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\
    \\S\\\\S\\\\S\\\\S\\\\S$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S\\\\S\\\\S\\\\S\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps0jqxfks.java:44: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\\\\S\\\\S\\\\S\\\\S\n                             ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            ret.insert(word);\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp18wlrz2.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpp18wlrz2.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp18wlrz2.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpp18wlrz2.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp18wlrz2.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp18wlrz2.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpp18wlrz2.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpp18wlrz2.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp18wlrz2.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp18wlrz2.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpp18wlrz2.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyd1m7vyq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpyd1m7vyq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyd1m7vyq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpyd1m7vyq.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyd1m7vyq.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyd1m7vyq.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpyd1m7vyq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpyd1m7vyq.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpyd1m7vyq.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpyd1m7vyq.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpyd1m7vyq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            result.add(splitWord);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjrrrm664.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjrrrm664.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjrrrm664.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjrrrm664.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpjrrrm664.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmpjrrrm664.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjrrrm664.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjrrrm664.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjrrrm664.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpjrrrm664.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjrrrm664.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjrrrm664.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjrrrm664.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi_med_jf.java:56: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\W+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\\
    s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+$\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n       \
    \ txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\\\\s+\\\
    \\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\W+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdtbs5aab.java:43: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\" \");\n        for (String word : words) {\n           \
    \ String[] words = word.split(\",\");\n            for (String word2 : words)\
    \ {\n                result.add(word2);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppm_7lo17.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmppm_7lo17.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmppm_7lo17.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmppm_7lo17.java:21: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmppm_7lo17.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppm_7lo17.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppm_7lo17.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmppm_7lo17.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmppm_7lo17.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmppm_7lo17.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmppm_7lo17.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmppm_7lo17.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5q15er5t.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5q15er5t.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5q15er5t.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5q15er5t.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5q15er5t.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5q15er5t.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5q15er5t.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp5q15er5t.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5q15er5t.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5q15er5t.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5q15er5t.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] wordSplit = word.split(\"\
    ,\");\n            for (String wordSplit : wordSplit) {\n                result.add(wordSplit);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiopcbnxa.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpiopcbnxa.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpiopcbnxa.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpiopcbnxa.java:21: error: variable wordSplit\
    \ is already defined in method splitWords(String)\n            for (String wordSplit\
    \ : wordSplit) {\n                        ^\n/tmp/tmpiopcbnxa.java:29: error:\
    \ cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpiopcbnxa.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpiopcbnxa.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpiopcbnxa.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpiopcbnxa.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpiopcbnxa.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpiopcbnxa.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpiopcbnxa.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            result.add(word);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7lpphsig.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp7lpphsig.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7lpphsig.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp7lpphsig.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7lpphsig.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7lpphsig.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp7lpphsig.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp7lpphsig.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp7lpphsig.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp7lpphsig.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp7lpphsig.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptaeszgxb.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmptaeszgxb.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptaeszgxb.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmptaeszgxb.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmptaeszgxb.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptaeszgxb.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptaeszgxb.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmptaeszgxb.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmptaeszgxb.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmptaeszgxb.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmptaeszgxb.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmptaeszgxb.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\");\n        txt\
    \ = txt\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqi4llp3z.java:59: error: ';' expected\n        txt = txt\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z]+\", \" \");\n        txt = txt.replaceAll(\"\\\\\
    s+\", \" \");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp58a7we1_.java:56: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpki8d4q4n.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            wordSplit.add(word);\n\
    \            result.add(wordSplit);\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj_kmjt5k.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpj_kmjt5k.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj_kmjt5k.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj_kmjt5k.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj_kmjt5k.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n                          \
    \                               ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj_kmjt5k.java:28: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj_kmjt5k.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj_kmjt5k.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj_kmjt5k.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpj_kmjt5k.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpj_kmjt5k.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpj_kmjt5k.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpj_kmjt5k.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+$\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\\
    s+\\\\S+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\
    \\S+\\\\s+\\\\s+\\\\s+\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\\\
    \\S+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\
    \\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuca51ldb.java:41: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s\n               \
    \              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2uhjlkuq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp2uhjlkuq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2uhjlkuq.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp2uhjlkuq.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp2uhjlkuq.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2uhjlkuq.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2uhjlkuq.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2uhjlkuq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp2uhjlkuq.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2uhjlkuq.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2uhjlkuq.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2uhjlkuq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        \n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb1ifjk7m.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpb1ifjk7m.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpb1ifjk7m.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpb1ifjk7m.java:64: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb1ifjk7m.java:65: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb1ifjk7m.java:66: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb1ifjk7m.java:67: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpb1ifjk7m.java:68: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb1ifjk7m.java:69: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb1ifjk7m.java:70: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb1ifjk7m.java:71: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9puvtaln.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n            split.add(word);\n\
    \            result.add(split);\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfazi35q8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpfazi35q8.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfazi35q8.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpfazi35q8.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfazi35q8.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n                              \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpfazi35q8.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfazi35q8.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfazi35q8.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpfazi35q8.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpfazi35q8.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfazi35q8.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfazi35q8.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpfazi35q8.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8g615flo.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp8g615flo.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8g615flo.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp8g615flo.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp8g615flo.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8g615flo.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8g615flo.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp8g615flo.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp8g615flo.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp8g615flo.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp8g615flo.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp8g615flo.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\"\
    ,+\", \",\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\"\
    [^a-z]\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo93hu79m.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+\", \",\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt\
    \ = txt.replaceAll(\",\\\\s\", \",,\");\n        txt = txt.replaceAll(\"\\\\s+,\"\
    , \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt =\
    \ txt.replaceAll(\",\\\\s+\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\"\
    , \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt =\
    \ txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\\
    s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n       \
    \ txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n  \
    \      txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n  \
    \      txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n  \
    \      txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n  \
    \      txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n  \
    \      txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n  \
    \      txt = txt.replaceAll(\",\\\\s+,\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\\\\s\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpec13h6j8.java:49: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\",\\\\s\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.trim();\n                wordSplit.trim();\n        \
    \        wordSplit.trim();\n                wordSplit.trim();\n              \
    \  wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpali2q6oi.java:98: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] wordSplit = word.split(\"\
    ,\");\n            for (String wordSplit : wordSplit) {\n                result.add(wordSplit);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp86fa8soa.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp86fa8soa.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp86fa8soa.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp86fa8soa.java:21: error: variable wordSplit\
    \ is already defined in method splitWords(String)\n            for (String wordSplit\
    \ : wordSplit) {\n                        ^\n/tmp/tmp86fa8soa.java:29: error:\
    \ cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp86fa8soa.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp86fa8soa.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp86fa8soa.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp86fa8soa.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp86fa8soa.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp86fa8soa.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp86fa8soa.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z]\", \"\");\n        txt = txt.replaceAll(\"\\\\\
    s+\", \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5z76t_h0.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvg6xmup6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpvg6xmup6.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvg6xmup6.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpvg6xmup6.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpvg6xmup6.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvg6xmup6.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvg6xmup6.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpvg6xmup6.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpvg6xmup6.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpvg6xmup6.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpvg6xmup6.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpvg6xmup6.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n            split.add(word);\n\
    \            result.add(split);\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuozqg0bi.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpuozqg0bi.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuozqg0bi.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpuozqg0bi.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuozqg0bi.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n                              \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpuozqg0bi.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuozqg0bi.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuozqg0bi.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpuozqg0bi.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpuozqg0bi.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpuozqg0bi.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpuozqg0bi.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpuozqg0bi.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5e8lxtvs.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpom8kqbdh.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpom8kqbdh.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpom8kqbdh.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpom8kqbdh.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpom8kqbdh.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpom8kqbdh.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpom8kqbdh.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpom8kqbdh.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpom8kqbdh.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpom8kqbdh.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpom8kqbdh.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.replaceAll(\"[^a-z]\", \"\");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp07l1q9ok.java:60: error: not a statement\n                wordSplit.replaceAll\n\
    \                         ^\n/tmp/tmp07l1q9ok.java:60: error: ';' expected\n \
    \               wordSplit.replaceAll\n                                    ^\n\
    /tmp/tmp07l1q9ok.java:62: error: illegal start of expression\n    public static\
    \ void main(String[] args) {\n    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2uf9k192.java:59: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z]+\", \" \");\n        txt = txt.replaceAll(\"\\\\\
    s+\", \" \");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_j_a09gc.java:56: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpojum760d.java:59: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzs9f8c8z.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z0-9]\", \"\");\n        txt = txt.replaceAll(\"\\\
    \\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3ei5crwp.java:56: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.trim();\n        if (txt.length() > 0) {\n            txt =\
    \ txt.replaceAll(\"\\\\s+\", \",\");\n            txt = txt.replaceAll(\",\",\
    \ \" \");\n            txt = txt.toLowerCase();\n            txt = txt.replaceAll(\"\
    [^a-z]\", \"\");\n            txt = txt.replaceAll(\"^\\\\s+\", \"\");\n     \
    \       txt = txt.replaceAll(\"\\\\s+$\", \"\");\n            txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\\\\s+$\", \"\");\n    \
    \        txt = txt.replaceAll(\"^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\
    \\\\s+$\", \"\");\n            txt = txt.replaceAll(\"^\\\\s+\", \"\");\n    \
    \        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n            txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\\\\s+$\", \"\");\n    \
    \        txt = txt.replaceAll(\"^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\
    \\\\s+$\", \"\");\n            txt = txt.replaceAll(\"^\\\\s+\", \"\");\n    \
    \        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n            txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\\\\s+$\", \"\");\n    \
    \        txt = txt.replaceAll(\"^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\
    \\\\s+$\", \"\");\n            txt = txt.replaceAll(\"^\\\\s+\", \"\");\n    \
    \        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n            txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\\\\s+$\", \"\");\n    \
    \        txt = txt.replaceAll(\"^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\
    \\\\s+$\", \"\");\n            txt = txt.replaceAll(\"^\\\\s+\", \"\");\n    \
    \        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n            txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\\\\s+$\", \"\");\n    \
    \        txt = txt.replaceAll(\"^\\\\s+\", \"\");\n            txt = txt.replaceAll(\"\
    \\\\s+$\", \"\");\n            txt = txt.replaceAll(\"^\\\\s+\", \"\");\n    \
    \        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n            txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n            txt = txt.replaceAll\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2jne7386.java:57: error: ';' expected\n            txt = txt.replaceAll\n\
    \                                ^\n/tmp/tmp2jne7386.java:59: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase().replaceAll(\"\
    [^a-z]\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpah723sos.java:55: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \n                                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplmvgf3vl.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmplmvgf3vl.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmplmvgf3vl.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmplmvgf3vl.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplmvgf3vl.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplmvgf3vl.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplmvgf3vl.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmplmvgf3vl.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmplmvgf3vl.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmplmvgf3vl.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmplmvgf3vl.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word : words) {\n                result.add(word);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpze0s1u_6.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpze0s1u_6.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpze0s1u_6.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpze0s1u_6.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpze0s1u_6.java:21: error: variable word\
    \ is already defined in method splitWords(String)\n            for (String word\
    \ : words) {\n                        ^\n/tmp/tmpze0s1u_6.java:29: error: cannot\
    \ find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpze0s1u_6.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpze0s1u_6.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpze0s1u_6.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpze0s1u_6.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpze0s1u_6.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpze0s1u_6.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpze0s1u_6.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.trim();\n        if (txt.isEmpty())\
    \ {\n            return result;\n        }\n        String[] words = txt.split(\"\
    \ \");\n        for (String word : words) {\n            word = word.trim();\n\
    \            if (word.isEmpty()) {\n                continue;\n            }\n\
    \            result.add(word);\n        }\n        return result;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(splitWords((\"Hello world!\"\
    )).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"\
    world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_9tk6_ok.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp_9tk6_ok.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_9tk6_ok.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_9tk6_ok.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_9tk6_ok.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_9tk6_ok.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_9tk6_ok.java:37: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp_9tk6_ok.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_9tk6_ok.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_9tk6_ok.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_9tk6_ok.java:41: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\",\
    \ \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+$\", \"\");\n     \
    \   txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\\
    S+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\\
    s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\
    \\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\\s+\\\\s+\\\\s+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\S+\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp50j1cmjq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp50j1cmjq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp50j1cmjq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp50j1cmjq.java:45: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp50j1cmjq.java:46: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp50j1cmjq.java:47: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp50j1cmjq.java:48: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp50j1cmjq.java:49: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp50j1cmjq.java:50: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp50j1cmjq.java:51: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp50j1cmjq.java:52: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,\\\\s]+\", \" \");\n        txt = txt.replaceAll(\"\\\\\
    s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = \n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6iwxn_04.java:57: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\"\\\\s+\");\n        for (String word : words) {\n      \
    \      Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            String[] wordParts = word.split(\",\");\n            for (String\
    \ wordPart : wordParts) {\n                wordSplit.add(wordPart);\n        \
    \    }\n            result.add(wordSplit);\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpihpzenxg.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpihpzenxg.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpihpzenxg.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpihpzenxg.java:21: error: cannot find symbol\n\
    \            Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpihpzenxg.java:21: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n                          \
    \                               ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpihpzenxg.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpihpzenxg.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpihpzenxg.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpihpzenxg.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpihpzenxg.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpihpzenxg.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpihpzenxg.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpihpzenxg.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\" \");\n        for (String word : words) {\n           \
    \ word = word.replaceAll(\",\", \"\");\n            word = word.replaceAll(\"\\\
    \\s\", \"\");\n            int length = word.length();\n            int count\
    \ = 0;\n            for (int i = 0; i < length; i++) {\n                if (word.charAt(i)\
    \ >= 'a' && word.charAt(i) <= 'z') {\n                    count++;\n         \
    \       }\n            }\n            if (count % 2 == 1) {\n                result.add(word);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcxghugc8.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpcxghugc8.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpcxghugc8.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpcxghugc8.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpcxghugc8.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpcxghugc8.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpcxghugc8.java:41: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpcxghugc8.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpcxghugc8.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpcxghugc8.java:44: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpcxghugc8.java:45: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4c5zeenq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp4c5zeenq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4c5zeenq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp4c5zeenq.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmp4c5zeenq.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4c5zeenq.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4c5zeenq.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4c5zeenq.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp4c5zeenq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4c5zeenq.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4c5zeenq.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4c5zeenq.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\",\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.trim();\n\
    \        txt = txt.replaceAll(\" \", \"\");\n        txt = txt.replaceAll(\"\\\
    \\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3utm1756.java:58: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.replaceAll(\"[,]\", \" \"\
    );\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxcmfhrm7.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\" \");\n        for (String word : words) {\n           \
    \ Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            String[] wordSplit = word.split(\",\");\n            for (String\
    \ wordSplit : wordSplit) {\n                wordSplit.toLowerCase();\n       \
    \         wordSplit.trim();\n                wordSplit.replaceAll(\"[^a-zA-Z]\"\
    , \"\");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n         \
    \       wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk06qlbdq.java:63: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] wordArray = word.split(\"\
    ,\");\n            for (String wordArray : wordArray) {\n                result.add(wordArray);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1mjavdj9.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1mjavdj9.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1mjavdj9.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1mjavdj9.java:21: error: variable wordArray\
    \ is already defined in method splitWords(String)\n            for (String wordArray\
    \ : wordArray) {\n                        ^\n/tmp/tmp1mjavdj9.java:29: error:\
    \ cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1mjavdj9.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1mjavdj9.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1mjavdj9.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp1mjavdj9.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1mjavdj9.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1mjavdj9.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1mjavdj9.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.replaceAll(\"[^a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsn9p9jj4.java:60: error: unclosed string literal\n            \
    \    wordSplit.replaceAll(\"\n                                     ^\n/tmp/tmpsn9p9jj4.java:62:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\",\", \" \");\n\
    \        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz7mrgiv5.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            result.addAll(splitWord);\n      \
    \  }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu7rg86im.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpu7rg86im.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpu7rg86im.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpu7rg86im.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpu7rg86im.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmpu7rg86im.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpu7rg86im.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpu7rg86im.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpu7rg86im.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpu7rg86im.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpu7rg86im.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpu7rg86im.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpu7rg86im.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            ret.union(new Union_ArrayList_String__long(word));\n\
    \        }\n        return ret;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpckhdepxu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpckhdepxu.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpckhdepxu.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpckhdepxu.java:21: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpckhdepxu.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpckhdepxu.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpckhdepxu.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpckhdepxu.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpckhdepxu.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpckhdepxu.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpckhdepxu.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpckhdepxu.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw4a8k42b.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpw4a8k42b.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpw4a8k42b.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpw4a8k42b.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpw4a8k42b.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw4a8k42b.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw4a8k42b.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpw4a8k42b.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpw4a8k42b.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpw4a8k42b.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpw4a8k42b.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpw4a8k42b.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ newWord = new Union_ArrayList_String__long(word);\n            result.add(newWord);\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeonj9cxt.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpeonj9cxt.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeonj9cxt.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeonj9cxt.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long newWord = new Union_ArrayList_String__long(word);\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeonj9cxt.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ newWord = new Union_ArrayList_String__long(word);\n                        \
    \                               ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpeonj9cxt.java:27: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeonj9cxt.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeonj9cxt.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpeonj9cxt.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpeonj9cxt.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpeonj9cxt.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpeonj9cxt.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpeonj9cxt.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word : words) {\n                result.add(word);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi9np0kb1.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpi9np0kb1.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpi9np0kb1.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpi9np0kb1.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpi9np0kb1.java:21: error: variable word\
    \ is already defined in method splitWords(String)\n            for (String word\
    \ : words) {\n                        ^\n/tmp/tmpi9np0kb1.java:29: error: cannot\
    \ find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpi9np0kb1.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpi9np0kb1.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpi9np0kb1.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpi9np0kb1.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpi9np0kb1.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpi9np0kb1.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpi9np0kb1.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s\", \"\"\
    );\n        txt = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    ^[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt\
    \ = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\",\
    \ \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt =\
    \ txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\
    \");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt =\
    \ txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\
    \");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt =\
    \ txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\
    \");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt =\
    \ txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\
    \");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt =\
    \ txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\
    \");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt =\
    \ txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\
    \");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt = txt.replaceAll(\"\
    [a-z]\", \"\");\n        txt = txt.replaceAll(\"[a-z]\", \"\");\n        txt =\
    \ txt.replaceAll(\"\n    }\n    public static void main(String[] args) {\n   \
    \ assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdlvj5irw.java:59: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",\\\\s+\"\
    , \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = \n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmgoer9m6.java:60: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.trim();\n        if (txt.isEmpty())\
    \ {\n            return result;\n        }\n        String[] words = txt.split(\"\
    \\\\s+\");\n        for (String word : words) {\n            word = word.trim();\n\
    \            if (word.isEmpty()) {\n                continue;\n            }\n\
    \            String[] words = word.split(\",\");\n            for (String word\
    \ : words) {\n                word = word.trim();\n                if (word.isEmpty())\
    \ {\n                    continue;\n                }\n                result.add(word);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps4tq5qp4.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmps4tq5qp4.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps4tq5qp4.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmps4tq5qp4.java:28: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmps4tq5qp4.java:29: error: variable word\
    \ is already defined in method splitWords(String)\n            for (String word\
    \ : words) {\n                        ^\n/tmp/tmps4tq5qp4.java:41: error: cannot\
    \ find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps4tq5qp4.java:42: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps4tq5qp4.java:43: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps4tq5qp4.java:44: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmps4tq5qp4.java:45: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps4tq5qp4.java:46: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps4tq5qp4.java:47: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps4tq5qp4.java:48: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\" \");\n        List<String> wordList = new ArrayList<String>();\n\
    \        for (String word : words) {\n            wordList.add(word);\n      \
    \  }\n        List<String> wordList2 = new ArrayList<String>();\n        for (String\
    \ word : wordList) {\n            wordList2.add(word.replaceAll(\",\", \"\"));\n\
    \        }\n        List<String> wordList3 = new ArrayList<String>();\n      \
    \  for (String word : wordList2) {\n            wordList3.add(word.replaceAll(\"\
    [a-z]\", \"\"));\n        }\n        wordList3.stream().filter(s -> !s.isEmpty()).forEach(s\
    \ -> result.add(s));\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx5sy4qpc.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpx5sy4qpc.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx5sy4qpc.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx5sy4qpc.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx5sy4qpc.java:38: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx5sy4qpc.java:39: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx5sy4qpc.java:40: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpx5sy4qpc.java:41: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpx5sy4qpc.java:42: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpx5sy4qpc.java:43: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpx5sy4qpc.java:44: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdfd78f6n.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String newWord = word.replaceAll(\"\
    ,\", \"\");\n            String newWord2 = newWord.replaceAll(\"\\\\s\", \"\"\
    );\n            int countLetters = newWord2.length();\n            if (countLetters\
    \ % 2 == 1) {\n                result.add(newWord2);\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqiwqlozu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqiwqlozu.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpqiwqlozu.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpqiwqlozu.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqiwqlozu.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqiwqlozu.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqiwqlozu.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpqiwqlozu.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqiwqlozu.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqiwqlozu.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqiwqlozu.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzpn3gtb0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpzpn3gtb0.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzpn3gtb0.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpzpn3gtb0.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzpn3gtb0.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzpn3gtb0.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpzpn3gtb0.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpzpn3gtb0.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpzpn3gtb0.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpzpn3gtb0.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpzpn3gtb0.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjzmikw7b.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjzmikw7b.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjzmikw7b.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjzmikw7b.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpjzmikw7b.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjzmikw7b.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjzmikw7b.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjzmikw7b.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpjzmikw7b.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjzmikw7b.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjzmikw7b.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjzmikw7b.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n            split.add(word);\n\
    \            result.add(split);\n        }\n        return result;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt_x1fu9y.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpt_x1fu9y.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpt_x1fu9y.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpt_x1fu9y.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpt_x1fu9y.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n                              \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpt_x1fu9y.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpt_x1fu9y.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpt_x1fu9y.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpt_x1fu9y.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpt_x1fu9y.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpt_x1fu9y.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpt_x1fu9y.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpt_x1fu9y.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjzu7k7tk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjzu7k7tk.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjzu7k7tk.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjzu7k7tk.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpjzu7k7tk.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjzu7k7tk.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjzu7k7tk.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjzu7k7tk.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpjzu7k7tk.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjzu7k7tk.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjzu7k7tk.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjzu7k7tk.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3norriui.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp94yaconw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp94yaconw.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp94yaconw.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp94yaconw.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp94yaconw.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp94yaconw.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp94yaconw.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp94yaconw.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp94yaconw.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp94yaconw.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp94yaconw.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.replaceAll(\"[^a-zA-Z0-9\\\
    \\s]\", \"\");\n        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\"\
    \\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt =\
    \ txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \"\
    );\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2yg3j5g2.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String lower = word.toLowerCase();\n\
    \            int count = 0;\n            for (int i = 0; i < 26; i++) {\n    \
    \            if (lower.charAt(i) == lower.charAt(i)) {\n                    count++;\n\
    \                }\n            }\n            result.add(new Union_ArrayList_String__long(word,\
    \ count));\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpadwg7s1t.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpadwg7s1t.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpadwg7s1t.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpadwg7s1t.java:27: error: cannot find symbol\n\
    \            result.add(new Union_ArrayList_String__long(word, count));\n    \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpadwg7s1t.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpadwg7s1t.java:34: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpadwg7s1t.java:35: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpadwg7s1t.java:36: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpadwg7s1t.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpadwg7s1t.java:38: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpadwg7s1t.java:39: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpadwg7s1t.java:40: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.trim();\n                wordSplit.trim();\n        \
    \        wordSplit.trim();\n                wordSplit.trim();\n              \
    \  wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpocmiotux.java:97: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcae1sr1c.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr4kgqp83.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpr4kgqp83.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpr4kgqp83.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpr4kgqp83.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr4kgqp83.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr4kgqp83.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr4kgqp83.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpr4kgqp83.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpr4kgqp83.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpr4kgqp83.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpr4kgqp83.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqb1i5ffj.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpqb1i5ffj.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpqb1i5ffj.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpqb1i5ffj.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpqb1i5ffj.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqb1i5ffj.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqb1i5ffj.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpqb1i5ffj.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpqb1i5ffj.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqb1i5ffj.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqb1i5ffj.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpqb1i5ffj.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replaceAll(\",\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \",\");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpupsvyhqz.java:59: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt\
    \ = txt.replaceAll\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp37m1tis2.java:59: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoifqch1j.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpoifqch1j.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpoifqch1j.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpoifqch1j.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoifqch1j.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoifqch1j.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoifqch1j.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpoifqch1j.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpoifqch1j.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpoifqch1j.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpoifqch1j.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.replaceAll(\"[^a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    ^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"[a-zA-Z]$\", \"\"\
    );\n                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n             \
    \   wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    ^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    [a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    ^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    [a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    ^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    [a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    ^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    [a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    ^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    [a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"^[a-zA-Z]\", \"\");\n\
    \                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    ^[a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"[a-zA-Z]\", \"\");\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_lfgqp9u.java:63: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            wordSplit.addAll(Arrays.asList(word));\n\
    \            result.addAll(wordSplit);\n        }\n        return result;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplfl5k4tq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmplfl5k4tq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmplfl5k4tq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmplfl5k4tq.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplfl5k4tq.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n                          \
    \                               ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmplfl5k4tq.java:28: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplfl5k4tq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplfl5k4tq.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmplfl5k4tq.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmplfl5k4tq.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmplfl5k4tq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmplfl5k4tq.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmplfl5k4tq.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3mdohknq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3mdohknq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3mdohknq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3mdohknq.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmp3mdohknq.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3mdohknq.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3mdohknq.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3mdohknq.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp3mdohknq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3mdohknq.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3mdohknq.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3mdohknq.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            result.add(word);\n     \
    \   }\n        return result;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1qvyhlru.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1qvyhlru.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1qvyhlru.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1qvyhlru.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1qvyhlru.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1qvyhlru.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1qvyhlru.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp1qvyhlru.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1qvyhlru.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1qvyhlru.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1qvyhlru.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.trim();\n        if (txt.isEmpty())\
    \ {\n            return result;\n        }\n        txt = txt.replaceAll(\"\\\\\
    s+\", \",\");\n        txt = txt.replaceAll(\",\\\\s+\", \",\");\n        txt\
    \ = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\"\
    );\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replaceAll(\",\", \",,\");\n        txt = txt.replaceAll(\"\
    ,\", \",,\");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdoldh5am.java:58: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplits\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplits) {\n  \
    \              wordSplit.toLowerCase();\n                wordSplit.trim();\n \
    \               wordSplit.trim();\n                wordSplit.trim();\n       \
    \         wordSplit.trim();\n                wordSplit.trim();\n             \
    \   wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeyam69x7.java:97: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase().replaceAll(\"\
    [^a-z]\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \",\");\n        txt\
    \ = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\",\", \" \"\
    );\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9hqt0k9e.java:55: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \n                                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp355tyxnj.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp355tyxnj.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp355tyxnj.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp355tyxnj.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp355tyxnj.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp355tyxnj.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp355tyxnj.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp355tyxnj.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp355tyxnj.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp355tyxnj.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp355tyxnj.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase().replaceAll(\"\
    [,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"^\\\\s+\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\n    }\n    public static void main(String[] args)\
    \ {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpacyy0shu.java:55: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-z]\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \",\");\n        txt = txt.replaceAll(\",+\", \",\");\n        txt = txt.replaceAll(\"\
    ,\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdjmspdzt.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy7vfb4bv.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpy7vfb4bv.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpy7vfb4bv.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpy7vfb4bv.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpy7vfb4bv.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy7vfb4bv.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy7vfb4bv.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpy7vfb4bv.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpy7vfb4bv.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpy7vfb4bv.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpy7vfb4bv.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpy7vfb4bv.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgf_2j2r3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpgf_2j2r3.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgf_2j2r3.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpgf_2j2r3.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpgf_2j2r3.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgf_2j2r3.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgf_2j2r3.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpgf_2j2r3.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpgf_2j2r3.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgf_2j2r3.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgf_2j2r3.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpgf_2j2r3.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            wordSplit.add(word);\n\
    \            result.add(wordSplit);\n        }\n        return result;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6lvkg598.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp6lvkg598.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6lvkg598.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6lvkg598.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long wordSplit = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6lvkg598.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n                          \
    \                               ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp6lvkg598.java:28: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6lvkg598.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6lvkg598.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp6lvkg598.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp6lvkg598.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp6lvkg598.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp6lvkg598.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp6lvkg598.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \",\");\n        txt = txt.replaceAll(\",+\", \"\
    ,\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5qf4d2_5.java:56: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj6jd817k.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpj6jd817k.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj6jd817k.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpj6jd817k.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj6jd817k.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj6jd817k.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpj6jd817k.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpj6jd817k.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpj6jd817k.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpj6jd817k.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpj6jd817k.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.replaceAll(\"[^a-zA-Z]\", \"\");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\\\\s+\", \" \");\n\
    \                wordSplit.replaceAll(\"\\\\s+\", \" \");\n                wordSplit.replaceAll(\"\
    \\\\s+\", \" \");\n                wordSplit.replaceAll(\"\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj_oyq446.java:60: error: unclosed string literal\n            \
    \    wordSplit.replaceAll(\"\n                                     ^\n/tmp/tmpj_oyq446.java:62:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        String[]\
    \ words = txt.split(\" \");\n        for (String word : words) {\n           \
    \ String[] words = word.split(\",\");\n            for (String word2 : words)\
    \ {\n                result.add(word2);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2zcgp1rk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp2zcgp1rk.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2zcgp1rk.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp2zcgp1rk.java:21: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmp2zcgp1rk.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2zcgp1rk.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2zcgp1rk.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp2zcgp1rk.java:33: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp2zcgp1rk.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2zcgp1rk.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2zcgp1rk.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp2zcgp1rk.java:37: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.toUpperCase();\n                wordSplit.trim();\n \
    \               wordSplit.trim();\n                wordSplit.trim();\n       \
    \         wordSplit.trim();\n                wordSplit.trim();\n             \
    \   wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n                wordSplit.trim();\n\
    \                wordSplit.trim();\n                wordSplit.trim();\n      \
    \          wordSplit.trim();\n                wordSplit.trim();\n            \
    \    wordSplit.trim();\n                wordSplit.trim();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsrtmynp6.java:97: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.toUpperCase();\n                wordSplit.trim();\n \
    \               wordSplit.replaceAll(\"[,]\", \"\");\n                wordSplit.trim();\n\
    \                wordSplit.replaceAll(\"[\\\\s]\", \"\");\n                wordSplit.trim();\n\
    \                wordSplit.replaceAll(\"[\\\\W]\", \"\");\n                wordSplit.trim();\n\
    \                wordSplit.replaceAll(\"[\\\\p{Punct}]\", \"\");\n           \
    \     wordSplit.trim();\n                wordSplit.replaceAll(\"[\\\\p{C}]\",\
    \ \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{S}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Z}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{L}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{N}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{M}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Cc}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Zz}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Ss}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Zz}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Pp}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Pp}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Pp}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Pp}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{Pp}]\", \"\");\n                wordSplit.trim();\n                wordSplit.replaceAll(\"\
    [\\\\p{P\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvit714xs.java:65: error: unclosed string literal\n            \
    \    wordSplit.replaceAll(\"[\\\\p{P\n                                     ^\n\
    /tmp/tmpvit714xs.java:67: error: illegal start of expression\n    public static\
    \ void main(String[] args) {\n    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp70rioduq.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp70rioduq.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp70rioduq.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp70rioduq.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp70rioduq.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp70rioduq.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp70rioduq.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp70rioduq.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp70rioduq.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp70rioduq.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp70rioduq.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[,]\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\",\
    \ \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replace\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1_zzckt5.java:56: error: ';' expected\n        txt = txt.replace\n\
    \                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.replaceAll(\"[\\\\s,]+\"\
    , \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt =\
    \ txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\\
    s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n       \
    \ txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"\
    [\\\\s,]+\", \" \");\n        txt = txt.replaceAll(\"[\\\\s,]+\", \" \");\n  \
    \      txt = txt.replaceAll(\"[\\\\s,]+\", \" \n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb99xfb5o.java:50: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"[\\\\s,]+\", \" \n                                        ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\
    ^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\s\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\S\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W$\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\
    \\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+$\", \"\"\
    );\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\", \"\");\n \
    \       txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+$\", \"\");\n    \
    \    txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n  \
    \      txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\
    \");\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\"\
    , \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\s+\\\
    \\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\
    \\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\
    \\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\s+\\\\\
    s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\\\\W\\\\s+\\\\s+\\\\s+\\\\\
    s+\\\\s+\\\\s+\\\\s+$\", \"\");\n        txt = txt.replaceAll(\"\n    }\n    public\
    \ static void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq4vt4ov_.java:43: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\n                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp66pxe637.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp66pxe637.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66pxe637.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp66pxe637.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp66pxe637.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66pxe637.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66pxe637.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp66pxe637.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp66pxe637.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp66pxe637.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp66pxe637.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp66pxe637.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] wordSplit = word.split(\"\
    ,\");\n            for (String wordSplit : wordSplit) {\n                result.add(wordSplit);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp25nhmbxd.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp25nhmbxd.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp25nhmbxd.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp25nhmbxd.java:21: error: variable wordSplit\
    \ is already defined in method splitWords(String)\n            for (String wordSplit\
    \ : wordSplit) {\n                        ^\n/tmp/tmp25nhmbxd.java:29: error:\
    \ cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp25nhmbxd.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp25nhmbxd.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp25nhmbxd.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp25nhmbxd.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp25nhmbxd.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp25nhmbxd.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp25nhmbxd.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            result.add(splitWord);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdkfvcgzt.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpdkfvcgzt.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpdkfvcgzt.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpdkfvcgzt.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpdkfvcgzt.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmpdkfvcgzt.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpdkfvcgzt.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpdkfvcgzt.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpdkfvcgzt.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpdkfvcgzt.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpdkfvcgzt.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpdkfvcgzt.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpdkfvcgzt.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z,]\", \"\");\n        txt = txt.replaceAll(\",\"\
    , \" \");\n        txt = txt.trim();\n        txt = txt.replaceAll(\" \", \",\"\
    );\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        \n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx5nkw36i.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpx5nkw36i.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx5nkw36i.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpx5nkw36i.java:60: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx5nkw36i.java:61: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx5nkw36i.java:62: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpx5nkw36i.java:63: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpx5nkw36i.java:64: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpx5nkw36i.java:65: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpx5nkw36i.java:66: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpx5nkw36i.java:67: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.replaceAll(\"[^a-zA-Z]+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    ,\", \" \");\n        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppbzpxojr.java:56: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjv3crr4m.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjv3crr4m.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjv3crr4m.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpjv3crr4m.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpjv3crr4m.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjv3crr4m.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjv3crr4m.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjv3crr4m.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpjv3crr4m.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjv3crr4m.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjv3crr4m.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjv3crr4m.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] wordSplit = word.split(\"\
    ,\");\n            for (String wordSplit : wordSplit) {\n                result.add(wordSplit);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3bay69p4.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3bay69p4.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3bay69p4.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3bay69p4.java:21: error: variable wordSplit\
    \ is already defined in method splitWords(String)\n            for (String wordSplit\
    \ : wordSplit) {\n                        ^\n/tmp/tmp3bay69p4.java:29: error:\
    \ cannot find symbol\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3bay69p4.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3bay69p4.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3bay69p4.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp3bay69p4.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3bay69p4.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3bay69p4.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3bay69p4.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            ret.union(new Union_ArrayList_String__long(word));\n\
    \        }\n        return ret;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr6psnc7g.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpr6psnc7g.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr6psnc7g.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpr6psnc7g.java:21: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpr6psnc7g.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr6psnc7g.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr6psnc7g.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpr6psnc7g.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpr6psnc7g.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpr6psnc7g.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpr6psnc7g.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpr6psnc7g.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase().replaceAll(\"\
    [^a-z]\", \"\");\n        String[] words = txt.split(\" \");\n        for (String\
    \ word : words) {\n            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            split.add(word);\n            result.add(split);\n        }\n   \
    \     return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_s9c6bpa.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp_s9c6bpa.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_s9c6bpa.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp_s9c6bpa.java:21: error: cannot find symbol\n\
    \            Union_ArrayList_String__long split = new Union_ArrayList_String__long();\n\
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_s9c6bpa.java:21: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ split = new Union_ArrayList_String__long();\n                              \
    \                       ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp_s9c6bpa.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_s9c6bpa.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_s9c6bpa.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp_s9c6bpa.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp_s9c6bpa.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_s9c6bpa.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_s9c6bpa.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp_s9c6bpa.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            if (splitWord != null) {\n       \
    \         result.add(splitWord);\n            }\n        }\n        return result;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb8dh32fc.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpb8dh32fc.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpb8dh32fc.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpb8dh32fc.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpb8dh32fc.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmpb8dh32fc.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb8dh32fc.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb8dh32fc.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpb8dh32fc.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpb8dh32fc.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb8dh32fc.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb8dh32fc.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpb8dh32fc.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoy1rn82v.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpoy1rn82v.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpoy1rn82v.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpoy1rn82v.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoy1rn82v.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoy1rn82v.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpoy1rn82v.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpoy1rn82v.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpoy1rn82v.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpoy1rn82v.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpoy1rn82v.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.replaceAll(\"[^a-zA-Z,]\"\
    , \"\");\n        txt = txt.toLowerCase();\n        txt = txt.replaceAll(\",\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+$\", \"\");\n        txt = txt.replaceAll(\"^\\\\s+\", \"\");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll\n    }\n    public static void main(String[]\
    \ args) {\n    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkz6y2nxb.java:56: error: ';' expected\n        txt = txt.replaceAll\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1nui_b0y.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp1nui_b0y.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1nui_b0y.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp1nui_b0y.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmp1nui_b0y.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1nui_b0y.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1nui_b0y.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp1nui_b0y.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp1nui_b0y.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1nui_b0y.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1nui_b0y.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp1nui_b0y.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n            if (splitWord.size() > 0) {\n    \
    \            result.add(splitWord);\n            }\n        }\n        return\
    \ result;\n\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3unmqg01.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp3unmqg01.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3unmqg01.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp3unmqg01.java:20: error: cannot find symbol\n\
    \            Union_ArrayList_String__long splitWord = splitWord(word);\n     \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmp3unmqg01.java:20: error: cannot find symbol\n            Union_ArrayList_String__long\
    \ splitWord = splitWord(word);\n                                             \
    \        ^\n  symbol:   method splitWord(String)\n  location: class Problem\n\
    /tmp/tmp3unmqg01.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3unmqg01.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3unmqg01.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp3unmqg01.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp3unmqg01.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3unmqg01.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3unmqg01.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp3unmqg01.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n13 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmtu5atm0.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpmtu5atm0.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmtu5atm0.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpmtu5atm0.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpmtu5atm0.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmtu5atm0.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmtu5atm0.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpmtu5atm0.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpmtu5atm0.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpmtu5atm0.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpmtu5atm0.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpmtu5atm0.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\" \");\n        for (String word : words)\
    \ {\n            ret.union(new Union_ArrayList_String__long(word));\n        }\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg8534kk3.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpg8534kk3.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8534kk3.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmpg8534kk3.java:20: error: cannot find symbol\n       \
    \     ret.union(new Union_ArrayList_String__long(word));\n                   \
    \       ^\n  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n\
    /tmp/tmpg8534kk3.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8534kk3.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8534kk3.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpg8534kk3.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpg8534kk3.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpg8534kk3.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpg8534kk3.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpg8534kk3.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\"\\\\s+\"\
    );\n        for (String word : words) {\n            String[] words = word.split(\"\
    ,\");\n            for (String word2 : words) {\n                result.add(word2);\n\
    \            }\n        }\n        return result;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjfaxqwdw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjfaxqwdw.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjfaxqwdw.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjfaxqwdw.java:20: error: variable words is\
    \ already defined in method splitWords(String)\n            String[] words = word.split(\"\
    ,\");\n                     ^\n/tmp/tmpjfaxqwdw.java:29: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjfaxqwdw.java:30: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjfaxqwdw.java:31: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjfaxqwdw.java:32: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpjfaxqwdw.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjfaxqwdw.java:34: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjfaxqwdw.java:35: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjfaxqwdw.java:36: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n12 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        String[] words = txt.split(\"\\\\s+\");\n        for (String word : words)\
    \ {\n            ret.insert(word);\n        }\n        return ret;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(splitWords((\"Hello\
    \ world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4n3uiluu.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp4n3uiluu.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4n3uiluu.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmp4n3uiluu.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4n3uiluu.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4n3uiluu.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp4n3uiluu.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp4n3uiluu.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4n3uiluu.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4n3uiluu.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp4n3uiluu.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwvjdbfsn.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpwvjdbfsn.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwvjdbfsn.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpwvjdbfsn.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwvjdbfsn.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwvjdbfsn.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpwvjdbfsn.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpwvjdbfsn.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwvjdbfsn.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwvjdbfsn.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpwvjdbfsn.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase();\n        txt\
    \ = txt.replaceAll(\",\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\W\", \"\");\n        txt = txt.replaceAll(\"[^a-zA-Z]\", \"\");\n        txt\
    \ = txt.replaceAll(\"^\", \"\");\n        txt = txt.replaceAll(\"$\", \"\");\n\
    \        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z]\", \"\");\n        txt = txt.replaceAll(\"^\",\
    \ \"\");\n        txt = txt.replaceAll(\"$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"[^a-zA-Z]\"\
    , \"\");\n        txt = txt.replaceAll(\"^\", \"\");\n        txt = txt.replaceAll(\"\
    $\", \"\");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z]\", \"\");\n        txt = txt.replaceAll(\"^\",\
    \ \"\");\n        txt = txt.replaceAll(\"$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"[^a-zA-Z]\"\
    , \"\");\n        txt = txt.replaceAll(\"^\", \"\");\n        txt = txt.replaceAll(\"\
    $\", \"\");\n        txt = txt.replaceAll(\"\\\\s\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\W\", \"\");\n        txt\
    \ = txt.replaceAll(\"[^a-zA-Z]\", \"\");\n        txt = txt.replaceAll(\"^\",\
    \ \"\");\n        txt = txt.replaceAll(\"$\", \"\");\n        txt = txt.replaceAll(\"\
    \\\\s\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\W\", \"\");\n        txt = txt.replaceAll(\"[^a-zA-Z]\"\
    , \"\");\n        \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0kk6e3vw.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp0kk6e3vw.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0kk6e3vw.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp0kk6e3vw.java:63: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0kk6e3vw.java:64: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0kk6e3vw.java:65: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp0kk6e3vw.java:66: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp0kk6e3vw.java:67: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0kk6e3vw.java:68: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0kk6e3vw.java:69: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp0kk6e3vw.java:70: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            result.add(word);\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5dywsb1c.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmp5dywsb1c.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5dywsb1c.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmp5dywsb1c.java:26: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5dywsb1c.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5dywsb1c.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmp5dywsb1c.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmp5dywsb1c.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5dywsb1c.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5dywsb1c.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmp5dywsb1c.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        String[] words = txt.split(\" \");\n\
    \        for (String word : words) {\n            Union_ArrayList_String__long\
    \ wordSplit = new Union_ArrayList_String__long();\n            String[] wordSplit\
    \ = word.split(\",\");\n            for (String wordSplit : wordSplit) {\n   \
    \             wordSplit.toLowerCase();\n                wordSplit.trim();\n  \
    \              wordSplit.replace(\",\", \"\");\n                wordSplit.replace(\"\
    !\", \"\");\n                wordSplit.replace(\"?\", \"\");\n               \
    \ wordSplit.replace(\";\", \"\");\n                wordSplit.replace(\":\", \"\
    \");\n                wordSplit.replace(\",\", \"\");\n                wordSplit.replace(\"\
    '\", \"\");\n                wordSplit.replace(\"\\\"\", \"\");\n            \
    \    wordSplit.replace(\"(\", \"\");\n                wordSplit.replace(\")\"\
    , \"\");\n                wordSplit.replace(\"[\", \"\");\n                wordSplit.replace(\"\
    ]\", \"\");\n                wordSplit.replace(\"{\", \"\");\n               \
    \ wordSplit.replace(\"}\", \"\");\n                wordSplit.replace(\"<\", \"\
    \");\n                wordSplit.replace(\">\", \"\");\n                wordSplit.replace(\"\
    +\", \"\");\n                wordSplit.replace(\"-\", \"\");\n               \
    \ wordSplit.replace(\"*\", \"\");\n                wordSplit.replace(\"/\", \"\
    \");\n                wordSplit.replace(\"%\", \"\");\n                wordSplit.replace(\"\
    ^\", \"\");\n                wordSplit.replace(\"~\", \"\");\n               \
    \ wordSplit.replace(\"`\", \"\");\n                wordSplit.replace(\"{\", \"\
    \");\n                wordSplit.replace(\"}\", \"\");\n                wordSplit.replace(\"\
    |\", \"\");\n                wordSplit.replace(\"\\\\\", \"\");\n            \
    \    wordSplit.replace(\"^\", \"\");\n                wordSplit.replace(\"~\"\
    , \"\");\n                wordSplit.replace(\"`\", \"\");\n                wordSplit.replace(\"\
    {\", \"\");\n                wordSplit.replace(\"}\", \"\");\n               \
    \ wordSplit.replace(\"|\", \"\");\n                wordSplit.replace(\"\\\\\"\
    , \"\");\n                wordSplit.replace(\"^\", \"\");\n                wordSplit.replace(\"\
    ~\", \"\");\n                wordSplit.replace(\"`\", \"\");\n               \
    \ wordSplit.replace(\"{\", \"\");\n                wordSplit.replace(\"}\", \"\
    \");\n                wordSplit.replace(\"|\", \"\");\n                wordSplit.replace(\"\
    \\\\\", \"\");\n                wordSplit.replace(\"^\", \"\");\n            \
    \    wordSplit.replace(\"~\", \"\");\n                wordSplit.replace(\"`\"\
    , \"\");\n                wordSplit.replace(\"{\", \"\");\n                wordSplit.replace(\"\
    }\", \"\");\n                wordSplit.replace(\"|\", \"\");\n               \
    \ wordSplit.replace(\"\\\\\", \"\");\n                wordSplit.replace(\"^\"\
    , \"\");\n                wordSplit.replace(\"~\", \"\");\n                wordSplit.replace(\"\
    `\", \"\");\n                wordSplit.replace(\"{\", \"\");\n               \
    \ word\n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm8anvc3k.java:78: error: not a statement\n                word\n\
    \                ^\n/tmp/tmpm8anvc3k.java:78: error: ';' expected\n          \
    \      word\n                    ^\n/tmp/tmpm8anvc3k.java:80: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        txt = txt.toLowerCase();\n        String[] words = txt.split(\" \");\n\
    \        Arrays.sort(words);\n        Arrays.stream(words).forEach(word -> ret.add(word));\n\
    \        return ret;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps1e0ftdk.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmps1e0ftdk.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long ret = new Union_ArrayList_String__long();\n\
    \        ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps1e0ftdk.java:17: error: cannot find symbol\n        Union_ArrayList_String__long\
    \ ret = new Union_ArrayList_String__long();\n                                \
    \               ^\n  symbol:   class Union_ArrayList_String__long\n  location:\
    \ class Problem\n/tmp/tmps1e0ftdk.java:26: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps1e0ftdk.java:27: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps1e0ftdk.java:28: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmps1e0ftdk.java:29: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmps1e0ftdk.java:30: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps1e0ftdk.java:31: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps1e0ftdk.java:32: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmps1e0ftdk.java:33: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.toLowerCase().replaceAll(\"\
    [^a-z]\", \"\");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+$\", \"\");\n        txt\
    \ = txt.replaceAll(\"^\\\\s+\", \"\");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt\
    \ = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\\\\s+\"\
    , \" \");\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n        txt = txt.replaceAll(\"\
    \\\\s+\", \" \n    }\n    public static void main(String[] args) {\n    assert(splitWords((\"\
    Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello,world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n    assert(splitWords((\"Hello,Hello,world\
    \ !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"Hello,Hello,world\"\
    , (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp72gpa5hy.java:55: error: unclosed string literal\n        txt =\
    \ txt.replaceAll(\"\\\\s+\", \" \n                                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    // should split\
    \ on commas ',' if no commas exists you should return the number of lower-case\
    \ letters with odd order in the\n    // alphabet, ord('a') = 0, ord('b') = 1,\
    \ ... ord('z') = 25\n    // Examples\n    // split_words(\"Hello world!\") \u279E\
    \ [\"Hello\", \"world!\"]\n    // split_words(\"Hello,world!\") \u279E [\"Hello\"\
    , \"world!\"]\n    // split_words(\"abcdef\") == 3\n    public static Union_ArrayList_String__long\
    \ splitWords(String txt) {\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        txt = txt.replaceAll(\"\\\\s+\", \"\
    \ \");\n        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n        txt = txt.toLowerCase();\n\
    \        txt = txt.trim();\n        txt = txt.replaceAll(\"\\\\s+\", \" \");\n\
    \        txt = txt.replaceAll(\",\", \" \");\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(splitWords((\"Hello world!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world!\"\
    )))));\n    assert(splitWords((\"Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n    assert(splitWords((\"Hello world,!\")).equals((new\
    \ Union_ArrayList_String__long(Arrays.asList((String)\"Hello\", (String)\"world,!\"\
    )))));\n    assert(splitWords((\"Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjisb4zoc.java:16: error: cannot find symbol\n    public static\
    \ Union_ArrayList_String__long splitWords(String txt) {\n                  ^\n\
    \  symbol:   class Union_ArrayList_String__long\n  location: class Problem\n/tmp/tmpjisb4zoc.java:17:\
    \ error: cannot find symbol\n        Union_ArrayList_String__long result = new\
    \ Union_ArrayList_String__long();\n        ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjisb4zoc.java:17: error: cannot find symbol\n\
    \        Union_ArrayList_String__long result = new Union_ArrayList_String__long();\n\
    \                                                  ^\n  symbol:   class Union_ArrayList_String__long\n\
    \  location: class Problem\n/tmp/tmpjisb4zoc.java:71: error: cannot find symbol\n\
    \    assert(splitWords((\"Hello world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjisb4zoc.java:72: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,world!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world!\")))));\n                                          \
    \          ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjisb4zoc.java:73: error: cannot find symbol\n    assert(splitWords((\"\
    Hello world,!\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello\", (String)\"world,!\")))));\n                                         \
    \            ^\n  symbol:   class Union_ArrayList_String__long\n  location: class\
    \ Problem\n/tmp/tmpjisb4zoc.java:74: error: cannot find symbol\n    assert(splitWords((\"\
    Hello,Hello,world !\")).equals((new Union_ArrayList_String__long(Arrays.asList((String)\"\
    Hello,Hello,world\", (String)\"!\")))));\n                                   \
    \                        ^\n  symbol:   class Union_ArrayList_String__long\n \
    \ location: class Problem\n/tmp/tmpjisb4zoc.java:75: error: cannot find symbol\n\
    \    assert(splitWords((\"abcdef\")).equals((Union_ArrayList_String__long(3l))));\n\
    \                                          ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjisb4zoc.java:76: error: cannot find symbol\n\
    \    assert(splitWords((\"aaabb\")).equals((Union_ArrayList_String__long(2l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjisb4zoc.java:77: error: cannot find symbol\n\
    \    assert(splitWords((\"aaaBb\")).equals((Union_ArrayList_String__long(1l))));\n\
    \                                         ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n/tmp/tmpjisb4zoc.java:78: error: cannot find symbol\n\
    \    assert(splitWords((\"\")).equals((Union_ArrayList_String__long(0l))));\n\
    \                                    ^\n  symbol:   method Union_ArrayList_String__long(long)\n\
    \  location: class Problem\n11 errors\n"
  exit_code: 1
  status: SyntaxError

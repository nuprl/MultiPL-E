name: HumanEval_155_even_odd_count
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        long temp = num;\n\
    \        while (temp != 0) {\n            digit = temp % 10;\n            if (digit\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            temp = temp / 10;\n        }\n        count\
    \ = even * 2 + odd;\n        return Pair.of(count, count);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpb9060ok4.java:29: error: cannot find symbol\n        return Pair.of(count,\
    \ count);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long count = 0;\n\
    \        long digitCount = 0;\n        long digitSum = 0;\n        long sum =\
    \ 0;\n        long sumEven = 0;\n        long sumOdd = 0;\n        long sumEvenOdd\
    \ = 0;\n        long sumEvenOddDigit = 0;\n        long sumEvenOddDigitCount =\
    \ 0;\n        long sumEvenOddDigitSum = 0;\n        long sumEvenOddDigitSumEven\
    \ = 0;\n        long sumEvenOddDigitSumOdd = 0;\n        long sumEvenOddDigitSumEvenOdd\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigit = 0;\n        long sumEvenOddDigitSumEvenOddDigitCount\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSum = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEven\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumOdd = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOdd\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigit = 0;\n    \
    \    long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitCount = 0;\n        long\
    \ sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSum = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEven\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumOdd = 0;\n\
    \        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOdd = 0;\n \
    \       long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOddDigit = 0;\n\
    \        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOddDigitCount\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSum\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEven\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumOdd\
    \ = 0;\n        long sumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOddDigitSumEvenOdd\
    \ = 0;\n        long sumEvenOddDigitSumEven\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp0ij_vz0a.java:49: error: ';' expected\n        long sumEvenOddDigitSumEven\n\
    \                                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = num;\n        while (digit > 0) {\n            digit\
    \ = digit / 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n        }\n\
    \        return new Pair<>(evenCount, oddCount);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpve35wp6z.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        long temp = 0;\n  \
    \      long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n   \
    \     long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n    \
    \    long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n    \
    \    long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n  \
    \      long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpuuhqela5.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ralpv1z.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        if (num < 0) {\n            throw new IllegalArgumentException(\"\
    Negative numbers are not allowed\");\n        }\n        if (num == 0) {\n   \
    \         return Pair.of(0, 0);\n        }\n        while (num != 0) {\n     \
    \       long digit = num % 10;\n            if (digit % 2 == 0) {\n          \
    \      evenCount++;\n            } else {\n                oddCount++;\n     \
    \       }\n            num /= 10;\n        }\n        return Pair.of(evenCount,\
    \ oddCount);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpuozs5lcl.java:20: error: cannot find symbol\n            return\
    \ Pair.of(0, 0);\n                       ^\n  symbol:   method of(int,int)\n \
    \ location: class Pair\n/tmp/tmpuozs5lcl.java:31: error: cannot find symbol\n\
    \        return Pair.of(evenCount, oddCount);\n                   ^\n  symbol:\
    \   method of(long,long)\n  location: class Pair\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit = digit / 10;\n            if (remainder % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n        }\n        return new Pair<>(even, odd);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long sum;\n    \
    \    long digitSum;\n        long digitSum2;\n        long digitSum3;\n      \
    \  long digitSum4;\n        long digitSum5;\n        long digitSum6;\n       \
    \ long digitSum7;\n        long digitSum8;\n        long digitSum9;\n        long\
    \ digitSum10;\n        long digitSum11;\n        long digitSum12;\n        long\
    \ digitSum13;\n        long digitSum14;\n        long digitSum15;\n        long\
    \ digitSum16;\n        long digitSum17;\n        long digitSum18;\n        long\
    \ digitSum19;\n        long digitSum20;\n        long digitSum21;\n        long\
    \ digitSum22;\n        long digitSum23;\n        long digitSum24;\n        long\
    \ digitSum25;\n        long digitSum26;\n        long digitSum27;\n        long\
    \ digitSum28;\n        long digitSum29;\n        long digitSum30;\n        long\
    \ digitSum31;\n        long digitSum32;\n        long digitSum33;\n        long\
    \ digitSum34;\n        long digitSum35;\n        long digitSum36;\n        long\
    \ digitSum37;\n        long digitSum38;\n        long digitSum39;\n        long\
    \ digitSum40;\n        long digitSum41;\n        long digitSum42;\n        long\
    \ digitSum43;\n        long digitSum44;\n        long digitSum45;\n        long\
    \ digitSum46;\n        long digitSum47;\n        long digitSum48;\n        long\
    \ digitSum49;\n        long digitSum50;\n        long digitSum51;\n        long\
    \ digitSum52;\n        long digitSum53;\n        long digitSum54;\n        long\
    \ digitSum55;\n        long digitSum56;\n        long digitSum57;\n        long\
    \ digitSum58;\n        long digitSum59;\n        long digitSum60;\n        long\
    \ digitSum61;\n        long digitSum62;\n        long digitSum63;\n        long\
    \ digitSum64;\n        long digitSum65;\n        long digitSum66;\n        long\
    \ digitSum67;\n        long digitSum68;\n        long digitSum69;\n        long\
    \ digitSum70;\n        long digitSum71;\n        long digitSum72;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp52e6rme6.java:92: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = num;\n        while (digit > 0) {\n            long remainder\
    \ = digit % 10;\n            if (remainder % 2 == 0) {\n                even++;\n\
    \            }\n            else {\n                odd++;\n            }\n  \
    \          digit = digit / 10;\n        }\n        return new Pair<>(even, odd);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long quotient;\n\
    \        long temp;\n        long remainder2;\n        long quotient2;\n     \
    \   long temp2;\n        long remainder3;\n        long quotient3;\n        long\
    \ temp3;\n        long remainder4;\n        long quotient4;\n        long temp4;\n\
    \        long remainder5;\n        long quotient5;\n        long temp5;\n    \
    \    long remainder6;\n        long quotient6;\n        long temp6;\n        long\
    \ remainder7;\n        long quotient7;\n        long temp7;\n        long remainder8;\n\
    \        long quotient8;\n        long temp8;\n        long remainder9;\n    \
    \    long quotient9;\n        long temp9;\n        long remainder10;\n       \
    \ long quotient10;\n        long temp10;\n        long remainder11;\n        long\
    \ quotient11;\n        long temp11;\n        long remainder12;\n        long quotient12;\n\
    \        long temp12;\n        long remainder13;\n        long quotient13;\n \
    \       long temp13;\n        long remainder14;\n        long quotient14;\n  \
    \      long temp14;\n        long remainder15;\n        long quotient15;\n   \
    \     long temp15;\n        long remainder16;\n        long quotient16;\n    \
    \    long temp16;\n        long remainder17;\n        long quotient17;\n     \
    \   long temp17;\n        long remainder18;\n        long quotient18;\n      \
    \  long temp18;\n        long remainder19;\n        long quotient19;\n       \
    \ long temp19;\n        long remainder20;\n        long quotient20;\n        long\
    \ temp20;\n        long remainder21;\n        long quotient21;\n        long temp21;\n\
    \        long remainder22;\n        long quotient22;\n        long temp22;\n \
    \       long remainder23;\n        long quotient23;\n        long temp23;\n  \
    \      long remainder24;\n        long quotient24;\n        long temp24;\n   \
    \     long remainder25;\n        long quotient25;\n        long temp25;\n    \
    \    long remainder26;\n        long quotient26;\n        long temp26;\n     \
    \   long remainder27;\n        long quotient27;\n        long temp27;\n      \
    \  long remainder28;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpuastk0n0.java:99: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpl66mip68.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpv7zz8fqe.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = num;\n        while (digit > 0) {\n            digit\
    \ = digit / 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n        }\n\
    \        return Pair.of(evenCount, oddCount);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaz8leunl.java:25: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long quotient =\
    \ 0;\n        long remainder2 = 0;\n        long quotient2 = 0;\n        long\
    \ remainder3 = 0;\n        long quotient3 = 0;\n        long remainder4 = 0;\n\
    \        long quotient4 = 0;\n        long remainder5 = 0;\n        long quotient5\
    \ = 0;\n        long remainder6 = 0;\n        long quotient6 = 0;\n        long\
    \ remainder7 = 0;\n        long quotient7 = 0;\n        long remainder8 = 0;\n\
    \        long quotient8 = 0;\n        long remainder9 = 0;\n        long quotient9\
    \ = 0;\n        long remainder10 = 0;\n        long quotient10 = 0;\n        long\
    \ remainder11 = 0;\n        long quotient11 = 0;\n        long remainder12 = 0;\n\
    \        long quotient12 = 0;\n        long remainder13 = 0;\n        long quotient13\
    \ = 0;\n        long remainder14 = 0;\n        long quotient14 = 0;\n        long\
    \ remainder15 = 0;\n        long quotient15 = 0;\n        long remainder16 = 0;\n\
    \        long quotient16 = 0;\n        long remainder17 = 0;\n        long quotient17\
    \ = 0;\n        long remainder18 = 0;\n        long quotient18 = 0;\n        long\
    \ remainder19 = 0;\n        long quotient19 = 0;\n        long remainder20 = 0;\n\
    \        long quotient20 = 0;\n        long remainder21 = 0;\n        long quotient21\
    \ = 0;\n        long remainder22 = 0;\n        long quotient22 = 0;\n        long\
    \ remainder23 = 0;\n        long quotient23 = 0;\n        long remainder24 = 0;\n\
    \        long quotient24 = 0;\n        long remainder25 = 0;\n        long quotient25\
    \ = 0;\n        long remainder26 = 0;\n        long quotient26 = 0;\n        long\
    \ remainder27 = 0;\n        long quotient27 = 0;\n        long remainder28 = 0;\n\
    \        long quotient28 = 0;\n        long remainder29 = 0;\n        long quotient29\
    \ = 0;\n        long remainder30 = 0;\n        long quotient30 = 0;\n        long\
    \ remainder31 = 0;\n        long quotient31 = 0;\n        long remainder32 = 0;\n\
    \        long quotient32 = 0;\n        long remainder33 = 0;\n        long quotient33\
    \ = 0;\n        long remainder34 = 0;\n        long quotient34 = 0;\n        long\
    \ remainder35 = 0;\n        long quotient35 = 0;\n        long remainder36 = 0;\n\
    \        long quotient36 = 0;\n        long remain\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp87ll773i.java:89: error: ';' expected\n        long remain\n  \
    \                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long sum;\n        long count = 0;\n        long digitCount = 0;\n     \
    \   long digitSum = 0;\n        long digitSum2 = 0;\n        long digitSum3 =\
    \ 0;\n        long digitSum4 = 0;\n        long digitSum5 = 0;\n        long digitSum6\
    \ = 0;\n        long digitSum7 = 0;\n        long digitSum8 = 0;\n        long\
    \ digitSum9 = 0;\n        long digitSum10 = 0;\n        long digitSum11 = 0;\n\
    \        long digitSum12 = 0;\n        long digitSum13 = 0;\n        long digitSum14\
    \ = 0;\n        long digitSum15 = 0;\n        long digitSum16 = 0;\n        long\
    \ digitSum17 = 0;\n        long digitSum18 = 0;\n        long digitSum19 = 0;\n\
    \        long digitSum20 = 0;\n        long digitSum21 = 0;\n        long digitSum22\
    \ = 0;\n        long digitSum23 = 0;\n        long digitSum24 = 0;\n        long\
    \ digitSum25 = 0;\n        long digitSum26 = 0;\n        long digitSum27 = 0;\n\
    \        long digitSum28 = 0;\n        long digitSum29 = 0;\n        long digitSum30\
    \ = 0;\n        long digitSum31 = 0;\n        long digitSum32 = 0;\n        long\
    \ digitSum33 = 0;\n        long digitSum34 = 0;\n        long digitSum35 = 0;\n\
    \        long digitSum36 = 0;\n        long digitSum37 = 0;\n        long digitSum38\
    \ = 0;\n        long digitSum39 = 0;\n        long digitSum40 = 0;\n        long\
    \ digitSum41 = 0;\n        long digitSum42 = 0;\n        long digitSum43 = 0;\n\
    \        long digitSum44 = 0;\n        long digitSum45 = 0;\n        long digitSum46\
    \ = 0;\n        long digitSum47 = 0;\n        long digitSum48 = 0;\n        long\
    \ digitSum49 = 0;\n        long digitSum50 = 0;\n        long digitSum51 = 0;\n\
    \        long digitSum52 = 0;\n        long digitSum53 = 0;\n        long digitSum54\
    \ = 0;\n        long digitSum55 = 0;\n        long digitSum56 = 0;\n        long\
    \ digitSum57 = 0;\n        long digitSum58 = 0;\n        long digitSum59 = 0;\n\
    \        long digitSum60 = 0;\n        long digitSum61 = 0;\n        long digitSum62\
    \ = 0;\n        long digitSum63 = 0;\n        long digitSum64 = 0;\n        long\
    \ digitSum65 = 0;\n        long digitSum66 = 0;\n        long digitSum67 = 0;\n\
    \        long digitSum68\n    }\n    public static void main(String[] args) {\n\
    \    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmph75sflfk.java:89: error: ';' expected\n        long digitSum68\n\
    \                       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        long remainder = 0;\n\
    \        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n  \
    \      long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n   \
    \     long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n    \
    \    long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n  \
    \      long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpu1t36vm_.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long temp = num;\n        while (temp != 0) {\n            long digit\
    \ = temp % 10;\n            if (digit % 2 == 0) {\n                even++;\n \
    \           } else {\n                odd++;\n            }\n            temp\
    \ /= 10;\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long remainder = 0;\n        long quotient = 0;\n        long quotient2\
    \ = 0;\n        long quotient3 = 0;\n        long quotient4 = 0;\n        long\
    \ quotient5 = 0;\n        long quotient6 = 0;\n        long quotient7 = 0;\n \
    \       long quotient8 = 0;\n        long quotient9 = 0;\n        long quotient10\
    \ = 0;\n        long quotient11 = 0;\n        long quotient12 = 0;\n        long\
    \ quotient13 = 0;\n        long quotient14 = 0;\n        long quotient15 = 0;\n\
    \        long quotient16 = 0;\n        long quotient17 = 0;\n        long quotient18\
    \ = 0;\n        long quotient19 = 0;\n        long quotient20 = 0;\n        long\
    \ quotient21 = 0;\n        long quotient22 = 0;\n        long quotient23 = 0;\n\
    \        long quotient24 = 0;\n        long quotient25 = 0;\n        long quotient26\
    \ = 0;\n        long quotient27 = 0;\n        long quotient28 = 0;\n        long\
    \ quotient29 = 0;\n        long quotient30 = 0;\n        long quotient31 = 0;\n\
    \        long quotient32 = 0;\n        long quotient33 = 0;\n        long quotient34\
    \ = 0;\n        long quotient35 = 0;\n        long quotient36 = 0;\n        long\
    \ quotient37 = 0;\n        long quotient38 = 0;\n        long quotient39 = 0;\n\
    \        long quotient40 = 0;\n        long quotient41 = 0;\n        long quotient42\
    \ = 0;\n        long quotient43 = 0;\n        long quotient44 = 0;\n        long\
    \ quotient45 = 0;\n        long quotient46 = 0;\n        long quotient47 = 0;\n\
    \        long quotient48 = 0;\n        long quotient49 = 0;\n        long quotient50\
    \ = 0;\n        long quotient51 = 0;\n        long quotient52 = 0;\n        long\
    \ quotient53 = 0;\n        long quotient54 = 0;\n        long quotient55 = 0;\n\
    \        long quotient56 = 0;\n        long quotient57 = 0;\n        long quotient58\
    \ = 0;\n        long quotient59 = 0;\n        long quotient60 = 0;\n        long\
    \ quotient61 = 0;\n        long quotient62 = 0;\n        long quotient63 = 0;\n\
    \        long quotient64 = 0;\n        long quotient65 = 0;\n        long quotient66\
    \ = 0;\n        long quotient67 = 0;\n        long quotient68 = 0;\n        long\
    \ quotient69 = 0;\n        long quotient70 = 0;\n        long quotient71 = 0;\n\
    \        long quotient\n    }\n    public static void main(String[] args) {\n\
    \    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp5eebu7al.java:88: error: ';' expected\n        long quotient\n\
    \                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = num;\n        while (digit > 0) {\n            digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num = num /\
    \ 10;\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpxwbt5_vg.java:26: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmperj0yira.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            evenCount += digit == 0 ? 0\
    \ : 1;\n            oddCount += digit == 9;\n            remainder = remainder\
    \ / 10;\n        }\n        return new Pair<>(evenCount, oddCount);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpx_si4l19.java:20: error: bad operand types for binary operator\
    \ '+'\n            oddCount += digit == 9;\n                     ^\n  first type:\
    \  long\n  second type: boolean\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ new Pair<>(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long temp;\n        long digit;\n        long remainder;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp78yqx865.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            }\n            else {\n         \
    \       odd++;\n            }\n            num /= 10;\n        }\n        return\
    \ new Pair<>(even, odd);\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp3gw3t2cm.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long sum = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long sumOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigits = 0;\n        long sumOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigits = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n\
    \        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits = 0;\n\
    \        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigits\
    \ = 0;\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOf\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpbnzi39_n.java:37: error: ';' expected\n        long sumOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOfDigitsOf\n\
    \                                                                            \
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long tempNum = num;\n        while (tempNum != 0) {\n        \
    \    long digit = tempNum % 10;\n            tempNum /= 10;\n            if (digit\
    \ % 2 == 0) {\n                evenCount++;\n            } else {\n          \
    \      oddCount++;\n            }\n        }\n        return new Pair<>(evenCount,\
    \ oddCount);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long sum = 0;\n       \
    \ long count = 0;\n        long digitCount = 0;\n        long remainderCount =\
    \ 0;\n        long sumOfDigits = 0;\n        long sumOfRemainders = 0;\n     \
    \   long sumOfEvenOdd = 0;\n        long sumOfEvenOddCount = 0;\n        long\
    \ sumOfEvenOddCountDigits = 0;\n        long sumOfEvenOddCountRemainders = 0;\n\
    \        long sumOfEvenOddCountSumOfDigits = 0;\n        long sumOfEvenOddCountSumOfRemainders\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOdd = 0;\n        long sumOfEvenOddCountSumOfEvenOddCount\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountDigits = 0;\n        long\
    \ sumOfEvenOddCountSumOfEvenOddCountRemainders = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfDigits\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfRemainders = 0;\n\
    \        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOdd = 0;\n        long\
    \ sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCount = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountDigits\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountRemainders\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfDigits\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfRemainders\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfEvenOdd\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCount\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountDigits\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountRemainders\
    \ = 0;\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfEvenOdd\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp6dg0dzxw.java:46: error: ';' expected\n        long sumOfEvenOddCountSumOfEvenOddCountSumOfEvenOddCountSumOfEvenOdd\n\
    \                                                                            ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = num;\n        while (digit > 0) {\n            digit\
    \ = digit / 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n        }\n\
    \        return Pair.of(evenCount, oddCount);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp08q0e2fw.java:25: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long tempNum = num;\n        while (tempNum != 0) {\n        \
    \    int digit = tempNum % 10;\n            if (digit % 2 == 0) {\n          \
    \      evenCount++;\n            } else {\n                oddCount++;\n     \
    \       }\n            tempNum /= 10;\n        }\n        return new Pair<>(evenCount,\
    \ oddCount);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpqq8yi4pi.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = tempNum % 10;\n                  \
    \              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long temp = num;\n        while (temp != 0) {\n            long digit\
    \ = temp % 10;\n            if (digit % 2 == 0) {\n                even++;\n \
    \           } else {\n                odd++;\n            }\n            temp\
    \ /= 10;\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit = digit / 10;\n            if (remainder % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp9b11l_vc.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long count = 0;\n\
    \        long digitCount = 0;\n        long remainderCount = 0;\n        long\
    \ digitRemainder = 0;\n        long digitRemainderCount = 0;\n        long digitRemainderRemainder\
    \ = 0;\n        long digitRemainderRemainderCount = 0;\n        long digitRemainderRemainderRemainder\
    \ = 0;\n        long digitRemainderRemainderRemainderCount = 0;\n        long\
    \ digitRemainderRemainderRemainderRemainder = 0;\n        long digitRemainderRemainderRemainderCount\
    \ = 0;\n        long digitRemainderRemainderRemainderRemainder = 0;\n        long\
    \ digitRemainderRemainderRemainderCount = 0;\n        long digitRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitRemainderRemainderRemainderCount = 0;\n        long\
    \ digitRemainderRemainderRemainderRemainder = 0;\n        long digitRemainderRemainderRemainderCount\
    \ = 0;\n        long digitRemainderRemainderRemainderRemainder = 0;\n        long\
    \ digitRemainderRemainderRemainderCount = 0;\n        long digitRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitRemainderRemainderRemainderCount = 0;\n        long\
    \ digitRemainderRemainderRemainderRemainder = 0;\n        long digitRemainderRemainderRemainderCount\
    \ = 0;\n        long digitRemainderRemainderRemainderRemainder = 0;\n        long\
    \ digitRemainderRemainderRemainderCount = 0;\n        long digitRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitRemainderRemainderRemainderCount = 0;\n        long\
    \ digitRemainderRemainderRemainderRemainder = 0;\n        long digitRemainderRemainderRemainderCount\
    \ = 0;\n        long digitRemainderRemainderRemainderRemainder = 0;\n        long\
    \ digitRemainderRemainderRemainderCount = 0;\n        long digitRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitRemainderRemainderRemainderCount = 0;\n        long\
    \ digitRemainderRemainderRemainderRemainder = 0;\n        long digitRemainderRemainderRemainderCount\
    \ = 0;\n        long digitRemainderRemainderRemainderRemainder = 0;\n        long\
    \ digitRemainderRemainderRemainderCount = 0;\n        long digitRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitRemainderRemainderRemainderCount = 0;\n        long\
    \ digitRemainderRemainderRemainderRemainder = 0;\n        long digitRemainderRemainderRemainderCount\
    \ = 0;\n        long digitRemainderRemainderRemainderRemainder = 0;\n        long\
    \ digitRemain\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpvvwm1eu_.java:60: error: ';' expected\n        long digitRemain\n\
    \                        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n \
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n  \
    \      long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n   \
    \     long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n \
    \       long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpj43h9ix2.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        long temp = 0;\n  \
    \      long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n   \
    \     long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n    \
    \    long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n    \
    \    long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n  \
    \      long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpjy01rseo.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = 0;\n        long quotient = 0;\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmphwua795p.java:101: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = num % 10;\n \
    \           if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num = num / 10;\n    \
    \    }\n        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp47i7ae4n.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long sum = 0;\n        long temp2 = 0;\n   \
    \     long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n    \
    \    long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n     \
    \   long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n    \
    \    long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n  \
    \      long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpke5_l_f_.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ n = num;\n        while (n > 0) {\n            long digit = n % 10;\n      \
    \      if (digit % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            n = n / 10;\n        }\n \
    \       return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpvi3pm5jc.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = 0;\n        long temp = 0;\n        long temp2\
    \ = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 =\
    \ 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n\
    \        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n\
    \        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp38dx7vvi.java:101: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long quotient;\n\
    \        long remainder2;\n        long quotient2;\n        long remainder3;\n\
    \        long quotient3;\n        long remainder4;\n        long quotient4;\n\
    \        long remainder5;\n        long quotient5;\n        long remainder6;\n\
    \        long quotient6;\n        long remainder7;\n        long quotient7;\n\
    \        long remainder8;\n        long quotient8;\n        long remainder9;\n\
    \        long quotient9;\n        long remainder10;\n        long quotient10;\n\
    \        long remainder11;\n        long quotient11;\n        long remainder12;\n\
    \        long quotient12;\n        long remainder13;\n        long quotient13;\n\
    \        long remainder14;\n        long quotient14;\n        long remainder15;\n\
    \        long quotient15;\n        long remainder16;\n        long quotient16;\n\
    \        long remainder17;\n        long quotient17;\n        long remainder18;\n\
    \        long quotient18;\n        long remainder19;\n        long quotient19;\n\
    \        long remainder20;\n        long quotient20;\n        long remainder21;\n\
    \        long quotient21;\n        long remainder22;\n        long quotient22;\n\
    \        long remainder23;\n        long quotient23;\n        long remainder24;\n\
    \        long quotient24;\n        long remainder25;\n        long quotient25;\n\
    \        long remainder26;\n        long quotient26;\n        long remainder27;\n\
    \        long quotient27;\n        long remainder28;\n        long quotient28;\n\
    \        long remainder29;\n        long quotient29;\n        long remainder30;\n\
    \        long quotient30;\n        long remainder31;\n        long quotient31;\n\
    \        long remainder32;\n        long quotient32;\n        long remainder33;\n\
    \        long quotient33;\n        long remainder34;\n        long quotient34;\n\
    \        long remainder35;\n        long quotient35;\n        long remainder36;\n\
    \        long quotient36;\n        long remainder37;\n        long quotient37;\n\
    \        long remainder38;\n        long quotient38;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp3f6p8uce.java:93: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long digitRemainder = 0;\n      \
    \  long digitTemp = 0;\n        long digitRemainderCount = 0;\n        long digitTempCount\
    \ = 0;\n        long digitRemainderTemp = 0;\n        long digitTempRemainder\
    \ = 0;\n        long digitTempRemainderCount = 0;\n        long digitTempRemainderTemp\
    \ = 0;\n        long digitTempRemainderTempCount = 0;\n        long digitTempRemainderTempCount\
    \ = 0;\n        long digitTempRemainderTempCountCount = 0;\n        long digitTempRemainderTempCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCount = 0;\n       \
    \ long digitTempRemainderTempCountCountCountCountCount = 0;\n        long digitTempRemainderTempCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemainderTempCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitTempRemain\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpts678i12.java:53: error: ';' expected\n        long digitTempRemain\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpn5h7kas0.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        if (num < 0) {\n            throw new IllegalArgumentException(\"\
    Invalid input\");\n        }\n        if (num == 0) {\n            return Pair.of(0,\
    \ 0);\n        }\n        while (num != 0) {\n            long digit = num % 10;\n\
    \            if (digit % 2 == 0) {\n                evenCount++;\n           \
    \ } else {\n                oddCount++;\n            }\n            num /= 10;\n\
    \        }\n        return Pair.of(evenCount, oddCount);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmphhc9q68p.java:20: error: cannot find symbol\n            return\
    \ Pair.of(0, 0);\n                       ^\n  symbol:   method of(int,int)\n \
    \ location: class Pair\n/tmp/tmphhc9q68p.java:31: error: cannot find symbol\n\
    \        return Pair.of(evenCount, oddCount);\n                   ^\n  symbol:\
    \   method of(long,long)\n  location: class Pair\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long temp;\n        long\
    \ count = 0;\n        long digitCount = 0;\n        long remainderCount = 0;\n\
    \        long tempCount = 0;\n        long tempCount2 = 0;\n        long tempCount3\
    \ = 0;\n        long tempCount4 = 0;\n        long tempCount5 = 0;\n        long\
    \ tempCount6 = 0;\n        long tempCount7 = 0;\n        long tempCount8 = 0;\n\
    \        long tempCount9 = 0;\n        long tempCount10 = 0;\n        long tempCount11\
    \ = 0;\n        long tempCount12 = 0;\n        long tempCount13 = 0;\n       \
    \ long tempCount14 = 0;\n        long tempCount15 = 0;\n        long tempCount16\
    \ = 0;\n        long tempCount17 = 0;\n        long tempCount18 = 0;\n       \
    \ long tempCount19 = 0;\n        long tempCount20 = 0;\n        long tempCount21\
    \ = 0;\n        long tempCount22 = 0;\n        long tempCount23 = 0;\n       \
    \ long tempCount24 = 0;\n        long tempCount25 = 0;\n        long tempCount26\
    \ = 0;\n        long tempCount27 = 0;\n        long tempCount28 = 0;\n       \
    \ long tempCount29 = 0;\n        long tempCount30 = 0;\n        long tempCount31\
    \ = 0;\n        long tempCount32 = 0;\n        long tempCount33 = 0;\n       \
    \ long tempCount34 = 0;\n        long tempCount35 = 0;\n        long tempCount36\
    \ = 0;\n        long tempCount37 = 0;\n        long tempCount38 = 0;\n       \
    \ long tempCount39 = 0;\n        long tempCount40 = 0;\n        long tempCount41\
    \ = 0;\n        long tempCount42 = 0;\n        long tempCount43 = 0;\n       \
    \ long tempCount44 = 0;\n        long tempCount45 = 0;\n        long tempCount46\
    \ = 0;\n        long tempCount47 = 0;\n        long tempCount48 = 0;\n       \
    \ long tempCount49 = 0;\n        long tempCount50 = 0;\n        long tempCount51\
    \ = 0;\n        long tempCount52 = 0;\n        long tempCount53 = 0;\n       \
    \ long tempCount54 = 0;\n        long tempCount55 = 0;\n        long tempCount56\
    \ = 0;\n        long tempCount57 = 0;\n        long tempCount58 = 0;\n       \
    \ long tempCount59 = 0;\n        long tempCount60 = 0;\n        long tempCount61\
    \ = 0;\n        long tempCount62 = 0;\n        long tempCount63 = 0;\n       \
    \ long tempCount64 = 0;\n        long tempCount65 = 0;\n        long tempCount66\
    \ = 0;\n        long tempCount67 = 0;\n        long tempCount68\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpvdnhj1k4.java:89: error: ';' expected\n        long tempCount68\n\
    \                        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long sum = 0;\n       \
    \ long count = 1;\n        long temp;\n        long temp2;\n        long temp3;\n\
    \        long temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n\
    \        long temp8;\n        long temp9;\n        long temp10;\n        long\
    \ temp11;\n        long temp12;\n        long temp13;\n        long temp14;\n\
    \        long temp15;\n        long temp16;\n        long temp17;\n        long\
    \ temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n\
    \        long temp22;\n        long temp23;\n        long temp24;\n        long\
    \ temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n\
    \        long temp29;\n        long temp30;\n        long temp31;\n        long\
    \ temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n\
    \        long temp36;\n        long temp37;\n        long temp38;\n        long\
    \ temp39;\n        long temp40;\n        long temp41;\n        long temp42;\n\
    \        long temp43;\n        long temp44;\n        long temp45;\n        long\
    \ temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n\
    \        long temp50;\n        long temp51;\n        long temp52;\n        long\
    \ temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n\
    \        long temp57;\n        long temp58;\n        long temp59;\n        long\
    \ temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n\
    \        long temp64;\n        long temp65;\n        long temp66;\n        long\
    \ temp67;\n        long temp68;\n        long temp69;\n        long temp70;\n\
    \        long temp71;\n        long temp72;\n        long temp73;\n        long\
    \ temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n\
    \        long temp78;\n        long temp79;\n        long temp80;\n        long\
    \ temp81;\n        long temp82;\n        long temp83;\n        long temp\n   \
    \ }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpt2jlgufq.java:103: error: ';' expected\n        long temp\n   \
    \              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = 0;\n        long remainder = 0;\n        long temp\
    \ = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 =\
    \ 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n\
    \        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n\
    \        long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpq0mcmp1y.java:100: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpq0mcmp1y.java:100: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpz22ws8ev.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        long digitCount = 0;\n\
    \        while (num > 0) {\n            digit = num % 10;\n            digitCount\
    \ = 1;\n            while (digit > 0) {\n                digitCount++;\n     \
    \           digit = digit / 10;\n            }\n            count++;\n       \
    \     if (digitCount % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num = num / 10;\n    \
    \    }\n        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpjijqsjox.java:34: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = num;\n        while (digit > 0) {\n            digit\
    \ = digit / 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n        }\n\
    \        return Pair.of(evenCount, oddCount);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0khs65m.java:25: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = 0;\n        long remainder = 0;\n        long temp\
    \ = 0;\n        long count = 0;\n        long sum = 0;\n        long tempSum =\
    \ 0;\n        long tempSum2 = 0;\n        long tempSum3 = 0;\n        long tempSum4\
    \ = 0;\n        long tempSum5 = 0;\n        long tempSum6 = 0;\n        long tempSum7\
    \ = 0;\n        long tempSum8 = 0;\n        long tempSum9 = 0;\n        long tempSum10\
    \ = 0;\n        long tempSum11 = 0;\n        long tempSum12 = 0;\n        long\
    \ tempSum13 = 0;\n        long tempSum14 = 0;\n        long tempSum15 = 0;\n \
    \       long tempSum16 = 0;\n        long tempSum17 = 0;\n        long tempSum18\
    \ = 0;\n        long tempSum19 = 0;\n        long tempSum20 = 0;\n        long\
    \ tempSum21 = 0;\n        long tempSum22 = 0;\n        long tempSum23 = 0;\n \
    \       long tempSum24 = 0;\n        long tempSum25 = 0;\n        long tempSum26\
    \ = 0;\n        long tempSum27 = 0;\n        long tempSum28 = 0;\n        long\
    \ tempSum29 = 0;\n        long tempSum30 = 0;\n        long tempSum31 = 0;\n \
    \       long tempSum32 = 0;\n        long tempSum33 = 0;\n        long tempSum34\
    \ = 0;\n        long tempSum35 = 0;\n        long tempSum36 = 0;\n        long\
    \ tempSum37 = 0;\n        long tempSum38 = 0;\n        long tempSum39 = 0;\n \
    \       long tempSum40 = 0;\n        long tempSum41 = 0;\n        long tempSum42\
    \ = 0;\n        long tempSum43 = 0;\n        long tempSum44 = 0;\n        long\
    \ tempSum45 = 0;\n        long tempSum46 = 0;\n        long tempSum47 = 0;\n \
    \       long tempSum48 = 0;\n        long tempSum49 = 0;\n        long tempSum50\
    \ = 0;\n        long tempSum51 = 0;\n        long tempSum52 = 0;\n        long\
    \ tempSum53 = 0;\n        long tempSum54 = 0;\n        long tempSum55 = 0;\n \
    \       long tempSum56 = 0;\n        long tempSum57 = 0;\n        long tempSum58\
    \ = 0;\n        long tempSum59 = 0;\n        long tempSum60 = 0;\n        long\
    \ tempSum61 = 0;\n        long tempSum62 = 0;\n        long tempSum63 = 0;\n \
    \       long tempSum64 = 0;\n        long tempSum65 = 0;\n        long tempSum66\
    \ = 0;\n        long tempSum67 = 0;\n        long tempSum68 = 0;\n        long\
    \ tempSum\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmplzs91h33.java:89: error: ';' expected\n        long tempSum\n \
    \                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        long temp = 0;\n        while (remainder\
    \ > 0) {\n            temp = (remainder % 10);\n            evenCount += temp;\n\
    \            remainder = remainder / 10;\n        }\n        while (remainder\
    \ > 0) {\n            temp = (remainder % 10);\n            oddCount += temp;\n\
    \            remainder = remainder / 10;\n        }\n        return new Pair<>(evenCount,\
    \ oddCount);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ new Pair<>(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = num % 10;\n \
    \           if (digit % 2 == 0) {\n                even++;\n            }\n  \
    \          else {\n                odd++;\n            }\n            num = num\
    \ / 10;\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpp6_ix8zy.java:26: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long evenCount = 0;\n        long\
    \ oddCount = 0;\n        long digitCountEven = 0;\n        long digitCountOdd\
    \ = 0;\n        long remainderCountEven = 0;\n        long remainderCountOdd =\
    \ 0;\n        long tempCountEven = 0;\n        long tempCountOdd = 0;\n      \
    \  long evenCountEven = 0;\n        long evenCountOdd = 0;\n        long oddCountEven\
    \ = 0;\n        long oddCountOdd = 0;\n        long digitCountEvenOdd = 0;\n \
    \       long digitCountOddEven = 0;\n        long remainderCountEvenOdd = 0;\n\
    \        long remainderCountOddEven = 0;\n        long tempCountEvenOdd = 0;\n\
    \        long tempCountOddEven = 0;\n        long evenCountEvenOdd = 0;\n    \
    \    long evenCountOddOdd = 0;\n        long oddCountEvenOdd = 0;\n        long\
    \ oddCountOddEven = 0;\n        long digitCountEvenOddOdd = 0;\n        long digitCountOddEvenOdd\
    \ = 0;\n        long remainderCountEvenOddOdd = 0;\n        long remainderCountOddEvenOdd\
    \ = 0;\n        long tempCountEvenOddOdd = 0;\n        long tempCountOddEvenOdd\
    \ = 0;\n        long evenCountEvenOddOdd = 0;\n        long evenCountOddEvenOdd\
    \ = 0;\n        long oddCountEvenOddEven = 0;\n        long oddCountOddEvenOdd\
    \ = 0;\n        long digitCountEvenOddOddOdd = 0;\n        long digitCountOddEvenOddOdd\
    \ = 0;\n        long remainderCountEvenOddOddOdd = 0;\n        long remainderCountOddEvenOddOdd\
    \ = 0;\n        long tempCountEvenOddOddOdd = 0;\n        long tempCountOddEvenOddOdd\
    \ = 0;\n        long evenCountEvenOddOddOdd = 0;\n        long evenCountOddEvenOddOdd\
    \ = 0;\n        long oddCountEvenOddEvenOdd = 0;\n        long oddCountOddEvenOddOdd\
    \ = 0;\n        long digitCountEvenOddOddOddOdd = 0;\n        long digitCountOddEvenOddOddOdd\
    \ = 0;\n        long remainderCountEvenOddO\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpw10pk6z7.java:67: error: ';' expected\n        long remainderCountEvenOddO\n\
    \                                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp3ib9f08m.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long quotient;\n\
    \        long quotient2;\n        long quotient3;\n        long quotient4;\n \
    \       long quotient5;\n        long quotient6;\n        long quotient7;\n  \
    \      long quotient8;\n        long quotient9;\n        long quotient10;\n  \
    \      long quotient11;\n        long quotient12;\n        long quotient13;\n\
    \        long quotient14;\n        long quotient15;\n        long quotient16;\n\
    \        long quotient17;\n        long quotient18;\n        long quotient19;\n\
    \        long quotient20;\n        long quotient21;\n        long quotient22;\n\
    \        long quotient23;\n        long quotient24;\n        long quotient25;\n\
    \        long quotient26;\n        long quotient27;\n        long quotient28;\n\
    \        long quotient29;\n        long quotient30;\n        long quotient31;\n\
    \        long quotient32;\n        long quotient33;\n        long quotient34;\n\
    \        long quotient35;\n        long quotient36;\n        long quotient37;\n\
    \        long quotient38;\n        long quotient39;\n        long quotient40;\n\
    \        long quotient41;\n        long quotient42;\n        long quotient43;\n\
    \        long quotient44;\n        long quotient45;\n        long quotient46;\n\
    \        long quotient47;\n        long quotient48;\n        long quotient49;\n\
    \        long quotient50;\n        long quotient51;\n        long quotient52;\n\
    \        long quotient53;\n        long quotient54;\n        long quotient55;\n\
    \        long quotient56;\n        long quotient57;\n        long quotient58;\n\
    \        long quotient59;\n        long quotient60;\n        long quotient61;\n\
    \        long quotient62;\n        long quotient63;\n        long quotient64;\n\
    \        long quotient65;\n        long quotient66;\n        long quotient67;\n\
    \        long quotient68;\n        long quotient69;\n        long quotient70;\n\
    \        long quotient71;\n        long quotient72;\n        long quotient73\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpk7oyyv9j.java:90: error: ';' expected\n        long quotient73\n\
    \                       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit;\n        long remainder;\n        long remainder2;\n        long remainder3;\n\
    \        long remainder4;\n        long remainder5;\n        long remainder6;\n\
    \        long remainder7;\n        long remainder8;\n        long remainder9;\n\
    \        long remainder10;\n        long remainder11;\n        long remainder12;\n\
    \        long remainder13;\n        long remainder14;\n        long remainder15;\n\
    \        long remainder16;\n        long remainder17;\n        long remainder18;\n\
    \        long remainder19;\n        long remainder20;\n        long remainder21;\n\
    \        long remainder22;\n        long remainder23;\n        long remainder24;\n\
    \        long remainder25;\n        long remainder26;\n        long remainder27;\n\
    \        long remainder28;\n        long remainder29;\n        long remainder30;\n\
    \        long remainder31;\n        long remainder32;\n        long remainder33;\n\
    \        long remainder34;\n        long remainder35;\n        long remainder36;\n\
    \        long remainder37;\n        long remainder38;\n        long remainder39;\n\
    \        long remainder40;\n        long remainder41;\n        long remainder42;\n\
    \        long remainder43;\n        long remainder44;\n        long remainder45;\n\
    \        long remainder46;\n        long remainder47;\n        long remainder48;\n\
    \        long remainder49;\n        long remainder50;\n        long remainder51;\n\
    \        long remainder52;\n        long remainder53;\n        long remainder54;\n\
    \        long remainder55;\n        long remainder56;\n        long remainder57;\n\
    \        long remainder58;\n        long remainder59;\n        long remainder60;\n\
    \        long remainder61;\n        long remainder62;\n        long remainder63;\n\
    \        long remainder64;\n        long remainder65;\n        long remainder66;\n\
    \        long remainder67;\n        long remainder68;\n        long remainder69;\n\
    \        long remainder70;\n        long remainder71;\n        long remainder72;\n\
    \        long remainder73;\n        long remainder74;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpf_h5_l94.java:90: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpf_h5_l94.java:90: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long remainder2 = 0;\n        long temp2 = 0;\n\
    \        long count2 = 0;\n        long remainder3 = 0;\n        long temp3 =\
    \ 0;\n        long count3 = 0;\n        long remainder4 = 0;\n        long temp4\
    \ = 0;\n        long count4 = 0;\n        long remainder5 = 0;\n        long temp5\
    \ = 0;\n        long count5 = 0;\n        long remainder6 = 0;\n        long temp6\
    \ = 0;\n        long count6 = 0;\n        long remainder7 = 0;\n        long temp7\
    \ = 0;\n        long count7 = 0;\n        long remainder8 = 0;\n        long temp8\
    \ = 0;\n        long count8 = 0;\n        long remainder9 = 0;\n        long temp9\
    \ = 0;\n        long count9 = 0;\n        long remainder10 = 0;\n        long\
    \ temp10 = 0;\n        long count10 = 0;\n        long remainder11 = 0;\n    \
    \    long temp11 = 0;\n        long count11 = 0;\n        long remainder12 = 0;\n\
    \        long temp12 = 0;\n        long count12 = 0;\n        long remainder13\
    \ = 0;\n        long temp13 = 0;\n        long count13 = 0;\n        long remainder14\
    \ = 0;\n        long temp14 = 0;\n        long count14 = 0;\n        long remainder15\
    \ = 0;\n        long temp15 = 0;\n        long count15 = 0;\n        long remainder16\
    \ = 0;\n        long temp16 = 0;\n        long count16 = 0;\n        long remainder17\
    \ = 0;\n        long temp17 = 0;\n        long count17 = 0;\n        long remainder18\
    \ = 0;\n        long temp18 = 0;\n        long count18 = 0;\n        long remainder19\
    \ = 0;\n        long temp19 = 0;\n        long count19 = 0;\n        long remainder20\
    \ = 0;\n        long temp20 = 0;\n        long count20 = 0;\n        long remainder21\
    \ = 0;\n        long temp21 = 0;\n        long count21 = 0;\n        long remainder22\
    \ = 0;\n        long temp22 = 0;\n        long count22 = 0;\n        long remainder23\
    \ = 0;\n        long temp23 = 0;\n        long count23 = 0;\n        long remainder24\
    \ = 0;\n        long temp24 = 0;\n        long count24 = 0;\n        long remainder25\
    \ = 0;\n        long temp25 = 0;\n        long count25 = 0;\n        long remainder26\
    \ = 0;\n        long temp26 = 0;\n        long count26 = 0;\n        long remainder27\
    \ = 0;\n        long temp27 = 0;\n        long count27 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpa0lg4gap.java:99: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long sum = 0;\n\
    \        long count = 0;\n        long temp = 0;\n        long temp2 = 0;\n  \
    \      long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n   \
    \     long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n    \
    \    long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n   \
    \     long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n \
    \       long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmplny0dhwu.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = 0;\n        long quotient = 0;\n        long\
    \ tempNum = num;\n        while(tempNum > 0) {\n            remainder = tempNum\
    \ % 10;\n            quotient = tempNum / 10;\n            if(remainder % 2 ==\
    \ 0) {\n                evenCount++;\n            }\n            else {\n    \
    \            oddCount++;\n            }\n            tempNum = quotient;\n   \
    \     }\n        return new Pair<>(evenCount, oddCount);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long quotient;\n      \
    \  long remainder2;\n        long quotient2;\n        long remainder3;\n     \
    \   long quotient3;\n        long remainder4;\n        long quotient4;\n     \
    \   long remainder5;\n        long quotient5;\n        long remainder6;\n    \
    \    long quotient6;\n        long remainder7;\n        long quotient7;\n    \
    \    long remainder8;\n        long quotient8;\n        long remainder9;\n   \
    \     long quotient9;\n        long remainder10;\n        long quotient10;\n \
    \       long remainder11;\n        long quotient11;\n        long remainder12;\n\
    \        long quotient12;\n        long remainder13;\n        long quotient13;\n\
    \        long remainder14;\n        long quotient14;\n        long remainder15;\n\
    \        long quotient15;\n        long remainder16;\n        long quotient16;\n\
    \        long remainder17;\n        long quotient17;\n        long remainder18;\n\
    \        long quotient18;\n        long remainder19;\n        long quotient19;\n\
    \        long remainder20;\n        long quotient20;\n        long remainder21;\n\
    \        long quotient21;\n        long remainder22;\n        long quotient22;\n\
    \        long remainder23;\n        long quotient23;\n        long remainder24;\n\
    \        long quotient24;\n        long remainder25;\n        long quotient25;\n\
    \        long remainder26;\n        long quotient26;\n        long remainder27;\n\
    \        long quotient27;\n        long remainder28;\n        long quotient28;\n\
    \        long remainder29;\n        long quotient29;\n        long remainder30;\n\
    \        long quotient30;\n        long remainder31;\n        long quotient31;\n\
    \        long remainder32;\n        long quotient32;\n        long remainder33;\n\
    \        long quotient33;\n        long remainder34;\n        long quotient34;\n\
    \        long remainder35;\n        long quotient35;\n        long remainder36;\n\
    \        long quotient36;\n        long remainder37;\n        long quotient37;\n\
    \        long remainder38;\n        long quotient38;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpngh_52wh.java:94: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long quotient;\n\
    \        long temp;\n        long sum;\n        long count = 0;\n        long\
    \ digitCount = 0;\n        long remainderCount = 0;\n        long quotientCount\
    \ = 0;\n        long tempCount = 0;\n        long sumCount = 0;\n        long\
    \ digitCountCount = 0;\n        long remainderCountCount = 0;\n        long quotientCountCount\
    \ = 0;\n        long tempCountCount = 0;\n        long sumCountCount = 0;\n  \
    \      long digitCountCountCount = 0;\n        long remainderCountCountCount =\
    \ 0;\n        long quotientCountCountCount = 0;\n        long tempCountCountCount\
    \ = 0;\n        long sumCountCountCount = 0;\n        long digitCountCountCountCount\
    \ = 0;\n        long remainderCountCountCountCount = 0;\n        long quotientCountCountCountCount\
    \ = 0;\n        long tempCountCountCountCount = 0;\n        long sumCountCountCountCount\
    \ = 0;\n        long digitCountCountCountCountCount = 0;\n        long remainderCountCountCountCountCount\
    \ = 0;\n        long quotientCountCountCountCountCount = 0;\n        long tempCountCountCountCountCount\
    \ = 0;\n        long sumCountCountCountCountCount = 0;\n        long digitCountCountCountCountCountCount\
    \ = 0;\n        long remainderCountCountCountCountCountCountCount = 0;\n     \
    \   long quotientCountCountCountCountCountCountCount = 0;\n        long tempCountCountCountCountCountCountCount\
    \ = 0;\n        long sumCountCountCountCountCountCountCount = 0;\n        long\
    \ digitCountCountCountCountCountCountCountCount = 0;\n        long remainderCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long quotientCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long tempCountCountCountCountCountCountCountCountCountCount =\
    \ 0;\n        long sumCountCountCountCountCountCountCountCountCountCount = 0;\n\
    \        long digitCountCountCountCountCountCountCountCountCountCount = 0;\n \
    \       long remainderCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long quotientCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long tempCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long sumCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long remainderCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long quotientCount\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpgsiv8tfb.java:64: error: ';' expected\n        long quotientCount\n\
    \                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = num;\n        while (digit > 0) {\n            digit = digit\
    \ / 10;\n            even++;\n        }\n        while (digit > 0) {\n       \
    \     digit = digit / 10;\n            odd++;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpggdvpmwe.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ n = Math.abs(num);\n        long digit = n;\n        while (digit > 0) {\n \
    \           long remainder = digit % 10;\n            if (remainder == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            digit = digit / 10;\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp7u1aht7g.java:26: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long temp = num;\n        while (temp != 0) {\n            long\
    \ digit = temp % 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n          \
    \  temp /= 10;\n        }\n        return Pair.of(evenCount, oddCount);\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpxl4h3x0p.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmph9cm6egj.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long count = 0;\n\
    \        while (num > 0) {\n            digit = num % 10;\n            num = num\
    \ / 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n        }\n        return\
    \ new Pair<>(even, odd);\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long count = 0;\n\
    \        long digitCount = 0;\n        long remainderCount = 0;\n        long\
    \ digitCountEven = 0;\n        long digitCountOdd = 0;\n        long remainderCountEven\
    \ = 0;\n        long remainderCountOdd = 0;\n        long digitEven = 0;\n   \
    \     long digitOdd = 0;\n        long remainderEven = 0;\n        long remainderOdd\
    \ = 0;\n        long digitEvenCount = 0;\n        long digitOddCount = 0;\n  \
    \      long remainderEvenCount = 0;\n        long remainderOddCount = 0;\n   \
    \     long digitEvenCountEven = 0;\n        long digitEvenCountOdd = 0;\n    \
    \    long remainderEvenCountEven = 0;\n        long remainderEvenCountOdd = 0;\n\
    \        long digitOddCountEven = 0;\n        long digitOddCountOdd = 0;\n   \
    \     long remainderOddCountEven = 0;\n        long remainderOddCountOdd = 0;\n\
    \        long digitEvenEven = 0;\n        long digitEvenOdd = 0;\n        long\
    \ remainderEvenEven = 0;\n        long remainderEvenOdd = 0;\n        long digitOddEven\
    \ = 0;\n        long digitOddOdd = 0;\n        long remainderOddEven = 0;\n  \
    \      long remainderOddOdd = 0;\n        long digitEvenEvenCount = 0;\n     \
    \   long digitEvenOddCount = 0;\n        long remainderEvenEvenCount = 0;\n  \
    \      long remainderEvenOddCount = 0;\n        long digitOddEvenCount = 0;\n\
    \        long digitOddOddCount = 0;\n        long remainderOddEvenCount = 0;\n\
    \        long remainderOddOddCount = 0;\n        long digitEvenEvenCountEven =\
    \ 0;\n        long digitEvenEvenCountOdd = 0;\n        long remainderEvenEvenCountEven\
    \ = 0;\n        long remainderEvenEvenCountOdd = 0;\n        long digitOddEvenCountEven\
    \ = 0;\n        long digitOddEvenCountOdd = 0;\n        long remainderOddEvenCountEven\
    \ = 0;\n        long remainderOddEvenCountOdd = 0;\n        long digitEvenOddCountEven\
    \ = 0;\n        long digitEvenOddCountOdd = 0;\n        long remainderEvenOddCountEven\
    \ = 0;\n        long remainderEvenOddCountOdd = 0;\n        long digitOddOddCountEven\
    \ = 0;\n        long digitOddOddCountOdd = 0;\n        long remainderOddOddCountEven\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpi1_8j7ap.java:72: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long evenCount = 0;\n        long\
    \ oddCount = 0;\n        long digitCountEven = 0;\n        long digitCountOdd\
    \ = 0;\n        long remainderCountEven = 0;\n        long remainderCountOdd =\
    \ 0;\n        long tempCountEven = 0;\n        long tempCountOdd = 0;\n      \
    \  long evenCountEven = 0;\n        long evenCountOdd = 0;\n        long oddCountEven\
    \ = 0;\n        long oddCountOdd = 0;\n        long digitCountEvenOdd = 0;\n \
    \       long digitCountOddEven = 0;\n        long remainderCountEvenOdd = 0;\n\
    \        long remainderCountOddEven = 0;\n        long tempCountEvenOdd = 0;\n\
    \        long tempCountOddEven = 0;\n        long evenCountEvenOdd = 0;\n    \
    \    long evenCountOddEven = 0;\n        long oddCountEvenOdd = 0;\n        long\
    \ oddCountOddEven = 0;\n        long digitCountEvenOddEven = 0;\n        long\
    \ digitCountOddEvenOdd = 0;\n        long remainderCountEvenOddEven = 0;\n   \
    \     long remainderCountOddEvenOdd = 0;\n        long tempCountEvenOddEven =\
    \ 0;\n        long tempCountOddEvenOdd = 0;\n        long evenCountEvenOddEven\
    \ = 0;\n        long evenCountOddEvenOdd = 0;\n        long oddCountEvenOddEven\
    \ = 0;\n        long oddCountOddEvenOdd = 0;\n        long digitCountEvenOddEvenOdd\
    \ = 0;\n        long digitCountOddEvenOddOdd = 0;\n        long remainderCountEvenOddEvenOdd\
    \ = 0;\n        long remainderCountOddEvenOddOdd = 0;\n        long tempCountEvenOddEvenOdd\
    \ = 0;\n        long tempCountOddEvenOddOdd = 0;\n        long evenCountEvenOddEvenOdd\
    \ = 0;\n        long evenCountOddEvenOddOdd = 0;\n        long oddCountEvenOddEvenOdd\
    \ = 0;\n        long oddCountOddEvenOddOdd = 0;\n        long digitCountEvenOddEvenOddOdd\
    \ = 0;\n        long digitCountOddEvenOddOddOdd = 0;\n        long remainderCountEvenOddEvenOddOdd\
    \ = 0;\n        long remainder\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp77mzyf2e.java:68: error: ';' expected\n        long remainder\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long remainder2;\n\
    \        long remainder3;\n        long remainder4;\n        long remainder5;\n\
    \        long remainder6;\n        long remainder7;\n        long remainder8;\n\
    \        long remainder9;\n        long remainder10;\n        long remainder11;\n\
    \        long remainder12;\n        long remainder13;\n        long remainder14;\n\
    \        long remainder15;\n        long remainder16;\n        long remainder17;\n\
    \        long remainder18;\n        long remainder19;\n        long remainder20;\n\
    \        long remainder21;\n        long remainder22;\n        long remainder23;\n\
    \        long remainder24;\n        long remainder25;\n        long remainder26;\n\
    \        long remainder27;\n        long remainder28;\n        long remainder29;\n\
    \        long remainder30;\n        long remainder31;\n        long remainder32;\n\
    \        long remainder33;\n        long remainder34;\n        long remainder35;\n\
    \        long remainder36;\n        long remainder37;\n        long remainder38;\n\
    \        long remainder39;\n        long remainder40;\n        long remainder41;\n\
    \        long remainder42;\n        long remainder43;\n        long remainder44;\n\
    \        long remainder45;\n        long remainder46;\n        long remainder47;\n\
    \        long remainder48;\n        long remainder49;\n        long remainder50;\n\
    \        long remainder51;\n        long remainder52;\n        long remainder53;\n\
    \        long remainder54;\n        long remainder55;\n        long remainder56;\n\
    \        long remainder57;\n        long remainder58;\n        long remainder59;\n\
    \        long remainder60;\n        long remainder61;\n        long remainder62;\n\
    \        long remainder63;\n        long remainder64;\n        long remainder65;\n\
    \        long remainder66;\n        long remainder67;\n        long remainder68;\n\
    \        long remainder69;\n        long remainder70;\n        long remainder71;\n\
    \        long remainder72;\n        long remainder73;\n        long remainder\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpe6vwub8f.java:90: error: ';' expected\n        long remainder\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        long lastDigit = num;\n       \
    \ while(lastDigit > 0) {\n            evenCount += lastDigit % 10;\n         \
    \   lastDigit = lastDigit / 10;\n        }\n        while(lastDigit > 0) {\n \
    \           oddCount += lastDigit % 10;\n            lastDigit = lastDigit / 10;\n\
    \        }\n        return new Pair<>(evenCount, oddCount);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            }\n \
    \           else {\n                odd++;\n            }\n            temp /=\
    \ 10;\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpjm9d9r2m.java:26: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit = digit / 10;\n            if (remainder % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n        }\n        return new Pair<>(even, odd);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = 0;\n        long remainder = 0;\n        long temp\
    \ = 0;\n        long count = 0;\n        long tempCount = 0;\n        long tempEvenCount\
    \ = 0;\n        long tempOddCount = 0;\n        long tempDigit = 0;\n        long\
    \ tempRemainder = 0;\n        long tempCount2 = 0;\n        long tempEvenCount2\
    \ = 0;\n        long tempOddCount2 = 0;\n        long tempDigit2 = 0;\n      \
    \  long tempRemainder2 = 0;\n        long tempCount3 = 0;\n        long tempEvenCount3\
    \ = 0;\n        long tempOddCount3 = 0;\n        long tempDigit3 = 0;\n      \
    \  long tempRemainder3 = 0;\n        long tempCount4 = 0;\n        long tempEvenCount4\
    \ = 0;\n        long tempOddCount4 = 0;\n        long tempDigit4 = 0;\n      \
    \  long tempRemainder4 = 0;\n        long tempCount5 = 0;\n        long tempEvenCount5\
    \ = 0;\n        long tempOddCount5 = 0;\n        long tempDigit5 = 0;\n      \
    \  long tempRemainder5 = 0;\n        long tempCount6 = 0;\n        long tempEvenCount6\
    \ = 0;\n        long tempOddCount6 = 0;\n        long tempDigit6 = 0;\n      \
    \  long tempRemainder6 = 0;\n        long tempCount7 = 0;\n        long tempEvenCount7\
    \ = 0;\n        long tempOddCount7 = 0;\n        long tempDigit7 = 0;\n      \
    \  long tempRemainder7 = 0;\n        long tempCount8 = 0;\n        long tempEvenCount8\
    \ = 0;\n        long tempOddCount8 = 0;\n        long tempDigit8 = 0;\n      \
    \  long tempRemainder8 = 0;\n        long tempCount9 = 0;\n        long tempEvenCount9\
    \ = 0;\n        long tempOddCount9 = 0;\n        long tempDigit9 = 0;\n      \
    \  long tempRemainder9 = 0;\n        long tempCount10 = 0;\n        long tempEvenCount10\
    \ = 0;\n        long tempOddCount10 = 0;\n        long tempDigit10 = 0;\n    \
    \    long tempRemainder10 = 0;\n        long tempCount11 = 0;\n        long tempEvenCount11\
    \ = 0;\n        long tempOddCount11 = 0;\n        long tempDigit11 = 0;\n    \
    \    long tempRemainder11 = 0;\n        long tempCount12 = 0;\n        long tempEvenCount12\
    \ = 0;\n        long tempOddCount12 = 0;\n        long tempDigit12 = 0;\n    \
    \    long tempRemainder12 = 0;\n        long tempCount13 = 0;\n        long tempEvenCount13\
    \ = 0;\n        long tempOddCount13 = 0;\n        long tempDigit13 = 0;\n    \
    \    long tempRemainder13\n    }\n    public static void main(String[] args) {\n\
    \    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp76c0rtw0.java:84: error: ';' expected\n        long tempRemainder13\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit;\n        long remainder;\n        long sum = 0;\n        long digitSum\
    \ = 0;\n        long product = 1;\n        long productSum = 0;\n        long\
    \ productEven = 0;\n        long productOdd = 0;\n        long productEvenSum\
    \ = 0;\n        long productOddSum = 0;\n        long productEvenProduct = 0;\n\
    \        long productOddProduct = 0;\n        long productEvenProductSum = 0;\n\
    \        long productOddProductSum = 0;\n        long productEvenProductProduct\
    \ = 0;\n        long productOddProductProduct = 0;\n        long productEvenProductProductSum\
    \ = 0;\n        long productOddProductProductSum = 0;\n        long productEvenProductProductProduct\
    \ = 0;\n        long productOddProductProductProduct = 0;\n        long productEvenProductProductProductSum\
    \ = 0;\n        long productOddProductProductProductSum = 0;\n        long productEvenProductProductProductProduct\
    \ = 0;\n        long productOddProductProductProductProduct = 0;\n        long\
    \ productEvenProductProductProductProductSum = 0;\n        long productOddProductProductProductProductSum\
    \ = 0;\n        long productEvenProductProductProductProductProduct = 0;\n   \
    \     long productOddProductProductProductProductProduct = 0;\n        long productEvenProductProductProductProductProductSum\
    \ = 0;\n        long productOddProductProductProductProductProductSum = 0;\n \
    \       long productEvenProductProductProductProductProductProduct = 0;\n    \
    \    long productOddProductProductProductProductProductProduct = 0;\n        long\
    \ productEvenProductProductProductProductProductProductSum = 0;\n        long\
    \ productOddProductProductProductProductProductSum = 0;\n        long productEvenProductProductProductProductProductProduct\
    \ = 0;\n        long productOddProductProductProductProductProductProduct = 0;\n\
    \        long productEvenProductProductProductProductProductProductSum = 0;\n\
    \        long productOddProductProductProductProductProductSum = 0;\n        long\
    \ productEvenProductProductProductProductProductProductProduct = 0;\n        long\
    \ productOddProductProductProductProductProductProduct = 0;\n        long productEvenProductProductProductProductProductProductSum\
    \ = 0;\n        long productOddProductProductProductProductProductSum = 0;\n \
    \       long productEvenProductProductProductProductProductProductProduct = 0;\n\
    \        long productOddProductProductProductProductProductProduct = 0;\n    \
    \    long productEvenProductProductProductProductProductProductSum = 0;\n    \
    \    long productOddProductProductProductProductProductSum = 0;\n        long\
    \ productEvenProductProductProductProductProductProductProduct = 0;\n        long\
    \ productOddProductProductProductProductProductProduct = 0;\n        long productEvenProductProductProductProductProductProductSum\
    \ = 0;\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpwgpi0r2n.java:48: error: variable productOddProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductSum\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:49: error: variable productEvenProductProductProductProductProductProduct\
    \ is already defined in method evenOddCount(long)\n        long productEvenProductProductProductProductProductProduct\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:50: error: variable productOddProductProductProductProductProductProduct\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductProduct\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:51: error: variable productEvenProductProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productEvenProductProductProductProductProductProductSum\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:52: error: variable productOddProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductSum\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:54: error: variable productOddProductProductProductProductProductProduct\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductProduct\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:55: error: variable productEvenProductProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productEvenProductProductProductProductProductProductSum\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:56: error: variable productOddProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductSum\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:57: error: variable productEvenProductProductProductProductProductProductProduct\
    \ is already defined in method evenOddCount(long)\n        long productEvenProductProductProductProductProductProductProduct\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:58: error: variable productOddProductProductProductProductProductProduct\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductProduct\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:59: error: variable productEvenProductProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productEvenProductProductProductProductProductProductSum\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:60: error: variable productOddProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductSum\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:61: error: variable productEvenProductProductProductProductProductProductProduct\
    \ is already defined in method evenOddCount(long)\n        long productEvenProductProductProductProductProductProductProduct\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:62: error: variable productOddProductProductProductProductProductProduct\
    \ is already defined in method evenOddCount(long)\n        long productOddProductProductProductProductProductProduct\
    \ = 0;\n             ^\n/tmp/tmpwgpi0r2n.java:63: error: variable productEvenProductProductProductProductProductProductSum\
    \ is already defined in method evenOddCount(long)\n        long productEvenProductProductProductProductProductProductSum\
    \ = 0;\n             ^\n15 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ new Pair<>(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit;\n        while (num > 0) {\n            digit = num % 10;\n         \
    \   if (digit % 2 == 0) {\n                even++;\n            } else {\n   \
    \             odd++;\n            }\n            num = num / 10;\n        }\n\
    \        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpobh7h88q.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp45oromr1.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ new Pair<>(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmplw0c65dg.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            if (remainder % 2 == 0) {\n                even++;\n    \
    \        }\n            else {\n                odd++;\n            }\n      \
    \      digit = digit / 10;\n        }\n        return Pair.of(even, odd);\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpcj_lj463.java:26: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long tempCount2 = 0;\n        long\
    \ tempCount3 = 0;\n        long tempCount4 = 0;\n        long tempCount5 = 0;\n\
    \        long tempCount6 = 0;\n        long tempCount7 = 0;\n        long tempCount8\
    \ = 0;\n        long tempCount9 = 0;\n        long tempCount10 = 0;\n        long\
    \ tempCount11 = 0;\n        long tempCount12 = 0;\n        long tempCount13 =\
    \ 0;\n        long tempCount14 = 0;\n        long tempCount15 = 0;\n        long\
    \ tempCount16 = 0;\n        long tempCount17 = 0;\n        long tempCount18 =\
    \ 0;\n        long tempCount19 = 0;\n        long tempCount20 = 0;\n        long\
    \ tempCount21 = 0;\n        long tempCount22 = 0;\n        long tempCount23 =\
    \ 0;\n        long tempCount24 = 0;\n        long tempCount25 = 0;\n        long\
    \ tempCount26 = 0;\n        long tempCount27 = 0;\n        long tempCount28 =\
    \ 0;\n        long tempCount29 = 0;\n        long tempCount30 = 0;\n        long\
    \ tempCount31 = 0;\n        long tempCount32 = 0;\n        long tempCount33 =\
    \ 0;\n        long tempCount34 = 0;\n        long tempCount35 = 0;\n        long\
    \ tempCount36 = 0;\n        long tempCount37 = 0;\n        long tempCount38 =\
    \ 0;\n        long tempCount39 = 0;\n        long tempCount40 = 0;\n        long\
    \ tempCount41 = 0;\n        long tempCount42 = 0;\n        long tempCount43 =\
    \ 0;\n        long tempCount44 = 0;\n        long tempCount45 = 0;\n        long\
    \ tempCount46 = 0;\n        long tempCount47 = 0;\n        long tempCount48 =\
    \ 0;\n        long tempCount49 = 0;\n        long tempCount50 = 0;\n        long\
    \ tempCount51 = 0;\n        long tempCount52 = 0;\n        long tempCount53 =\
    \ 0;\n        long tempCount54 = 0;\n        long tempCount55 = 0;\n        long\
    \ tempCount56 = 0;\n        long tempCount57 = 0;\n        long tempCount58 =\
    \ 0;\n        long tempCount59 = 0;\n        long tempCount60 = 0;\n        long\
    \ tempCount61 = 0;\n        long tempCount62 = 0;\n        long tempCount63 =\
    \ 0;\n        long tempCount64 = 0;\n        long tempCount65 = 0;\n        long\
    \ tempCount66 = 0;\n        long tempCount67 = 0;\n        long temp\n    }\n\
    \    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpbp8lkqbq.java:89: error: ';' expected\n        long temp\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            if (remainder % 2 == 0) {\n                even++;\n    \
    \        }\n            else {\n                odd++;\n            }\n      \
    \      digit = digit / 10;\n        }\n        return new Pair<>(even, odd);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long sum = 0;\n\
    \        long temp = 0;\n        long count = 0;\n        while (num !=  0) {\n\
    \            digit = num % 10;\n            sum += digit;\n            num = num\
    \ / 10;\n        }\n        temp = sum;\n        while (temp != 0) {\n       \
    \     digit = temp % 10;\n            sum += digit;\n            temp = temp /\
    \ 10;\n        }\n        temp = sum;\n        while (temp != 0) {\n         \
    \   digit = temp % 10;\n            if (digit % 2 == 0) {\n                even++;\n\
    \            }\n            else {\n                odd++;\n            }\n  \
    \          temp = temp / 10;\n        }\n        Pair<Long, Long> pair = new Pair<>(even,\
    \ odd);\n        return pair;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit = digit / 10;\n            if (remainder % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpn_o5dcp3.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long tempEven = 0;\n        long\
    \ tempOdd = 0;\n        long tempDigit = 0;\n        long tempRemainder = 0;\n\
    \        long tempCountEven = 0;\n        long tempCountOdd = 0;\n        long\
    \ tempDigitCount = 0;\n        long tempRemainderCount = 0;\n        long tempCountEvenOdd\
    \ = 0;\n        long tempCountOddEven = 0;\n        long tempDigitCountEven =\
    \ 0;\n        long tempDigitCountOdd = 0;\n        long tempRemainderCountEven\
    \ = 0;\n        long tempRemainderCountOdd = 0;\n        long tempCountEvenOddEven\
    \ = 0;\n        long tempCountOddEvenOdd = 0;\n        long tempDigitCountEvenOdd\
    \ = 0;\n        long tempDigitCountOddEven = 0;\n        long tempRemainderCountEvenOdd\
    \ = 0;\n        long tempRemainderCountOddEven = 0;\n        long tempCountEvenOddEvenOdd\
    \ = 0;\n        long tempCountOddEvenOddEven = 0;\n        long tempDigitCountEvenOddEven\
    \ = 0;\n        long tempDigitCountOddEvenOdd = 0;\n        long tempRemainderCountEvenOddOdd\
    \ = 0;\n        long tempRemainderCountOddEvenOdd = 0;\n        long tempCountEvenOddEvenOddEven\
    \ = 0;\n        long tempCountOddEvenOddEvenOdd = 0;\n        long tempDigitCountEvenOddEvenOdd\
    \ = 0;\n        long tempDigitCountOddEvenOddOdd = 0;\n        long tempRemainderCountEvenOddOddEven\
    \ = 0;\n        long tempRemainderCountOddEvenOddOdd = 0;\n        long tempCountEvenOddEvenOddEvenOdd\
    \ = 0;\n        long tempCountOddEvenOddEvenOddOdd = 0;\n        long tempDigitCountEvenOddEvenOddOdd\
    \ = 0;\n        long tempDigitCountOddEvenOddOddOdd = 0;\n        long tempRemainderCountEvenOddOddEvenOdd\
    \ = 0;\n        long tempRemainderCountOddEvenOddOddOdd = 0;\n        long tempCountEvenOddEvenOddEvenOddOdd\
    \ = 0;\n        long tempCountOddEvenOddEvenOddOddOdd = 0;\n        long tempDigit\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpy_0s9k5l.java:63: error: ';' expected\n        long tempDigit\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit;\n        long remainder;\n        long temp;\n        long count = 0;\n\
    \        long remainder2;\n        long remainder3;\n        long remainder4;\n\
    \        long remainder5;\n        long remainder6;\n        long remainder7;\n\
    \        long remainder8;\n        long remainder9;\n        long remainder10;\n\
    \        long remainder11;\n        long remainder12;\n        long remainder13;\n\
    \        long remainder14;\n        long remainder15;\n        long remainder16;\n\
    \        long remainder17;\n        long remainder18;\n        long remainder19;\n\
    \        long remainder20;\n        long remainder21;\n        long remainder22;\n\
    \        long remainder23;\n        long remainder24;\n        long remainder25;\n\
    \        long remainder26;\n        long remainder27;\n        long remainder28;\n\
    \        long remainder29;\n        long remainder30;\n        long remainder31;\n\
    \        long remainder32;\n        long remainder33;\n        long remainder34;\n\
    \        long remainder35;\n        long remainder36;\n        long remainder37;\n\
    \        long remainder38;\n        long remainder39;\n        long remainder40;\n\
    \        long remainder41;\n        long remainder42;\n        long remainder43;\n\
    \        long remainder44;\n        long remainder45;\n        long remainder46;\n\
    \        long remainder47;\n        long remainder48;\n        long remainder49;\n\
    \        long remainder50;\n        long remainder51;\n        long remainder52;\n\
    \        long remainder53;\n        long remainder54;\n        long remainder55;\n\
    \        long remainder56;\n        long remainder57;\n        long remainder58;\n\
    \        long remainder59;\n        long remainder60;\n        long remainder61;\n\
    \        long remainder62;\n        long remainder63;\n        long remainder64;\n\
    \        long remainder65;\n        long remainder66;\n        long remainder67;\n\
    \        long remainder68;\n        long remainder69;\n        long remainder70;\n\
    \        long remainder71;\n        long remainder72;\n        long remainder73;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpyrj331s1.java:92: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit = digit / 10;\n            if (remainder % 2 == 0)\
    \ {\n                even++;\n            } else {\n                odd++;\n \
    \           }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpimi52x_p.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = 0;\n        long quotient = 0;\n        long\
    \ quotient2 = 0;\n        long quotient3 = 0;\n        long quotient4 = 0;\n \
    \       long quotient5 = 0;\n        long quotient6 = 0;\n        long quotient7\
    \ = 0;\n        long quotient8 = 0;\n        long quotient9 = 0;\n        long\
    \ quotient10 = 0;\n        long quotient11 = 0;\n        long quotient12 = 0;\n\
    \        long quotient13 = 0;\n        long quotient14 = 0;\n        long quotient15\
    \ = 0;\n        long quotient16 = 0;\n        long quotient17 = 0;\n        long\
    \ quotient18 = 0;\n        long quotient19 = 0;\n        long quotient20 = 0;\n\
    \        long quotient21 = 0;\n        long quotient22 = 0;\n        long quotient23\
    \ = 0;\n        long quotient24 = 0;\n        long quotient25 = 0;\n        long\
    \ quotient26 = 0;\n        long quotient27 = 0;\n        long quotient28 = 0;\n\
    \        long quotient29 = 0;\n        long quotient30 = 0;\n        long quotient31\
    \ = 0;\n        long quotient32 = 0;\n        long quotient33 = 0;\n        long\
    \ quotient34 = 0;\n        long quotient35 = 0;\n        long quotient36 = 0;\n\
    \        long quotient37 = 0;\n        long quotient38 = 0;\n        long quotient39\
    \ = 0;\n        long quotient40 = 0;\n        long quotient41 = 0;\n        long\
    \ quotient42 = 0;\n        long quotient43 = 0;\n        long quotient44 = 0;\n\
    \        long quotient45 = 0;\n        long quotient46 = 0;\n        long quotient47\
    \ = 0;\n        long quotient48 = 0;\n        long quotient49 = 0;\n        long\
    \ quotient50 = 0;\n        long quotient51 = 0;\n        long quotient52 = 0;\n\
    \        long quotient53 = 0;\n        long quotient54 = 0;\n        long quotient55\
    \ = 0;\n        long quotient56 = 0;\n        long quotient57 = 0;\n        long\
    \ quotient58 = 0;\n        long quotient59 = 0;\n        long quotient60 = 0;\n\
    \        long quotient61 = 0;\n        long quotient62 = 0;\n        long quotient63\
    \ = 0;\n        long quotient64 = 0;\n        long quotient65 = 0;\n        long\
    \ quotient66 = 0;\n        long quotient67 = 0;\n        long quotient68 = 0;\n\
    \        long quotient69 = 0;\n        long quotient70 = 0;\n        long quotient71\
    \ = 0;\n        long \n    }\n    public static void main(String[] args) {\n \
    \   assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpo86qn_j7.java:88: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpo86qn_j7.java:88: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = 0;\n        long remainder = 0;\n        long temp\
    \ = 0;\n        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long evenCountCount = 0;\n      \
    \  long oddCountCount = 0;\n        long digitCountCount = 0;\n        long remainderCountCount\
    \ = 0;\n        long tempCountCount = 0;\n        long evenCountCountCount = 0;\n\
    \        long oddCountCountCount = 0;\n        long digitCountCountCount = 0;\n\
    \        long remainderCountCountCount = 0;\n        long tempCountCountCount\
    \ = 0;\n        long evenCountCountCountCount = 0;\n        long oddCountCountCountCount\
    \ = 0;\n        long digitCountCountCountCount = 0;\n        long remainderCountCountCountCount\
    \ = 0;\n        long tempCountCountCountCount = 0;\n        long evenCountCountCountCountCount\
    \ = 0;\n        long oddCountCountCountCountCount = 0;\n        long digitCountCountCountCountCount\
    \ = 0;\n        long remainderCountCountCountCountCount = 0;\n        long tempCountCountCountCount\
    \ = 0;\n        long evenCountCountCountCountCountCount = 0;\n        long oddCountCountCountCountCountCountCount\
    \ = 0;\n        long digitCountCountCountCountCountCountCount = 0;\n        long\
    \ remainderCountCountCountCountCountCountCount = 0;\n        long tempCountCountCountCountCountCountCount\
    \ = 0;\n        long evenCountCountCountCountCountCountCountCount = 0;\n     \
    \   long oddCountCountCountCountCountCountCountCountCount = 0;\n        long digitCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long remainderCountCountCountCountCountCountCountCountCount =\
    \ 0;\n        long tempCountCountCountCountCountCountCountCountCountCount = 0;\n\
    \        long evenCountCountCountCountCountCountCountCountCountCount = 0;\n  \
    \      long oddCountCountCountCountCountCountCountCountCountCountCount = 0;\n\
    \        long digitCountCountCountCountCountCountCountCountCountCountCount = 0;\n\
    \        long remainderCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long tempCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long evenCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long oddCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long digitCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long remainderCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = 0;\n        long temp\n    }\n    public static void main(String[] args) {\n\
    \    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpr2qfvibp.java:62: error: ';' expected\n        long temp\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long evenCount = 0;\n        long\
    \ oddCount = 0;\n        long digitCountEven = 0;\n        long digitCountOdd\
    \ = 0;\n        long remainderCountEven = 0;\n        long remainderCountOdd =\
    \ 0;\n        long tempCountEven = 0;\n        long tempCountOdd = 0;\n      \
    \  long evenCountEven = 0;\n        long evenCountOdd = 0;\n        long oddCountEven\
    \ = 0;\n        long oddCountOdd = 0;\n        long digitCountEvenOdd = 0;\n \
    \       long digitCountOddEven = 0;\n        long remainderCountEvenOdd = 0;\n\
    \        long remainderCountOddEven = 0;\n        long tempCountEvenOdd = 0;\n\
    \        long tempCountOddEven = 0;\n        long evenCountEvenOdd = 0;\n    \
    \    long evenCountOddEven = 0;\n        long oddCountEvenOdd = 0;\n        long\
    \ oddCountOddEven = 0;\n        long digitCountEvenOddOdd = 0;\n        long digitCountOddEvenOdd\
    \ = 0;\n        long remainderCountEvenOddOdd = 0;\n        long remainderCountOddEvenOdd\
    \ = 0;\n        long tempCountEvenOddOdd = 0;\n        long tempCountOddEvenOdd\
    \ = 0;\n        long evenCountEvenOddOdd = 0;\n        long evenCountOddEvenOdd\
    \ = 0;\n        long oddCountEvenOddOdd = 0;\n        long oddCountOddEvenOdd\
    \ = 0;\n        long digitCountEvenOddOddEven = 0;\n        long digitCountOddEvenOddOdd\
    \ = 0;\n        long remainderCountEvenOddOddEven = 0;\n        long remainderCountOddEvenOddOdd\
    \ = 0;\n        long tempCountEvenOddOddEven = 0;\n        long tempCountOddEvenOddOdd\
    \ = 0;\n        long evenCountEvenOddOddEven = 0;\n        long evenCountOddEvenOddOdd\
    \ = 0;\n        long oddCountEvenOddOddEven = 0;\n        long oddCountOddEvenOddOdd\
    \ = 0;\n        long digitCountEvenOddOddOddEven = 0;\n        long digitCountOddEvenOddOddOdd\
    \ = 0;\n        long remainderCountEvenOddOddOddEven = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpvck9z99o.java:68: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long count = 0;\n\
    \        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n  \
    \      long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n   \
    \     long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n    \
    \    long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n  \
    \      long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp9jjslbci.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = num;\n        while (digit > 0) {\n            digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            num = num /\
    \ 10;\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmphhwwl6hp.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num = num / 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long remainder2;\n\
    \        long remainder3;\n        long remainder4;\n        long remainder5;\n\
    \        long remainder6;\n        long remainder7;\n        long remainder8;\n\
    \        long remainder9;\n        long remainder10;\n        long remainder11;\n\
    \        long remainder12;\n        long remainder13;\n        long remainder14;\n\
    \        long remainder15;\n        long remainder16;\n        long remainder17;\n\
    \        long remainder18;\n        long remainder19;\n        long remainder20;\n\
    \        long remainder21;\n        long remainder22;\n        long remainder23;\n\
    \        long remainder24;\n        long remainder25;\n        long remainder26;\n\
    \        long remainder27;\n        long remainder28;\n        long remainder29;\n\
    \        long remainder30;\n        long remainder31;\n        long remainder32;\n\
    \        long remainder33;\n        long remainder34;\n        long remainder35;\n\
    \        long remainder36;\n        long remainder37;\n        long remainder38;\n\
    \        long remainder39;\n        long remainder40;\n        long remainder41;\n\
    \        long remainder42;\n        long remainder43;\n        long remainder44;\n\
    \        long remainder45;\n        long remainder46;\n        long remainder47;\n\
    \        long remainder48;\n        long remainder49;\n        long remainder50;\n\
    \        long remainder51;\n        long remainder52;\n        long remainder53;\n\
    \        long remainder54;\n        long remainder55;\n        long remainder56;\n\
    \        long remainder57;\n        long remainder58;\n        long remainder59;\n\
    \        long remainder60;\n        long remainder61;\n        long remainder62;\n\
    \        long remainder63;\n        long remainder64;\n        long remainder65;\n\
    \        long remainder66;\n        long remainder67;\n        long remainder68;\n\
    \        long remainder69;\n        long remainder70;\n        long remainder71;\n\
    \        long remainder72;\n        long remainder73;\n        long remainder\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpdmfrcc23.java:90: error: ';' expected\n        long remainder\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long tempNum = num;\n        while (tempNum > 0) {\n         \
    \   long digit = tempNum % 10;\n            if (digit % 2 == 0) {\n          \
    \      evenCount++;\n            } else {\n                oddCount++;\n     \
    \       }\n            tempNum /= 10;\n        }\n        return Pair.of(evenCount,\
    \ oddCount);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpw908iai3.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long quotient;\n\
    \        long quotient2;\n        long quotient3;\n        long quotient4;\n \
    \       long quotient5;\n        long quotient6;\n        long quotient7;\n  \
    \      long quotient8;\n        long quotient9;\n        long quotient10;\n  \
    \      long quotient11;\n        long quotient12;\n        long quotient13;\n\
    \        long quotient14;\n        long quotient15;\n        long quotient16;\n\
    \        long quotient17;\n        long quotient18;\n        long quotient19;\n\
    \        long quotient20;\n        long quotient21;\n        long quotient22;\n\
    \        long quotient23;\n        long quotient24;\n        long quotient25;\n\
    \        long quotient26;\n        long quotient27;\n        long quotient28;\n\
    \        long quotient29;\n        long quotient30;\n        long quotient31;\n\
    \        long quotient32;\n        long quotient33;\n        long quotient34;\n\
    \        long quotient35;\n        long quotient36;\n        long quotient37;\n\
    \        long quotient38;\n        long quotient39;\n        long quotient40;\n\
    \        long quotient41;\n        long quotient42;\n        long quotient43;\n\
    \        long quotient44;\n        long quotient45;\n        long quotient46;\n\
    \        long quotient47;\n        long quotient48;\n        long quotient49;\n\
    \        long quotient50;\n        long quotient51;\n        long quotient52;\n\
    \        long quotient53;\n        long quotient54;\n        long quotient55;\n\
    \        long quotient56;\n        long quotient57;\n        long quotient58;\n\
    \        long quotient59;\n        long quotient60;\n        long quotient61;\n\
    \        long quotient62;\n        long quotient63;\n        long quotient64;\n\
    \        long quotient65;\n        long quotient66;\n        long quotient67;\n\
    \        long quotient68;\n        long quotient69;\n        long quotient70;\n\
    \        long quotient71;\n        long quotient72;\n        long quotient73\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp1hypww_x.java:90: error: ';' expected\n        long quotient73\n\
    \                       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long count = 0;\n        while(num > 0) {\n            long digit = num\
    \ % 10;\n            num = num / 10;\n            if(digit % 2 == 0) {\n     \
    \           even++;\n            } else {\n                odd++;\n          \
    \  }\n            count++;\n        }\n        return new Pair<>(even, odd);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder;\n        long quotient;\n        long temp;\n\
    \        long digit;\n        long sum;\n        long temp2;\n        long temp3;\n\
    \        long temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n\
    \        long temp8;\n        long temp9;\n        long temp10;\n        long\
    \ temp11;\n        long temp12;\n        long temp13;\n        long temp14;\n\
    \        long temp15;\n        long temp16;\n        long temp17;\n        long\
    \ temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n\
    \        long temp22;\n        long temp23;\n        long temp24;\n        long\
    \ temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n\
    \        long temp29;\n        long temp30;\n        long temp31;\n        long\
    \ temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n\
    \        long temp36;\n        long temp37;\n        long temp38;\n        long\
    \ temp39;\n        long temp40;\n        long temp41;\n        long temp42;\n\
    \        long temp43;\n        long temp44;\n        long temp45;\n        long\
    \ temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n\
    \        long temp50;\n        long temp51;\n        long temp52;\n        long\
    \ temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n\
    \        long temp57;\n        long temp58;\n        long temp59;\n        long\
    \ temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n\
    \        long temp64;\n        long temp65;\n        long temp66;\n        long\
    \ temp67;\n        long temp68;\n        long temp69;\n        long temp70;\n\
    \        long temp71;\n        long temp72;\n        long temp73;\n        long\
    \ temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n\
    \        long temp78;\n        long temp79;\n        long temp80;\n        long\
    \ temp81;\n        long temp82;\n        long temp83;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpyca5o2o5.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83\n    }\n    public static void main(String[] args) {\n  \
    \  assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmprn4l071k.java:100: error: ';' expected\n        long temp83\n \
    \                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ n = Math.abs(num);\n        long d = 1;\n        while (n > 0) {\n         \
    \   long tmp = n % 10;\n            n /= 10;\n            if (tmp % 2 == 0) {\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n            d *= 10;\n        }\n        return new Pair<>(even, odd);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            if (remainder == 0) {\n                even++;\n        \
    \    } else {\n                odd++;\n            }\n            digit /= 10;\n\
    \        }\n        return new Pair<>(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            }\n            else {\n               \
    \ oddCount++;\n            }\n            remainder = remainder / 10;\n      \
    \  }\n        return new Pair<>(evenCount, oddCount);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = 0;\n        long tempNum = num;\n        while\
    \ (tempNum != 0) {\n            remainder = tempNum % 10;\n            tempNum\
    \ = tempNum / 10;\n            if (remainder % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n        }\n\
    \        return new Pair<>(evenCount, oddCount);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long remainder = num;\n        while (remainder > 0) {\n            long\
    \ digit = remainder % 10;\n            if (digit % 2 == 0) {\n               \
    \ even++;\n            } else {\n                odd++;\n            }\n     \
    \       remainder = remainder / 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long tempNum = num;\n        while (tempNum != 0) {\n        \
    \    tempNum = tempNum / 10;\n            evenCount++;\n        }\n        tempNum\
    \ = num;\n        while (tempNum != 0) {\n            tempNum = tempNum / 10;\n\
    \            oddCount++;\n        }\n        return new Pair<>(evenCount, oddCount);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long quotient;\n\
    \        long quotientRemainder;\n        long quotientRemainder2;\n        long\
    \ quotientRemainder3;\n        long quotientRemainder4;\n        long quotientRemainder5;\n\
    \        long quotientRemainder6;\n        long quotientRemainder7;\n        long\
    \ quotientRemainder8;\n        long quotientRemainder9;\n        long quotientRemainder10;\n\
    \        long quotientRemainder11;\n        long quotientRemainder12;\n      \
    \  long quotientRemainder13;\n        long quotientRemainder14;\n        long\
    \ quotientRemainder15;\n        long quotientRemainder16;\n        long quotientRemainder17;\n\
    \        long quotientRemainder18;\n        long quotientRemainder19;\n      \
    \  long quotientRemainder20;\n        long quotientRemainder21;\n        long\
    \ quotientRemainder22;\n        long quotientRemainder23;\n        long quotientRemainder24;\n\
    \        long quotientRemainder25;\n        long quotientRemainder26;\n      \
    \  long quotientRemainder27;\n        long quotientRemainder28;\n        long\
    \ quotientRemainder29;\n        long quotientRemainder30;\n        long quotientRemainder31;\n\
    \        long quotientRemainder32;\n        long quotientRemainder33;\n      \
    \  long quotientRemainder34;\n        long quotientRemainder35;\n        long\
    \ quotientRemainder36;\n        long quotientRemainder37;\n        long quotientRemainder38;\n\
    \        long quotientRemainder39;\n        long quotientRemainder40;\n      \
    \  long quotientRemainder41;\n        long quotientRemainder42;\n        long\
    \ quotientRemainder43;\n        long quotientRemainder44;\n        long quotientRemainder45;\n\
    \        long quotientRemainder46;\n        long quotientRemainder47;\n      \
    \  long quotientRemainder48;\n        long quotientRemainder49;\n        long\
    \ quotientRemainder50;\n        long quotientRemainder51;\n        long quotientRemainder52;\n\
    \        long quotientRemainder53;\n        long quotientRemainder54;\n      \
    \  long quotientRemainder55;\n        long quotientRemainder5\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpcrjkap1l.java:74: error: ';' expected\n        long quotientRemainder5\n\
    \                               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = digit / 10;\n\
    \            even = even * 10 + digit;\n        }\n        digit = num;\n    \
    \    while (digit > 0) {\n            digit = digit / 10;\n            odd = odd\
    \ * 10 + digit;\n        }\n        return Pair.of(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp1riilb0c.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num = num / 10;\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp_d6012c3.java:24: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        long remainder = 0;\n\
    \        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n  \
    \      long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n   \
    \     long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n    \
    \    long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n  \
    \      long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp2z5l1jss.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp6demzkc3.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long temp = num;\n        while (temp != 0) {\n            long\
    \ digit = temp % 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            }\n            else {\n                oddCount++;\n            }\n\
    \            temp /= 10;\n        }\n        return Pair.of(evenCount, oddCount);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpbr8ao5s5.java:27: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long sum;\n        long temp2;\n        long temp3;\n        long temp4;\n\
    \        long temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n\
    \        long temp9;\n        long temp10;\n        long temp11;\n        long\
    \ temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n\
    \        long temp16;\n        long temp17;\n        long temp18;\n        long\
    \ temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n\
    \        long temp23;\n        long temp24;\n        long temp25;\n        long\
    \ temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n\
    \        long temp30;\n        long temp31;\n        long temp32;\n        long\
    \ temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n\
    \        long temp37;\n        long temp38;\n        long temp39;\n        long\
    \ temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n\
    \        long temp44;\n        long temp45;\n        long temp46;\n        long\
    \ temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n\
    \        long temp51;\n        long temp52;\n        long temp53;\n        long\
    \ temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n\
    \        long temp58;\n        long temp59;\n        long temp60;\n        long\
    \ temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n\
    \        long temp65;\n        long temp66;\n        long temp67;\n        long\
    \ temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n\
    \        long temp72;\n        long temp73;\n        long temp74;\n        long\
    \ temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n\
    \        long temp79;\n        long temp80;\n        long temp81;\n        long\
    \ temp82;\n        long temp83;\n        long temp84;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpnnrkkndt.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long count = 0;\n        long digit = 0;\n        long remainder = 0;\n\
    \        long temp = 0;\n        while (num !=  0) {\n            digit = num\
    \ % 10;\n            num = num / 10;\n            if (digit % 2 == 0) {\n    \
    \            even++;\n            }\n            else {\n                odd++;\n\
    \            }\n            count++;\n        }\n        Pair<Long, Long> pair\
    \ = new Pair<>(even, odd);\n        return pair;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long tempDigit;\n        long tempRemainder;\n\
    \        long tempCountDigit;\n        long tempCountRemainder;\n        long\
    \ tempCountEven;\n        long tempCountOdd;\n        long tempCountDigitEven;\n\
    \        long tempCountDigitOdd;\n        long tempCountRemainderEven;\n     \
    \   long tempCountRemainderOdd;\n        long tempCountEvenDigit;\n        long\
    \ tempCountEvenRemainder;\n        long tempCountOddDigit;\n        long tempCountOddRemainder;\n\
    \        long tempCountEvenDigitRemainder;\n        long tempCountEvenRemainderDigit;\n\
    \        long tempCountOddDigitRemainder;\n        long tempCountOddRemainderDigit;\n\
    \        long tempCountEvenDigitRemainderDigit;\n        long tempCountEvenRemainderRemainder;\n\
    \        long tempCountOddDigitRemainderRemainder;\n        long tempCountOddRemainderRemainderDigit;\n\
    \        long tempCountEvenDigitRemainderRemainderDigit;\n        long tempCountEvenRemainderRemainderRemainder;\n\
    \        long tempCountOddDigitRemainderRemainderRemainder;\n        long tempCountOddRemainderRemainderDigit;\n\
    \        long tempCountEvenDigitRemainderRemainderDigit;\n        long tempCountEvenRemainderRemainderRemainder;\n\
    \        long tempCountOddDigitRemainderRemainderRemainder;\n        long tempCountOddRemainderRemainderDigit;\n\
    \        long tempCountEvenDigitRemainderRemainderRemainder;\n        long tempCountEvenRemainderRemainderRemainder;\n\
    \        long tempCountOddDigitRemainderRemainderRemainder;\n        long tempCountOddRemainderRemainderDigit;\n\
    \        long tempCountEvenDigitRemainderRemainderRemainder;\n        long tempCountEvenRemainderRemainderRemainder;\n\
    \        long tempCountOddDigitRemainderRemainderRemainder;\n        long tempCountOddRemainderRemainderDigit;\n\
    \        long tempCountEvenDigitRemainderRemainderRemainder;\n        long tempCountEvenRemainderRemainderRemainder;\n\
    \        long tempCountOddDigitRemainderRemainder\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpii37gdli.java:63: error: ';' expected\n        long tempCountOddDigitRemainderRemainder\n\
    \                                                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long evenCount = 0;\n        long\
    \ oddCount = 0;\n        long digitCountEven = 0;\n        long digitCountOdd\
    \ = 0;\n        long remainderCountEven = 0;\n        long remainderCountOdd =\
    \ 0;\n        long tempCountEven = 0;\n        long tempCountOdd = 0;\n      \
    \  long evenCountEven = 0;\n        long evenCountOdd = 0;\n        long oddCountEven\
    \ = 0;\n        long oddCountOdd = 0;\n        long digitCountEvenOdd = 0;\n \
    \       long digitCountOddEven = 0;\n        long remainderCountEvenOdd = 0;\n\
    \        long remainderCountOddEven = 0;\n        long tempCountEvenOdd = 0;\n\
    \        long tempCountOddEven = 0;\n        long evenCountEvenOdd = 0;\n    \
    \    long evenCountOddEven = 0;\n        long oddCountEvenOdd = 0;\n        long\
    \ oddCountOddEven = 0;\n        long digitCountEvenOddEven = 0;\n        long\
    \ digitCountOddEvenOdd = 0;\n        long remainderCountEvenOddEven = 0;\n   \
    \     long remainderCountOddEvenOdd = 0;\n        long tempCountEvenOddEven =\
    \ 0;\n        long tempCountOddEvenOdd = 0;\n        long evenCountEvenOddEven\
    \ = 0;\n        long evenCountOddEvenOdd = 0;\n        long oddCountEvenOddEven\
    \ = 0;\n        long oddCountOddEvenOdd = 0;\n        long digitCountEvenOddEvenOdd\
    \ = 0;\n        long digitCountOddEvenOddOdd = 0;\n        long remainderCountEvenOddEvenOdd\
    \ = 0;\n        long remainderCountOddEvenOddOdd = 0;\n        long tempCountEvenOddEvenOdd\
    \ = 0;\n        long tempCountOddEvenOddOdd = 0;\n        long evenCountEvenOddEvenOdd\
    \ = 0;\n        long evenCountOddEvenOddOdd = 0;\n        long oddCountEvenOddEvenOdd\
    \ = 0;\n        long oddCountOddEvenOddOdd = 0;\n        long digitCountEvenOddEvenOddOdd\
    \ = 0;\n        long digitCountOddEvenOddOddOdd = 0;\n        long remainderCountEvenOddEvenOddOdd\
    \ = 0;\n        long remainder\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpz_9_j2pk.java:68: error: ';' expected\n        long remainder\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp1fz5x2l8.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long count = 0;\n     \
    \   long digitCount = 0;\n        long remainderCount = 0;\n        long remainderCount2\
    \ = 0;\n        long remainderCount3 = 0;\n        long remainderCount4 = 0;\n\
    \        long remainderCount5 = 0;\n        long remainderCount6 = 0;\n      \
    \  long remainderCount7 = 0;\n        long remainderCount8 = 0;\n        long\
    \ remainderCount9 = 0;\n        long remainderCount10 = 0;\n        long remainderCount11\
    \ = 0;\n        long remainderCount12 = 0;\n        long remainderCount13 = 0;\n\
    \        long remainderCount14 = 0;\n        long remainderCount15 = 0;\n    \
    \    long remainderCount16 = 0;\n        long remainderCount17 = 0;\n        long\
    \ remainderCount18 = 0;\n        long remainderCount19 = 0;\n        long remainderCount20\
    \ = 0;\n        long remainderCount21 = 0;\n        long remainderCount22 = 0;\n\
    \        long remainderCount23 = 0;\n        long remainderCount24 = 0;\n    \
    \    long remainderCount25 = 0;\n        long remainderCount26 = 0;\n        long\
    \ remainderCount27 = 0;\n        long remainderCount28 = 0;\n        long remainderCount29\
    \ = 0;\n        long remainderCount30 = 0;\n        long remainderCount31 = 0;\n\
    \        long remainderCount32 = 0;\n        long remainderCount33 = 0;\n    \
    \    long remainderCount34 = 0;\n        long remainderCount35 = 0;\n        long\
    \ remainderCount36 = 0;\n        long remainderCount37 = 0;\n        long remainderCount38\
    \ = 0;\n        long remainderCount39 = 0;\n        long remainderCount40 = 0;\n\
    \        long remainderCount41 = 0;\n        long remainderCount42 = 0;\n    \
    \    long remainderCount43 = 0;\n        long remainderCount44 = 0;\n        long\
    \ remainderCount45 = 0;\n        long remainderCount46 = 0;\n        long remainderCount47\
    \ = 0;\n        long remainderCount48 = 0;\n        long remainderCount49 = 0;\n\
    \        long remainderCount50 = 0;\n        long remainderCount51 = 0;\n    \
    \    long remainderCount52 = 0;\n        long remainderCount53 = 0;\n        long\
    \ remainderCount54 = 0;\n        long remainderCount55 = 0;\n        long remainderCount56\
    \ = 0;\n        long remainderCount57 = 0;\n        long remainderCount58 = 0;\n\
    \        long remainderCount59 = 0;\n        long remainderCount60 = 0;\n    \
    \    long remainderCount61\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpdozvlfwl.java:80: error: ';' expected\n        long remainderCount61\n\
    \                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            }\n            else {\n               \
    \ oddCount++;\n            }\n            remainder = remainder / 10;\n      \
    \  }\n        return new Pair<>(evenCount, oddCount);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num = num / 10;\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpobt16ca1.java:24: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long temp = num;\n        while (temp != 0) {\n            long\
    \ digit = temp % 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n          \
    \  temp /= 10;\n        }\n        return new Pair<>(evenCount, oddCount);\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        long temp = 0;\n        while (remainder\
    \ > 0) {\n            temp = (remainder % 10);\n            evenCount += temp\
    \ == 0 ? 0 : 1;\n            oddCount += temp != 0 ? 1 : 0;\n            remainder\
    \ = remainder / 10;\n        }\n        return Pair.of(evenCount, oddCount);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpi3q2fr2h.java:24: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        long remainder = 0;\n\
    \        long temp = 0;\n        while (num > 0) {\n            digit = num %\
    \ 10;\n            temp = num / 10;\n            num = temp;\n            if (digit\
    \ % 2 == 0) {\n                even++;\n            }\n            if (digit %\
    \ 2 != 0) {\n                odd++;\n            }\n            count++;\n   \
    \     }\n        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpxmeuwxna.java:32: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpy7sn7f21.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp6x2rt69x.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long tempNum = num;\n        while (tempNum != 0) {\n        \
    \    int digit = tempNum % 10;\n            if (digit % 2 == 0) {\n          \
    \      evenCount++;\n            } else {\n                oddCount++;\n     \
    \       }\n            tempNum /= 10;\n        }\n        return Pair.of(evenCount,\
    \ oddCount);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp7vaeylga.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = tempNum % 10;\n                  \
    \              ^\n/tmp/tmp7vaeylga.java:26: error: cannot find symbol\n      \
    \  return Pair.of(evenCount, oddCount);\n                   ^\n  symbol:   method\
    \ of(long,long)\n  location: class Pair\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = digit / 10;\n\
    \            even = even * 10 + digit;\n            digit = num % 10;\n      \
    \      odd = odd * 10 + digit;\n        }\n        return new Pair<>(even, odd);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = num;\n        while (digit > 0) {\n            digit\
    \ = digit / 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n        }\n\
    \        return Pair.of(evenCount, oddCount);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpggrnuogf.java:25: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long sum = 0;\n\
    \        long temp = 0;\n        long count = 0;\n        long temp2 = 0;\n  \
    \      long count2 = 0;\n        long temp3 = 0;\n        long count3 = 0;\n \
    \       long temp4 = 0;\n        long count4 = 0;\n        long temp5 = 0;\n \
    \       long count5 = 0;\n        long temp6 = 0;\n        long count6 = 0;\n\
    \        long temp7 = 0;\n        long count7 = 0;\n        long temp8 = 0;\n\
    \        long count8 = 0;\n        long temp9 = 0;\n        long count9 = 0;\n\
    \        long temp10 = 0;\n        long count10 = 0;\n        long temp11 = 0;\n\
    \        long count11 = 0;\n        long temp12 = 0;\n        long count12 = 0;\n\
    \        long temp13 = 0;\n        long count13 = 0;\n        long temp14 = 0;\n\
    \        long count14 = 0;\n        long temp15 = 0;\n        long count15 = 0;\n\
    \        long temp16 = 0;\n        long count16 = 0;\n        long temp17 = 0;\n\
    \        long count17 = 0;\n        long temp18 = 0;\n        long count18 = 0;\n\
    \        long temp19 = 0;\n        long count19 = 0;\n        long temp20 = 0;\n\
    \        long count20 = 0;\n        long temp21 = 0;\n        long count21 = 0;\n\
    \        long temp22 = 0;\n        long count22 = 0;\n        long temp23 = 0;\n\
    \        long count23 = 0;\n        long temp24 = 0;\n        long count24 = 0;\n\
    \        long temp25 = 0;\n        long count25 = 0;\n        long temp26 = 0;\n\
    \        long count26 = 0;\n        long temp27 = 0;\n        long count27 = 0;\n\
    \        long temp28 = 0;\n        long count28 = 0;\n        long temp29 = 0;\n\
    \        long count29 = 0;\n        long temp30 = 0;\n        long count30 = 0;\n\
    \        long temp31 = 0;\n        long count31 = 0;\n        long temp32 = 0;\n\
    \        long count32 = 0;\n        long temp33 = 0;\n        long count33 = 0;\n\
    \        long temp34 = 0;\n        long count34 = 0;\n        long temp35 = 0;\n\
    \        long count35 = 0;\n        long temp36 = 0;\n        long count36 = 0;\n\
    \        long temp37 = 0;\n        long count37 = 0;\n        long temp38 = 0;\n\
    \        long count38 = 0;\n        long temp39 = 0;\n        long count39 = 0;\n\
    \        long temp40 = 0;\n        long count40 = 0;\n        long temp41 = 0;\n\
    \        long count41 = 0;\n        long temp42 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpjtzk_vvb.java:102: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = digit / 10;\n\
    \            even++;\n        }\n        digit = num;\n        while (digit >\
    \ 0) {\n            digit = digit / 10;\n            odd++;\n        }\n     \
    \   return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp6numd6kk.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit;\n        long remainder;\n        long temp;\n        long count = 0;\n\
    \        long digitCount = 0;\n        long digitSum = 0;\n        long tempSum\
    \ = 0;\n        long tempCount = 0;\n        long tempDigitCount = 0;\n      \
    \  long tempDigitSum = 0;\n        long tempTempSum = 0;\n        long tempTempCount\
    \ = 0;\n        long tempTempDigitCount = 0;\n        long tempTempDigitSum =\
    \ 0;\n        long tempTempTempSum = 0;\n        long tempTempTempCount = 0;\n\
    \        long tempTempTempDigitCount = 0;\n        long tempTempTempDigitSum =\
    \ 0;\n        long tempTempTempTempSum = 0;\n        long tempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempDigitCount = 0;\n        long tempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n        long tempTempTempTempTempCount\
    \ = 0;\n        long tempTempTempTempTempDigitCount = 0;\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n        long tempTempTempTempTempSum = 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm00782xg.java:41: error: variable tempTempTempTempTempSum is already\
    \ defined in method evenOddCount(long)\n        long tempTempTempTempTempSum =\
    \ 0;\n             ^\n/tmp/tmpm00782xg.java:42: error: variable tempTempTempTempTempCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:43: error: variable tempTempTempTempTempDigitCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:44: error: variable tempTempTempTempTempDigitSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:45: error: variable tempTempTempTempTempSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:46: error: variable tempTempTempTempTempCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:47: error: variable tempTempTempTempTempDigitCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:48: error: variable tempTempTempTempTempDigitSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:49: error: variable tempTempTempTempTempSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:50: error: variable tempTempTempTempTempCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:51: error: variable tempTempTempTempTempDigitCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:52: error: variable tempTempTempTempTempDigitSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:53: error: variable tempTempTempTempTempSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:54: error: variable tempTempTempTempTempCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:55: error: variable tempTempTempTempTempDigitCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:56: error: variable tempTempTempTempTempDigitSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:57: error: variable tempTempTempTempTempSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:58: error: variable tempTempTempTempTempCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:59: error: variable tempTempTempTempTempDigitCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:60: error: variable tempTempTempTempTempDigitSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:61: error: variable tempTempTempTempTempSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:62: error: variable tempTempTempTempTempCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:63: error: variable tempTempTempTempTempDigitCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:64: error: variable tempTempTempTempTempDigitSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:65: error: variable tempTempTempTempTempSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:66: error: variable tempTempTempTempTempCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:67: error: variable tempTempTempTempTempDigitCount\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitCount\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:68: error: variable tempTempTempTempTempDigitSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempDigitSum\
    \ = 0;\n             ^\n/tmp/tmpm00782xg.java:69: error: variable tempTempTempTempTempSum\
    \ is already defined in method evenOddCount(long)\n        long tempTempTempTempTempSum\
    \ = 0;\n             ^\n29 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long sum;\n        long temp2;\n        long temp3;\n        long temp4;\n\
    \        long temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n\
    \        long temp9;\n        long temp10;\n        long temp11;\n        long\
    \ temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n\
    \        long temp16;\n        long temp17;\n        long temp18;\n        long\
    \ temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n\
    \        long temp23;\n        long temp24;\n        long temp25;\n        long\
    \ temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n\
    \        long temp30;\n        long temp31;\n        long temp32;\n        long\
    \ temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n\
    \        long temp37;\n        long temp38;\n        long temp39;\n        long\
    \ temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n\
    \        long temp44;\n        long temp45;\n        long temp46;\n        long\
    \ temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n\
    \        long temp51;\n        long temp52;\n        long temp53;\n        long\
    \ temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n\
    \        long temp58;\n        long temp59;\n        long temp60;\n        long\
    \ temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n\
    \        long temp65;\n        long temp66;\n        long temp67;\n        long\
    \ temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n\
    \        long temp72;\n        long temp73;\n        long temp74;\n        long\
    \ temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n\
    \        long temp79;\n        long temp80;\n        long temp81;\n        long\
    \ temp82;\n        long temp83;\n        long temp84;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpvryu_rxy.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            evenCount += digit == 0 ? 0\
    \ : 1;\n            oddCount += digit != 0 ? 1 : 0;\n            remainder = remainder\
    \ / 10;\n        }\n        return Pair.of(evenCount, oddCount);\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmprcwwprp2.java:23: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long evenCount = 0;\n        long\
    \ oddCount = 0;\n        long digitCount2 = 0;\n        long remainderCount2 =\
    \ 0;\n        long tempCount2 = 0;\n        long evenCount2 = 0;\n        long\
    \ oddCount2 = 0;\n        long digitCount3 = 0;\n        long remainderCount3\
    \ = 0;\n        long tempCount3 = 0;\n        long evenCount3 = 0;\n        long\
    \ oddCount3 = 0;\n        long digitCount4 = 0;\n        long remainderCount4\
    \ = 0;\n        long tempCount4 = 0;\n        long evenCount4 = 0;\n        long\
    \ oddCount4 = 0;\n        long digitCount5 = 0;\n        long remainderCount5\
    \ = 0;\n        long tempCount5 = 0;\n        long evenCount5 = 0;\n        long\
    \ oddCount5 = 0;\n        long digitCount6 = 0;\n        long remainderCount6\
    \ = 0;\n        long tempCount6 = 0;\n        long evenCount6 = 0;\n        long\
    \ oddCount6 = 0;\n        long digitCount7 = 0;\n        long remainderCount7\
    \ = 0;\n        long tempCount7 = 0;\n        long evenCount7 = 0;\n        long\
    \ oddCount7 = 0;\n        long digitCount8 = 0;\n        long remainderCount8\
    \ = 0;\n        long tempCount8 = 0;\n        long evenCount8 = 0;\n        long\
    \ oddCount8 = 0;\n        long digitCount9 = 0;\n        long remainderCount9\
    \ = 0;\n        long tempCount9 = 0;\n        long evenCount9 = 0;\n        long\
    \ oddCount9 = 0;\n        long digitCount10 = 0;\n        long remainderCount10\
    \ = 0;\n        long tempCount10 = 0;\n        long evenCount10 = 0;\n       \
    \ long oddCount10 = 0;\n        long digitCount11 = 0;\n        long remainderCount11\
    \ = 0;\n        long tempCount11 = 0;\n        long evenCount11 = 0;\n       \
    \ long oddCount11 = 0;\n        long digitCount12 = 0;\n        long remainderCount12\
    \ = 0;\n        long tempCount12 = 0;\n        long evenCount12 = 0;\n       \
    \ long oddCount12 = 0;\n        long digitCount13 = 0;\n        long remainderCount13\
    \ = 0;\n        long tempCount13 = 0;\n        long evenCount13 = 0;\n       \
    \ long oddCount13 = 0;\n        long digitCount14 = 0;\n        long remainderCount14\
    \ = 0;\n        long tempCount14 = 0;\n        long evenCount14 = 0;\n       \
    \ long oddCount14 = 0;\n        long digit\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp5ffhbg09.java:90: error: ';' expected\n        long digit\n   \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long evenCount = 0;\n        long\
    \ oddCount = 0;\n        long digitCountEven = 0;\n        long digitCountOdd\
    \ = 0;\n        long remainderCountEven = 0;\n        long remainderCountOdd =\
    \ 0;\n        long tempCountEven = 0;\n        long tempCountOdd = 0;\n      \
    \  long evenCountEven = 0;\n        long evenCountOdd = 0;\n        long oddCountEven\
    \ = 0;\n        long oddCountOdd = 0;\n        long digitCountEvenOdd = 0;\n \
    \       long digitCountOddEven = 0;\n        long remainderCountEvenOdd = 0;\n\
    \        long remainderCountOddEven = 0;\n        long tempCountEvenOdd = 0;\n\
    \        long tempCountOddEven = 0;\n        long evenCountEvenOdd = 0;\n    \
    \    long evenCountOddEven = 0;\n        long oddCountEvenOdd = 0;\n        long\
    \ oddCountOddEven = 0;\n        long digitCountEvenOddEven = 0;\n        long\
    \ digitCountOddEvenOdd = 0;\n        long remainderCountEvenOddEven = 0;\n   \
    \     long remainderCountOddEvenOdd = 0;\n        long tempCountEvenOddEven =\
    \ 0;\n        long tempCountOddEvenOdd = 0;\n        long evenCountEvenOddEven\
    \ = 0;\n        long evenCountOddEvenOdd = 0;\n        long oddCountEvenOddEven\
    \ = 0;\n        long oddCountOddEvenOdd = 0;\n        long digitCountEvenOddEvenOdd\
    \ = 0;\n        long digitCountOddEvenOddOdd = 0;\n        long remainderCountEvenOddEvenOdd\
    \ = 0;\n        long remainderCountOddEvenOddOdd = 0;\n        long tempCountEvenOddEvenOdd\
    \ = 0;\n        long tempCountOddEvenOddOdd = 0;\n        long evenCountEvenOddEvenOdd\
    \ = 0;\n        long evenCountOddEvenOddOdd = 0;\n        long oddCountEvenOddEvenOdd\
    \ = 0;\n        long oddCountOddEvenOddOdd = 0;\n        long digitCountEvenOddEvenOddOdd\
    \ = 0;\n        long digitCountOddEvenOddOddOdd = 0;\n        long remainderCountEvenOddEvenOddOdd\
    \ = 0;\n        long remainder\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpwj3ofivs.java:68: error: ';' expected\n        long remainder\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 10;\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmprqqsv0ft.java:24: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num = num / 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long count = 0;\n        while (num > 0) {\n\
    \            digit = num % 10;\n            num = num / 10;\n            if (digit\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            count++;\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp0zc9mxsv.java:28: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long quotient =\
    \ 0;\n        long remainder2 = 0;\n        long quotient2 = 0;\n        long\
    \ remainder3 = 0;\n        long quotient3 = 0;\n        long remainder4 = 0;\n\
    \        long quotient4 = 0;\n        long remainder5 = 0;\n        long quotient5\
    \ = 0;\n        long remainder6 = 0;\n        long quotient6 = 0;\n        long\
    \ remainder7 = 0;\n        long quotient7 = 0;\n        long remainder8 = 0;\n\
    \        long quotient8 = 0;\n        long remainder9 = 0;\n        long quotient9\
    \ = 0;\n        long remainder10 = 0;\n        long quotient10 = 0;\n        long\
    \ remainder11 = 0;\n        long quotient11 = 0;\n        long remainder12 = 0;\n\
    \        long quotient12 = 0;\n        long remainder13 = 0;\n        long quotient13\
    \ = 0;\n        long remainder14 = 0;\n        long quotient14 = 0;\n        long\
    \ remainder15 = 0;\n        long quotient15 = 0;\n        long remainder16 = 0;\n\
    \        long quotient16 = 0;\n        long remainder17 = 0;\n        long quotient17\
    \ = 0;\n        long remainder18 = 0;\n        long quotient18 = 0;\n        long\
    \ remainder19 = 0;\n        long quotient19 = 0;\n        long remainder20 = 0;\n\
    \        long quotient20 = 0;\n        long remainder21 = 0;\n        long quotient21\
    \ = 0;\n        long remainder22 = 0;\n        long quotient22 = 0;\n        long\
    \ remainder23 = 0;\n        long quotient23 = 0;\n        long remainder24 = 0;\n\
    \        long quotient24 = 0;\n        long remainder25 = 0;\n        long quotient25\
    \ = 0;\n        long remainder26 = 0;\n        long quotient26 = 0;\n        long\
    \ remainder27 = 0;\n        long quotient27 = 0;\n        long remainder28 = 0;\n\
    \        long quotient28 = 0;\n        long remainder29 = 0;\n        long quotient29\
    \ = 0;\n        long remainder30 = 0;\n        long quotient30 = 0;\n        long\
    \ remainder31 = 0;\n        long quotient31 = 0;\n        long remainder32 = 0;\n\
    \        long quotient32 = 0;\n        long remainder33 = 0;\n        long quotient33\
    \ = 0;\n        long remainder34 = 0;\n        long quotient34 = 0;\n        long\
    \ remainder35 = 0;\n        long quotient35 = 0;\n        long remainder36 = 0;\n\
    \        long quotient36 = 0;\n        long remain\n    }\n    public static void\
    \ main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n\
    \    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
    \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
    \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n\
    \    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm3kctvlv.java:89: error: ';' expected\n        long remain\n  \
    \                 ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long tempNum = num;\n        while (tempNum > 0) {\n         \
    \   int remainder = tempNum % 10;\n            if (remainder == 0) {\n       \
    \         evenCount++;\n            }\n            tempNum /= 10;\n        }\n\
    \        tempNum = num;\n        while (tempNum > 0) {\n            int remainder\
    \ = tempNum % 10;\n            if (remainder != 0) {\n                oddCount++;\n\
    \            }\n            tempNum /= 10;\n        }\n        return new Pair<>(evenCount,\
    \ oddCount);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpgf82_kxi.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int remainder = tempNum % 10;\n              \
    \                      ^\n/tmp/tmpgf82_kxi.java:26: error: incompatible types:\
    \ possible lossy conversion from long to int\n            int remainder = tempNum\
    \ % 10;\n                                    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long sum;\n        long temp2;\n        long temp3;\n        long temp4;\n\
    \        long temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n\
    \        long temp9;\n        long temp10;\n        long temp11;\n        long\
    \ temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n\
    \        long temp16;\n        long temp17;\n        long temp18;\n        long\
    \ temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n\
    \        long temp23;\n        long temp24;\n        long temp25;\n        long\
    \ temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n\
    \        long temp30;\n        long temp31;\n        long temp32;\n        long\
    \ temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n\
    \        long temp37;\n        long temp38;\n        long temp39;\n        long\
    \ temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n\
    \        long temp44;\n        long temp45;\n        long temp46;\n        long\
    \ temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n\
    \        long temp51;\n        long temp52;\n        long temp53;\n        long\
    \ temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n\
    \        long temp58;\n        long temp59;\n        long temp60;\n        long\
    \ temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n\
    \        long temp65;\n        long temp66;\n        long temp67;\n        long\
    \ temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n\
    \        long temp72;\n        long temp73;\n        long temp74;\n        long\
    \ temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n\
    \        long temp79;\n        long temp80;\n        long temp81;\n        long\
    \ temp82;\n        long temp83;\n        long temp84;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpfn8ulm6x.java:104: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83\n    }\n    public static void main(String[] args) {\n  \
    \  assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpf0xc8iz7.java:100: error: ';' expected\n        long temp83\n \
    \                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long count = 0;\n\
    \        long digitCount = 0;\n        long remainderCount = 0;\n        long\
    \ temp = 0;\n        long tempCount = 0;\n        long tempEven = 0;\n       \
    \ long tempOdd = 0;\n        long tempDigit = 0;\n        long tempRemainder =\
    \ 0;\n        long tempCountEven = 0;\n        long tempCountOdd = 0;\n      \
    \  long tempDigitCount = 0;\n        long tempRemainderCount = 0;\n        long\
    \ tempEvenCount = 0;\n        long tempOddCount = 0;\n        long tempDigitCountEven\
    \ = 0;\n        long tempDigitCountOdd = 0;\n        long tempRemainderCountEven\
    \ = 0;\n        long tempRemainderCountOdd = 0;\n        long tempEvenCountEven\
    \ = 0;\n        long tempEvenCountOdd = 0;\n        long tempOddCountEven = 0;\n\
    \        long tempOddCountOdd = 0;\n        long tempDigitCountEvenEven = 0;\n\
    \        long tempDigitCountEvenOdd = 0;\n        long tempDigitCountOddEven =\
    \ 0;\n        long tempDigitCountOddOdd = 0;\n        long tempRemainderCountEvenEven\
    \ = 0;\n        long tempRemainderCountEvenOdd = 0;\n        long tempRemainderCountOddEven\
    \ = 0;\n        long tempRemainderCountOddOdd = 0;\n        long tempEvenCountEvenEven\
    \ = 0;\n        long tempEvenCountEvenOdd = 0;\n        long tempEvenCountOddEven\
    \ = 0;\n        long tempEvenCountOddOdd = 0;\n        long tempOddCountEvenEven\
    \ = 0;\n        long tempOddCountEvenOdd = 0;\n        long tempOddCountOddEven\
    \ = 0;\n        long tempOddCountOddOdd = 0;\n        long tempDigitCountEvenEven\
    \ = 0;\n        long tempDigitCountEvenOdd = 0;\n        long tempDigitCountOddEven\
    \ = 0;\n        long tempDigitCountOddOdd = 0;\n        long tempRemainderCountEvenEven\
    \ = 0;\n        long tempRemainderCountEvenOdd = 0;\n        long tempRemainderCountOddEven\
    \ = 0;\n        long tempRemainderCountOddOdd = 0;\n        long tempEvenCountEvenEven\
    \ = 0;\n        long tempEvenCountEvenOdd = 0;\n        long tempEvenCountOddEven\
    \ = 0;\n        long tempEvenCountOddOdd = 0;\n        long tempOddCountEvenEven\
    \ = 0;\n        long tempOddCountEvenOdd = 0;\n        long tempOddCountO\n  \
    \  }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpnv9nogv6.java:71: error: ';' expected\n        long tempOddCountO\n\
    \                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = 0;\n        long remainder = 0;\n        long temp = 0;\n\
    \        long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long tempEven = 0;\n        long\
    \ tempOdd = 0;\n        long tempDigit = 0;\n        long tempRemainder = 0;\n\
    \        long tempCountEven = 0;\n        long tempCountOdd = 0;\n        long\
    \ tempDigitCount = 0;\n        long tempRemainderCount = 0;\n        long tempCountEvenDigit\
    \ = 0;\n        long tempCountOddDigit = 0;\n        long tempDigitCountRemainder\
    \ = 0;\n        long tempCountEvenRemainder = 0;\n        long tempCountOddRemainder\
    \ = 0;\n        long tempDigitCountRemainderEven = 0;\n        long tempDigitCountRemainderOdd\
    \ = 0;\n        long tempCountEvenDigitRemainder = 0;\n        long tempCountOddDigitRemainder\
    \ = 0;\n        long tempDigitCountRemainderEvenOdd = 0;\n        long tempDigitCountRemainderOddEven\
    \ = 0;\n        long tempCountEvenRemainderDigit = 0;\n        long tempCountOddRemainderDigit\
    \ = 0;\n        long tempDigitCountRemainderEvenOddDigit = 0;\n        long tempDigitCountRemainderOddEvenDigit\
    \ = 0;\n        long tempCountEvenRemainderRemainder = 0;\n        long tempCountOddRemainderRemainder\
    \ = 0;\n        long tempDigitCountRemainderEvenOddRemainder = 0;\n        long\
    \ tempDigitCountRemainderOddEvenRemainder = 0;\n        long tempCountEvenRemainderDigitRemainder\
    \ = 0;\n        long tempCountOddRemainderDigitRemainder = 0;\n        long tempDigitCountRemainderEvenOddRemainderDigit\
    \ = 0;\n        long tempDigitCountRemainderOddEvenRemainderDigit = 0;\n     \
    \   long tempCountEvenRemainderRemainderDigitRemainder = 0;\n        long tempCountOddRemainderRemainderDigitRemainder\
    \ = 0;\n        long tempDigitCountRemainderEvenOddRemainderDigitRemainder = 0;\n\
    \        long tempDigitCountRemainderOddEvenRemainderDigitRemainder = 0;\n   \
    \     long tempCountEvenRemainderRemainderRemainderRemainder = 0;\n        long\
    \ tempCountOddRemainderRemainderRemainderRemainder = 0;\n        long tempDigitCountRemainderEvenOddRemainderRemainder\
    \ = 0;\n        long tempDigitCountRemainderOddEvenRemainderRemainder = 0;\n \
    \       long tempCountEvenRemainderDigitRemainderRemainder = 0;\n        long\
    \ temp\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpslh7hhfw.java:63: error: ';' expected\n        long temp\n    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit;\n        long remainder;\n        long remainder2;\n        long remainder3;\n\
    \        long remainder4;\n        long remainder5;\n        long remainder6;\n\
    \        long remainder7;\n        long remainder8;\n        long remainder9;\n\
    \        long remainder10;\n        long remainder11;\n        long remainder12;\n\
    \        long remainder13;\n        long remainder14;\n        long remainder15;\n\
    \        long remainder16;\n        long remainder17;\n        long remainder18;\n\
    \        long remainder19;\n        long remainder20;\n        long remainder21;\n\
    \        long remainder22;\n        long remainder23;\n        long remainder24;\n\
    \        long remainder25;\n        long remainder26;\n        long remainder27;\n\
    \        long remainder28;\n        long remainder29;\n        long remainder30;\n\
    \        long remainder31;\n        long remainder32;\n        long remainder33;\n\
    \        long remainder34;\n        long remainder35;\n        long remainder36;\n\
    \        long remainder37;\n        long remainder38;\n        long remainder39;\n\
    \        long remainder40;\n        long remainder41;\n        long remainder42;\n\
    \        long remainder43;\n        long remainder44;\n        long remainder45;\n\
    \        long remainder46;\n        long remainder47;\n        long remainder48;\n\
    \        long remainder49;\n        long remainder50;\n        long remainder51;\n\
    \        long remainder52;\n        long remainder53;\n        long remainder54;\n\
    \        long remainder55;\n        long remainder56;\n        long remainder57;\n\
    \        long remainder58;\n        long remainder59;\n        long remainder60;\n\
    \        long remainder61;\n        long remainder62;\n        long remainder63;\n\
    \        long remainder64;\n        long remainder65;\n        long remainder66;\n\
    \        long remainder67;\n        long remainder68;\n        long remainder69;\n\
    \        long remainder70;\n        long remainder71;\n        long remainder72;\n\
    \        long remainder73;\n        long remainder74;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp69665ttl.java:90: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmp69665ttl.java:90: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            digit /= 10;\n            if (remainder % 2 == 0) {\n   \
    \             even++;\n            } else {\n                odd++;\n        \
    \    }\n        }\n        return Pair.of(even, odd);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmphu2iud8t.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long temp = num;\n        while (temp != 0) {\n            long\
    \ digit = temp % 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n          \
    \  temp /= 10;\n        }\n        return new Pair<>(evenCount, oddCount);\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit = num;\n        while (digit > 0) {\n            digit = digit\
    \ / 10;\n            even++;\n        }\n        while (digit > 0) {\n       \
    \     digit = digit / 10;\n            odd++;\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmph6uloaen.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long remainder2;\n    \
    \    long remainder3;\n        long remainder4;\n        long remainder5;\n  \
    \      long remainder6;\n        long remainder7;\n        long remainder8;\n\
    \        long remainder9;\n        long remainder10;\n        long remainder11;\n\
    \        long remainder12;\n        long remainder13;\n        long remainder14;\n\
    \        long remainder15;\n        long remainder16;\n        long remainder17;\n\
    \        long remainder18;\n        long remainder19;\n        long remainder20;\n\
    \        long remainder21;\n        long remainder22;\n        long remainder23;\n\
    \        long remainder24;\n        long remainder25;\n        long remainder26;\n\
    \        long remainder27;\n        long remainder28;\n        long remainder29;\n\
    \        long remainder30;\n        long remainder31;\n        long remainder32;\n\
    \        long remainder33;\n        long remainder34;\n        long remainder35;\n\
    \        long remainder36;\n        long remainder37;\n        long remainder38;\n\
    \        long remainder39;\n        long remainder40;\n        long remainder41;\n\
    \        long remainder42;\n        long remainder43;\n        long remainder44;\n\
    \        long remainder45;\n        long remainder46;\n        long remainder47;\n\
    \        long remainder48;\n        long remainder49;\n        long remainder50;\n\
    \        long remainder51;\n        long remainder52;\n        long remainder53;\n\
    \        long remainder54;\n        long remainder55;\n        long remainder56;\n\
    \        long remainder57;\n        long remainder58;\n        long remainder59;\n\
    \        long remainder60;\n        long remainder61;\n        long remainder62;\n\
    \        long remainder63;\n        long remainder64;\n        long remainder65;\n\
    \        long remainder66;\n        long remainder67;\n        long remainder68;\n\
    \        long remainder69;\n        long remainder70;\n        long remainder71;\n\
    \        long remainder72;\n        long remainder73;\n        long remainder74;\n\
    \    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpiv4nxs0d.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = 0;\n        long remainder = 0;\n        long temp\
    \ = 0;\n        long count = 0;\n        long sum = 0;\n        long temp2 = 0;\n\
    \        long sum2 = 0;\n        long temp3 = 0;\n        long sum3 = 0;\n   \
    \     long temp4 = 0;\n        long sum4 = 0;\n        long temp5 = 0;\n     \
    \   long sum5 = 0;\n        long temp6 = 0;\n        long sum6 = 0;\n        long\
    \ temp7 = 0;\n        long sum7 = 0;\n        long temp8 = 0;\n        long sum8\
    \ = 0;\n        long temp9 = 0;\n        long sum9 = 0;\n        long temp10 =\
    \ 0;\n        long sum10 = 0;\n        long temp11 = 0;\n        long sum11 =\
    \ 0;\n        long temp12 = 0;\n        long sum12 = 0;\n        long temp13 =\
    \ 0;\n        long sum13 = 0;\n        long temp14 = 0;\n        long sum14 =\
    \ 0;\n        long temp15 = 0;\n        long sum15 = 0;\n        long temp16 =\
    \ 0;\n        long sum16 = 0;\n        long temp17 = 0;\n        long sum17 =\
    \ 0;\n        long temp18 = 0;\n        long sum18 = 0;\n        long temp19 =\
    \ 0;\n        long sum19 = 0;\n        long temp20 = 0;\n        long sum20 =\
    \ 0;\n        long temp21 = 0;\n        long sum21 = 0;\n        long temp22 =\
    \ 0;\n        long sum22 = 0;\n        long temp23 = 0;\n        long sum23 =\
    \ 0;\n        long temp24 = 0;\n        long sum24 = 0;\n        long temp25 =\
    \ 0;\n        long sum25 = 0;\n        long temp26 = 0;\n        long sum26 =\
    \ 0;\n        long temp27 = 0;\n        long sum27 = 0;\n        long temp28 =\
    \ 0;\n        long sum28 = 0;\n        long temp29 = 0;\n        long sum29 =\
    \ 0;\n        long temp30 = 0;\n        long sum30 = 0;\n        long temp31 =\
    \ 0;\n        long sum31 = 0;\n        long temp32 = 0;\n        long sum32 =\
    \ 0;\n        long temp33 = 0;\n        long sum33 = 0;\n        long temp34 =\
    \ 0;\n        long sum34 = 0;\n        long temp35 = 0;\n        long sum35 =\
    \ 0;\n        long temp36 = 0;\n        long sum36 = 0;\n        long temp37 =\
    \ 0;\n        long sum37 = 0;\n        long temp38 = 0;\n        long sum38 =\
    \ 0;\n        long temp39 = 0;\n        long sum39 = 0;\n        long temp40 =\
    \ 0;\n        long sum40 = 0;\n        long temp41 = 0;\n        long sum41 =\
    \ 0;\n        long temp\n    }\n    public static void main(String[] args) {\n\
    \    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp378oefto.java:101: error: ';' expected\n        long temp\n   \
    \              ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long remainder = num;\n        while (remainder > 0) {\n            long\
    \ digit = remainder % 10;\n            if (digit % 2 == 0) {\n               \
    \ even++;\n            } else {\n                odd++;\n            }\n     \
    \       remainder = remainder / 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = 0;\n        long remainder = 0;\n        long temp\
    \ = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 =\
    \ 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n\
    \        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n\
    \        long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp4ic1w38_.java:100: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp4ic1w38_.java:100: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ new Pair<>(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return Pair.of(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpkbegc0pl.java:25: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long count = 0;\n     \
    \   long digitCount = 0;\n        long remainderCount = 0;\n        long remainderCount2\
    \ = 0;\n        long remainderCount3 = 0;\n        long remainderCount4 = 0;\n\
    \        long remainderCount5 = 0;\n        long remainderCount6 = 0;\n      \
    \  long remainderCount7 = 0;\n        long remainderCount8 = 0;\n        long\
    \ remainderCount9 = 0;\n        long remainderCount10 = 0;\n        long remainderCount11\
    \ = 0;\n        long remainderCount12 = 0;\n        long remainderCount13 = 0;\n\
    \        long remainderCount14 = 0;\n        long remainderCount15 = 0;\n    \
    \    long remainderCount16 = 0;\n        long remainderCount17 = 0;\n        long\
    \ remainderCount18 = 0;\n        long remainderCount19 = 0;\n        long remainderCount20\
    \ = 0;\n        long remainderCount21 = 0;\n        long remainderCount22 = 0;\n\
    \        long remainderCount23 = 0;\n        long remainderCount24 = 0;\n    \
    \    long remainderCount25 = 0;\n        long remainderCount26 = 0;\n        long\
    \ remainderCount27 = 0;\n        long remainderCount28 = 0;\n        long remainderCount29\
    \ = 0;\n        long remainderCount30 = 0;\n        long remainderCount31 = 0;\n\
    \        long remainderCount32 = 0;\n        long remainderCount33 = 0;\n    \
    \    long remainderCount34 = 0;\n        long remainderCount35 = 0;\n        long\
    \ remainderCount36 = 0;\n        long remainderCount37 = 0;\n        long remainderCount38\
    \ = 0;\n        long remainderCount39 = 0;\n        long remainderCount40 = 0;\n\
    \        long remainderCount41 = 0;\n        long remainderCount42 = 0;\n    \
    \    long remainderCount43 = 0;\n        long remainderCount44 = 0;\n        long\
    \ remainderCount45 = 0;\n        long remainderCount46 = 0;\n        long remainderCount47\
    \ = 0;\n        long remainderCount48 = 0;\n        long remainderCount49 = 0;\n\
    \        long remainderCount50 = 0;\n        long remainderCount51 = 0;\n    \
    \    long remainderCount52 = 0;\n        long remainderCount53 = 0;\n        long\
    \ remainderCount54 = 0;\n        long remainderCount55 = 0;\n        long remainderCount56\
    \ = 0;\n        long remainderCount57 = 0;\n        long remainderCount58 = 0;\n\
    \        long remainderCount59 = 0;\n        long remainderCount60 = 0;\n    \
    \    long remainderCount61\n    }\n    public static void main(String[] args)\
    \ {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp67r_u7_3.java:80: error: ';' expected\n        long remainderCount61\n\
    \                             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long temp = num;\n        while (temp > 0) {\n            long digit\
    \ = temp % 10;\n            if (digit % 2 == 0) {\n                even++;\n \
    \           } else {\n                odd++;\n            }\n            temp\
    \ /= 10;\n        }\n        return new Pair<>(even, odd);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpwosh1x69.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ new Pair<>(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            }\n            else {\n               \
    \ oddCount++;\n            }\n            remainder = remainder / 10;\n      \
    \  }\n        return new Pair<>(evenCount, oddCount);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpt2c0z3y9.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit = 0;\n        long remainder = 0;\n        long temp\
    \ = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 =\
    \ 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n\
    \        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n\
    \        long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpqgt3l5ng.java:100: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpqgt3l5ng.java:100: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpz8zu946j.java:103: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = digit / 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ Pair.of(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpi0tcl7ep.java:26: error: cannot find symbol\n        return Pair.of(evenCount,\
    \ oddCount);\n                   ^\n  symbol:   method of(long,long)\n  location:\
    \ class Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = num;\n        while (remainder > 0) {\n     \
    \       long digit = remainder % 10;\n            if (digit % 2 == 0) {\n    \
    \            evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            remainder = remainder / 10;\n        }\n        return\
    \ new Pair<>(evenCount, oddCount);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long digit;\n        long remainder;\n        long temp;\n   \
    \     long count = 0;\n        long digitCount = 0;\n        long remainderCount\
    \ = 0;\n        long tempCount = 0;\n        long remainderCount2 = 0;\n     \
    \   long tempCount2 = 0;\n        long remainderCount3 = 0;\n        long tempCount3\
    \ = 0;\n        long remainderCount4 = 0;\n        long tempCount4 = 0;\n    \
    \    long remainderCount5 = 0;\n        long tempCount5 = 0;\n        long remainderCount6\
    \ = 0;\n        long tempCount6 = 0;\n        long remainderCount7 = 0;\n    \
    \    long tempCount7 = 0;\n        long remainderCount8 = 0;\n        long tempCount8\
    \ = 0;\n        long remainderCount9 = 0;\n        long tempCount9 = 0;\n    \
    \    long remainderCount10 = 0;\n        long tempCount10 = 0;\n        long remainderCount11\
    \ = 0;\n        long tempCount11 = 0;\n        long remainderCount12 = 0;\n  \
    \      long tempCount12 = 0;\n        long remainderCount13 = 0;\n        long\
    \ tempCount13 = 0;\n        long remainderCount14 = 0;\n        long tempCount14\
    \ = 0;\n        long remainderCount15 = 0;\n        long tempCount15 = 0;\n  \
    \      long remainderCount16 = 0;\n        long tempCount16 = 0;\n        long\
    \ remainderCount17 = 0;\n        long tempCount17 = 0;\n        long remainderCount18\
    \ = 0;\n        long tempCount18 = 0;\n        long remainderCount19 = 0;\n  \
    \      long tempCount19 = 0;\n        long remainderCount20 = 0;\n        long\
    \ tempCount20 = 0;\n        long remainderCount21 = 0;\n        long tempCount21\
    \ = 0;\n        long remainderCount22 = 0;\n        long tempCount22 = 0;\n  \
    \      long remainderCount23 = 0;\n        long tempCount23 = 0;\n        long\
    \ remainderCount24 = 0;\n        long tempCount24 = 0;\n        long remainderCount25\
    \ = 0;\n        long tempCount25 = 0;\n        long remainderCount26 = 0;\n  \
    \      long tempCount26 = 0;\n        long remainderCount27 = 0;\n        long\
    \ tempCount27 = 0;\n        long remainderCount28 = 0;\n        long tempCount28\
    \ = 0;\n        long remainderCount29 = 0;\n        long tempCount29 = 0;\n  \
    \      long remainderCount30 = 0;\n        long tempCount30 = 0;\n        long\
    \ remainderCount31 = 0;\n        long tempCount31 = 0;\n        long remainderCount32\
    \ = 0;\n        long tempCount32 = 0;\n        long remainder\n    }\n    public\
    \ static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp0vzb_qlw.java:85: error: ';' expected\n        long remainder\n\
    \                      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            long remainder = digit\
    \ % 10;\n            if (remainder == 0) {\n                even++;\n        \
    \    }\n            else {\n                odd++;\n            }\n          \
    \  digit = digit / 10;\n        }\n        return new Pair<>(even, odd);\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num /= 10;\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmptyh_a5dw.java:24: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ temp = num;\n        while (temp != 0) {\n            long digit = temp % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            temp /= 10;\n        }\n\
    \        return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0;\n        long odd = 0;\n\
    \        long digit;\n        long remainder;\n        long count = 0;\n     \
    \   while (num !=  0) {\n            digit = num % 10;\n            num = num\
    \ / 10;\n            if (digit % 2 == 0) {\n                even = even * 10 +\
    \ digit;\n                count++;\n            } else {\n                odd\
    \ = odd * 10 + digit;\n                count++;\n            }\n        }\n  \
    \      return new Pair<>(even, odd);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l, 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l,\
    \ 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n  \
    \  assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = digit / 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Pair.of(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp987i91al.java:24: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = digit / 10;\n\
    \            even++;\n        }\n        while (digit > 0) {\n            digit\
    \ = digit / 10;\n            odd++;\n        }\n        return Pair.of(even, odd);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmps9ojx18g.java:24: error: cannot find symbol\n        return Pair.of(even,\
    \ odd);\n                   ^\n  symbol:   method of(long,long)\n  location: class\
    \ Pair\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        long remainder = 0;\n        long quotient = 0;\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp94izyojc.java:101: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        long\
    \ digit = num;\n        while (digit > 0) {\n            digit = digit / 10;\n\
    \            even = even * 10 + digit;\n            digit = num % 10;\n      \
    \      odd = odd * 10 + digit;\n        }\n        return new Pair<>(even, odd);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\n    // Example:\n    // even_odd_count(-12)\
    \ ==> (1, 1)\n    // even_odd_count(123) ==> (1, 2)\n    public static Pair<Long,\
    \ Long> evenOddCount(long num) {\n        long even = 0, odd = 0;\n        while\
    \ (num > 0) {\n            long digit = num % 10;\n            if (digit % 2 ==\
    \ 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            num = num / 10;\n        }\n        return new Pair<>(even,\
    \ odd);\n\n    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
    \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n   \
    \ assert(evenOddCount((3452l)).equals((Pair.with(2l, 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l,\
    \ 3l))));\n    assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n\
    \    assert(evenOddCount((-2l)).equals((Pair.with(1l, 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l,\
    \ 3l))));\n    assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Error: Unable to initialize main class Problem\nCaused by: java.lang.NoClassDefFoundError:\
    \ org/javatuples/Pair\n"
  exit_code: 1
  status: Exception

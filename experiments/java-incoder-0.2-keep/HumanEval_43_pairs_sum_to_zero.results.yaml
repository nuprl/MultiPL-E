name: HumanEval_43_pairs_sum_to_zero
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt7w3wepn.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpae_ub4l0.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long lastSum\
    \ = sum;\n        for (Long i : l) {\n            sum += i;\n            if (sum\
    \ != 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldbgho5b.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            count += i;\n     \
    \       if (sum == count) {\n                return true;\n            }\n   \
    \     }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rqlk321.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(long\
    \ i : l) {\n            if(i == sum) {\n                return true;\n       \
    \     }\n        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0568eyu.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplz6zpd2k.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        return\
    \ l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count() == 2;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpp8s18kzg.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdznlju0s.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsrzfa3o.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphqnm0568.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long count =\
    \ 0;\n        for (Long i : l) {\n            if (sum - i == 0) {\n          \
    \      count++;\n            }\n        }\n        return count == 2;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphd1pwtiu.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : l) {\n            map.put(i,\
    \ map.getOrDefault(i, 0) + 1);\n        }\n        return map.values().stream().distinct().count()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpb1969wq9.java:25: error: no suitable method found for getOrDefault(Long,int)\n\
    \            map.put(i, map.getOrDefault(i, 0) + 1);\n                       \
    \   ^\n    method Map.getOrDefault(Object,Long) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Long)\n    method HashMap.getOrDefault(Object,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.contains(sum);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdsgjfi9.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l1 = new ArrayList<>(l);\n        ArrayList<Long> l2 = new ArrayList<>(l);\n\
    \        Collections.sort(l1);\n        Collections.sort(l2);\n        long sum\
    \ = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n\
    \        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n    \
    \    long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long\
    \ sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13\
    \ = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 =\
    \ 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n\
    \        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n \
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n  \
    \      long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n   \
    \     long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n    \
    \    long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n     \
    \   long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n      \
    \  long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n       \
    \ long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long\
    \ sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47\
    \ = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 =\
    \ 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n\
    \        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n \
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n  \
    \      long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n   \
    \     long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n    \
    \    long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n     \
    \   long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n      \
    \  long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n       \
    \ long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long\
    \ sum78 = 0;\n        long sum79 = 0;\n        long sum80\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpljwtx6cw.java:107: error: ';' expected\n        long sum80\n  \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>();\n        for(Long i : l) {\n            if(i == 0)\
    \ return false;\n            set.add(Math.abs(i));\n        }\n        return\
    \ set.size() == 2;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblwbs66_.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvil6kac6.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count() ==\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp5a4qjhtr.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi41lmjaq.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            count += i;\n     \
    \       if (sum == 0) {\n                return true;\n            }\n       \
    \ }\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgeusnb69.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3nx9v9_m.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ukanjtz.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6yijc9l.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            set.add(i - 1);\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ebzrwbx.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size(); j++)\
    \ {\n                if(l.get(i) + l.get(j) == sum) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2v_l_wqe.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpci4xenqn.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.stream().distinct().count() == l.size() - 1 && sum\
    \ == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8cxwghy.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0)\n\
    \                return false;\n            set.add(Math.abs(i));\n        }\n\
    \        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fu4y0ek.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i\
    \ - l.get(0))) {\n                return true;\n            }\n            set.add(i);\n\
    \        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmllqgl4.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<>();\n        ArrayList<Long> pairs2 = new ArrayList<>();\n\
    \        for(int i = 0; i < l.size(); i++) {\n            pairs.add(l.get(i));\n\
    \            pairs2.add(l.get(i));\n        }\n        for(int i = 0; i < l.size();\
    \ i++) {\n            for(int j = i + 1; j < l.size(); j++) {\n              \
    \  if(pairs.get(i) + pairs.get(j) == 0) {\n                    pairs2.remove(j);\n\
    \                    pairs2.add(i, pairs.get(j));\n                }\n       \
    \     }\n        }\n        return pairs2.size() == 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmk9_y467.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l)\n            if(i>0)\n     \
    \           set.add(Math.abs(i));\n        return set.size() == 2;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qyyg5hw.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long zero = 0;\n        for (long i : l) {\n            zero += i;\n       \
    \ }\n        return sum == zero;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv9ihzzph.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() % 2 == 0 &&\n            l.stream().distinct().count()\
    \ == l.size() / 2 &&\n            l.stream().map(i -> i - sum).distinct().count()\
    \ == 1;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpyjppvkl6.java:29: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n            l.stream().map(i\
    \ -> i - sum).distinct().count() == 1;\n                                    ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = true;\n        for (Long i : l) {\n            result &= (sum\
    \ - i) == 0;\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk0rfmc6m.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xbek_e_.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 0);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp822tp_zr.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size(); j++)\
    \ {\n                if(l.get(i) + l.get(j) == sum) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1af3708.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmc6vdx8d.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpld0o0rh3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.stream().distinct().count() == l.size() - 1 && sum\
    \ == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzv57jdtv.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3elhnx16.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1vhxu45x.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i\
    \ - l.get(0))) {\n                return true;\n            }\n            set.add(i);\n\
    \        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulpfb3ub.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        ArrayList<Long>\
    \ l2 = new ArrayList<Long>(l);\n        Collections.sort(l2);\n        Collections.reverse(l2);\n\
    \        long sum2 = 0;\n        for (long i : l2) {\n            sum2 += i;\n\
    \        }\n        return sum == sum2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4g1blb8e.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = true;\n        for (Long i : l) {\n            result &= (sum\
    \ - i) == 0;\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjh05c7cd.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            count += i;\n     \
    \       if (sum == 0) {\n                return false;\n            }\n      \
    \  }\n        return true;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpownetqzp.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpei0ao7vj.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>();\n        for (Long i : l) {\n            set.add(i\
    \ - 0);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7jl6wrr.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.stream().distinct().count() == l.size() - 1 && sum == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dfywrzv.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp329k3msi.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprexu3cmv.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long lastSum\
    \ = 0;\n        for (Long i : l) {\n            lastSum += i;\n            if\
    \ (lastSum == 0) {\n                return true;\n            }\n        }\n \
    \       return false;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzq4o6cua.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.stream().mapToLong(i -> i).distinct().count()\
    \ == 1 && sum == 0;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpuibr_8t4.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().mapToLong(i -> i).distinct().count()\
    \ == 1 && sum == 0;\n                                                        \
    \                                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplr3jpbga.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.stream().distinct().count() == 2 && sum == 0;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58znan77.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : l) {\n            map.put(i,\
    \ map.getOrDefault(i, 0) + i);\n        }\n        return map.values().stream().distinct().count()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp0x36ymgs.java:25: error: no suitable method found for getOrDefault(Long,int)\n\
    \            map.put(i, map.getOrDefault(i, 0) + i);\n                       \
    \   ^\n    method Map.getOrDefault(Object,Long) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Long)\n    method HashMap.getOrDefault(Object,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() % 2 == 0 &&\n            l.stream().distinct().count()\
    \ == l.size() / 2 &&\n            l.stream().map(i -> i * i).sum() == 0;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpg5ms7twt.java:29: error: cannot find symbol\n            l.stream().map(i\
    \ -> i * i).sum() == 0;\n                                      ^\n  symbol:  \
    \ method sum()\n  location: interface Stream<Long>\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<>();\n        long sum = 0;\n        for (long i : l)\
    \ {\n            sum += i;\n            pairs.add(i);\n        }\n        long\
    \ sumOfPairs = pairs.stream().reduce((a, b) -> a + b);\n        return sumOfPairs\
    \ == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpji_nklwb.java:29: error: incompatible types: Optional<Long> cannot\
    \ be converted to long\n        long sumOfPairs = pairs.stream().reduce((a, b)\
    \ -> a + b);\n                                               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(i - 1);\n        }\n        return set.size() ==\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphtgsb1sz.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (long i : l) {\n            if (set.contains(i\
    \ - l.get(0)))\n                return true;\n            set.add(i - l.get(0));\n\
    \        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx20knab3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.stream().distinct().count() == l.size() - 1 && sum == 0;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rlpplzb.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprf4_z3cz.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81b7qsaj.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() % 2 == 0 &&\n            l.stream().distinct().count()\
    \ == l.size() / 2 &&\n            l.stream().filter(i -> i == sum).count() ==\
    \ l.size() / 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpop5n4g5o.java:29: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n            l.stream().filter(i\
    \ -> i == sum).count() == l.size() / 2;\n                                    \
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw5gmobwm.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.stream().mapToLong(i -> i).distinct().count()\
    \ == 1 && sum == 0;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpqrccsd9a.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().mapToLong(i -> i).distinct().count()\
    \ == 1 && sum == 0;\n                                                        \
    \                                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        long\
    \ count = 0;\n        for(long i : l) {\n            count += i;\n           \
    \ if(sum == 0) {\n                return false;\n            }\n        }\n  \
    \      return true;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzpoatqj4.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfwiqot0u.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvcu0b02.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwwsugx1.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            count += i;\n     \
    \       if (sum == 0) {\n                return false;\n            }\n      \
    \  }\n        return count == 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptcv2rmeh.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashSet<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq45td3dy.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size(); j++)\
    \ {\n                if(Math.abs(l.get(i) - l.get(j)) < sum) {\n             \
    \       return false;\n                }\n            }\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcu2nclp4.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 0);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwu768eb3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fe5w2yn.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2tpjs1t.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf2ostr9a.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 0);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdnquors.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(Math.abs(i));\n\
    \        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphx64b08h.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l1 = new ArrayList<>(l);\n        ArrayList<Long> l2 = new ArrayList<>(l);\n\
    \        l1.removeAll(l2);\n        return l1.size() == 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rn_5_d6.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(Long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size(); j++)\
    \ {\n                if(l.get(i) + l.get(j) == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = sum;\n\
    \        boolean found = false;\n        for (long i : l) {\n            sum2\
    \ -= i;\n            if (sum2 == 0) {\n                found = true;\n       \
    \         break;\n            }\n        }\n        return found;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgk0jy4j.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.size() - 1 && sum == 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuigtr2bb.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long count =\
    \ 0;\n        for (Long i : l) {\n            if (i == 0) {\n                count++;\n\
    \            }\n        }\n        return count == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprn75k5te.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41wxmftu.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count() ==\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmps3pbo7tu.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = false;\n        for (long i : l) {\n            result += i\
    \ == 0;\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq5_xgsy_.java:29: error: bad operand types for binary operator\
    \ '+'\n            result += i == 0;\n                   ^\n  first type:  boolean\n\
    \  second type: boolean\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jnzch88.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for(Long i : l) {\n            map.put(i,\
    \ map.getOrDefault(i, 0) + i);\n        }\n        return map.values().stream().distinct().count()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpha4h5pah.java:25: error: no suitable method found for getOrDefault(Long,int)\n\
    \            map.put(i, map.getOrDefault(i, 0) + i);\n                       \
    \   ^\n    method Map.getOrDefault(Object,Long) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Long)\n    method HashMap.getOrDefault(Object,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long lastSum\
    \ = 0;\n        for (Long i : l) {\n            lastSum += i;\n            if\
    \ (lastSum == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39g8zsjj.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            count += i;\n     \
    \       if (sum == 0) {\n                return false;\n            }\n      \
    \  }\n        return true;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzr0a5uwl.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            if (i == 0) {\n   \
    \             count++;\n            }\n        }\n        return count == 2;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfcjvmrf.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.stream().filter(i -> i == 0).count() ==\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpch74hc3q.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == 0).count()\
    \ == 2;\n                                                                    \
    \             ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.contains(sum);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhkknd7s.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i\
    \ - l.get(0))) {\n                return true;\n            }\n            set.add(i);\n\
    \        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21m7a8io.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoovatco3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        boolean found\
    \ = false;\n        for (Long i : l) {\n            if (sum - i == 0) {\n    \
    \            found = true;\n                break;\n            }\n        }\n\
    \        return found;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_7m8_7g.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3in222kg.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0d3lwto1.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<>();\n        ArrayList<Long> pairs2 = new ArrayList<>();\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \          pairs.add(i);\n        }\n        long sum2 = 0;\n        for (Long\
    \ i : l) {\n            sum2 += i;\n            pairs2.add(i);\n        }\n  \
    \      if (sum == sum2) {\n            return true;\n        }\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuo86upit.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size(); j++)\
    \ {\n                if(l.get(i) + l.get(j) == sum) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2d35h9hq.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpab73xxgb.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == l.size();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0to4ud7c.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && (sum == 0 || sum == -l.get(0));\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhgq52oe.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6av78cmo.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.contains(sum);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gejnch0.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            count += i;\n     \
    \       if (sum == count) {\n                return true;\n            }\n   \
    \     }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_lrp3irh.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = false;\n        if (sum == 0) {\n            result = true;\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmkvl_3ud.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<Long>();\n        ArrayList<Long> pairs2 = new ArrayList<Long>();\n\
    \        for(long i : l) {\n            pairs.add(i);\n            pairs2.add(-l);\n\
    \        }\n        pairs.removeAll(pairs2);\n        return pairs.size() == 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp6znfkypb.java:27: error: bad operand type ArrayList<Long> for unary\
    \ operator '---'\n            pairs2.add(-l);\n                       ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            if (i == 0) {\n   \
    \             count++;\n            }\n        }\n        return count == l.size()\
    \ - 1;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl80i1s4n.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i+1; j < l.size(); j++)\
    \ {\n                if(l.get(i) + l.get(j) == sum) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp244rlif5.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygmgumhg.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xjzv3zh.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xg5eo_z.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            count += i;\n     \
    \       if (sum == 0) {\n                return false;\n            }\n      \
    \  }\n        return true;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10ejp0bi.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwqqmtdc.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (long i : l) {\n            if (set.contains(i\
    \ - l.get(0))) {\n                return true;\n            }\n            set.add(i);\n\
    \        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlkr5qct.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0)\n\
    \                return false;\n            set.add(Math.abs(i));\n        }\n\
    \        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz8fa5pj7.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5psialv9.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.contains(sum);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5oe_7ubg.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashSet<Long>\
    \ hs = new HashSet<Long>();\n        for (Long i : l) {\n            if (hs.contains(i))\
    \ {\n                return false;\n            }\n            hs.add(i);\n  \
    \      }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpowm2f49u.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv1j32nj.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            count += i;\n     \
    \       if (sum == count) {\n                return true;\n            }\n   \
    \     }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqgsxvob.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l)\n            if(i>0)\n     \
    \           set.add(Math.abs(i));\n        return set.size() == 2;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqt1qg2v6.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmph5_9dx3o.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count() ==\
    \ 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpez0gbc2c.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 0);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd2ekkmr2.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (long i : l) {\n            sum2 += i;\n            if (sum2 == 0)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6as0aq5t.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikbub7zu.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(Math.abs(i));\n\
    \        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppn6pgyqr.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoi4obfym.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1a_aaidq.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            if (sum - i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzosbz6zo.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            if (sum - i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpezi5bj9i.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ l);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjtcd_a0z.java:25: error: bad operand types for binary operator\
    \ '-'\n            set.add(i - l);\n                      ^\n  first type:  Long\n\
    \  second type: ArrayList<Long>\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3sb4_j4.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            if (i == 0) {\n   \
    \             count++;\n            }\n        }\n        return count == l.size()\
    \ - 1;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlo37gdg.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpay1ebc__.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2_kytx_.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        long\
    \ count = 0;\n        for(long i : l) {\n            count += i;\n           \
    \ if(sum == count) {\n                return true;\n            }\n        }\n\
    \        return false;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02hbgd4d.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l1 = new ArrayList<>(l);\n        ArrayList<Long> l2 = new ArrayList<>(l);\n\
    \        l1.removeAll(l2);\n        return l1.isEmpty();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3x039y5x.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() % 2 == 0 && sum == 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jwm7aus.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9u3gvp60.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            if (sum - i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2jfeu4k7.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = true;\n        for (Long i : l) {\n            result &= (sum\
    \ - i) == 0;\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwawl35nl.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq283an1q.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcumr8ety.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.size() - 1 && sum == 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiyc2sm6k.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuaalohoj.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 0);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcmyewvdi.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfh3tuiyo.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (long i : l) {\n            sum2 += i;\n        }\n        return\
    \ sum == sum2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54ezvbxw.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyuwzi11.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            set.add(i - l);\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjmilkp8c.java:25: error: bad operand types for binary operator\
    \ '-'\n            set.add(i - l);\n                      ^\n  first type:  Long\n\
    \  second type: ArrayList<Long>\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kbqf3sx.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpztxjg6xi.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() % 2 == 0 &&\n            l.stream().filter(i\
    \ -> i == sum).count() == 2;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpnn35fafg.java:28: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n            l.stream().filter(i\
    \ -> i == sum).count() == 2;\n                                        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l1 = new ArrayList<>(l);\n        ArrayList<Long> l2 = new ArrayList<>(l);\n\
    \        l1.removeAll(l2);\n        long sum = 0;\n        for (long i : l1) {\n\
    \            sum += i;\n        }\n        return sum == 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1fywiif.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size(); j++)\
    \ {\n                if(l.get(i) + l.get(j) == sum) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9e8j0b57.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : l) {\n            map.put(i,\
    \ map.getOrDefault(i, 0) + i);\n        }\n        return map.values().stream().distinct().count()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpjj7surpz.java:25: error: no suitable method found for getOrDefault(Long,int)\n\
    \            map.put(i, map.getOrDefault(i, 0) + i);\n                       \
    \   ^\n    method Map.getOrDefault(Object,Long) is not applicable\n      (argument\
    \ mismatch; int cannot be converted to Long)\n    method HashMap.getOrDefault(Object,Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() % 2 == 0 && sum == 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_daukv_d.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc7m6p0_a.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.stream().distinct().filter(i -> sum - i == 0).count() == 2;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpygavdegs.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> sum - i == 0).count() == 2;\n                                           \
    \      ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmppb_2_zzu.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \                ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 1);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewdtwp4n.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = false;\n        for (Long i : l) {\n            if (sum - i\
    \ == 0) {\n                result = true;\n                break;\n          \
    \  }\n        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpar12db4i.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long zero = 0;\n        for (Long i : l) {\n            if (i == 0) {\n    \
    \            zero = 0;\n            } else {\n                zero += i;\n   \
    \         }\n        }\n        return sum == zero;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nkptsor.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.contains(sum);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5zfajnv.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7a0u0aj1.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<>();\n        pairs.add(l.get(0));\n        pairs.add(l.get(1));\n\
    \        long sum = 0;\n        for(int i = 2; i < l.size(); i++) {\n        \
    \    sum += l.get(i);\n            if(sum == 0) {\n                pairs.add(l.get(i));\n\
    \                pairs.add(l.get(i-1));\n                pairs.add(l.get(i+1));\n\
    \                sum = 0;\n            }\n        }\n        return pairs.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpemya1t2s.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            count += i;\n     \
    \       if (sum == 0) {\n                return false;\n            }\n      \
    \  }\n        return true;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpha_n9aid.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppusc10al.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = false;\n        if (sum == 0) {\n            result = true;\n\
    \        }\n        return result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp85rq7r8c.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.size() - 1 && sum == 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41lng9pr.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            count += i;\n     \
    \       if (sum == 0) {\n                return false;\n            }\n      \
    \  }\n        return true;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0huggqs.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \            if(sum < 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s8wgy48.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l1 = new ArrayList<>();\n        ArrayList<Long> l2 = new ArrayList<>();\n \
    \       ArrayList<Long> l3 = new ArrayList<>();\n        ArrayList<Long> l4 =\
    \ new ArrayList<>();\n        ArrayList<Long> l5 = new ArrayList<>();\n      \
    \  ArrayList<Long> l6 = new ArrayList<>();\n        ArrayList<Long> l7 = new ArrayList<>();\n\
    \        ArrayList<Long> l8 = new ArrayList<>();\n        ArrayList<Long> l9 =\
    \ new ArrayList<>();\n        ArrayList<Long> l10 = new ArrayList<>();\n     \
    \   ArrayList<Long> l11 = new ArrayList<>();\n        ArrayList<Long> l12 = new\
    \ ArrayList<>();\n        ArrayList<Long> l13 = new ArrayList<>();\n        ArrayList<Long>\
    \ l14 = new ArrayList<>();\n        ArrayList<Long> l15 = new ArrayList<>();\n\
    \        ArrayList<Long> l16 = new ArrayList<>();\n        ArrayList<Long> l17\
    \ = new ArrayList<>();\n        ArrayList<Long> l18 = new ArrayList<>();\n   \
    \     ArrayList<Long> l19 = new ArrayList<>();\n        ArrayList<Long> l20 =\
    \ new ArrayList<>();\n        ArrayList<Long> l21 = new ArrayList<>();\n     \
    \   ArrayList<Long> l22 = new ArrayList<>();\n        ArrayList<Long> l23 = new\
    \ ArrayList<>();\n        ArrayList<Long> l24 = new ArrayList<>();\n        ArrayList<Long>\
    \ l25 = new ArrayList<>();\n        ArrayList<Long> l26 = new ArrayList<>();\n\
    \        ArrayList<Long> l27 = new ArrayList<>();\n        ArrayList<Long> l28\
    \ = new ArrayList<>();\n        ArrayList<Long> l29 = new ArrayList<>();\n   \
    \     ArrayList<Long> l30 = new ArrayList<>();\n        ArrayList<Long> l31 =\
    \ new ArrayList<>();\n        ArrayList<Long> l32 = new ArrayList<>();\n     \
    \   ArrayList<Long> l33 = new ArrayList<>();\n        ArrayList<Long> l34 = new\
    \ ArrayList<>();\n        ArrayList<Long> l35 = new ArrayList<>();\n        ArrayList<Long>\
    \ l36 = new ArrayList<>();\n        ArrayList<Long> l37 = new ArrayList<>();\n\
    \        ArrayList<Long> l38 = new ArrayList<>();\n        ArrayList<Long> l39\
    \ = new ArrayList<>();\n        ArrayList<Long> l40 = new ArrayList<>();\n   \
    \     ArrayList<Long> l41 = new ArrayList<>();\n        ArrayList<Long> l42 =\
    \ new ArrayList<>();\n        ArrayList<Long> l43 = new ArrayList<>();\n     \
    \   ArrayList<Long> l44 = new ArrayList<>();\n        ArrayList<Long> l45 = new\
    \ ArrayList<>();\n        ArrayList<Long> l46 = new ArrayList<>();\n        ArrayList<Long>\
    \ l47 = new ArrayList<>();\n        ArrayList<Long> l48 = new ArrayList<>();\n\
    \        ArrayList<Long> l49 = new ArrayList<>();\n        ArrayList<Long> l50\
    \ = new ArrayList<>();\n        ArrayList<Long> l51 = \n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt3n5011d.java:74: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpt3n5011d.java:75: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpt3n5011d.java:75: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpt3n5011d.java:75:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpt3n5011d.java:75: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmpt3n5011d.java:75:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpt3n5011d.java:87: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(long i : l) {\n            sum += i;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            for(int j = i + 1; j < l.size(); j++)\
    \ {\n                if(Math.abs(l.get(i) - l.get(j)) < sum) {\n             \
    \       return false;\n                }\n            }\n        }\n        return\
    \ true;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36ko44j1.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (long i : l) {\n            if (sum == i) {\n \
    \               count++;\n            }\n        }\n        return count == 2;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0y0gcpm.java:40)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        long zero = 0;\n        for (long i : l) {\n            sum +=\
    \ i;\n            if (sum == zero) {\n                return true;\n         \
    \   }\n            zero += i;\n        }\n        return false;\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyhlxi0q.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            if(i == 0) return\
    \ false;\n            set.add(Math.abs(i));\n        }\n        return set.size()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp90kqailr.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ boolean result = true;\n        for (long i : l) {\n            if (i != 0)\
    \ {\n                if (sum != 0) {\n                    result = false;\n  \
    \                  break;\n                }\n                sum -= i;\n    \
    \        }\n        }\n        return result;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1z9an2u.java:44)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && (l.size() == l.stream().filter(i -> i == sum).count()\
    \ == 2);\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmp08624kx6.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && (l.size() == l.stream().filter(i -> i == sum).count()\
    \ == 2);\n                                                                   \
    \                  ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() < l.stream().mapToLong(i -> i).distinct().count()\
    \ == l.size() && sum == 0;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpvsshxq56.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().mapToLong(i -> i).distinct().count()\
    \ == l.size() && sum == 0;\n                                                 \
    \                                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.size() % 2 == 0 && sum == 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj6sjkfnx.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.stream().distinct().count() == 2 && sum == 0;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa08ndhui.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(Long i : l) {\n            sum += i;\n        }\n        long\
    \ count = 0;\n        for(Long i : l) {\n            count += i;\n           \
    \ if(sum == 0) {\n                return false;\n            }\n            sum\
    \ += i;\n        }\n        return count == 0;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplstw9ypb.java:42)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashSet<Long>\
    \ hs = new HashSet<>();\n        for (Long i : l) {\n            if (hs.contains(i\
    \ - l.get(0))) {\n                return true;\n            }\n            hs.add(i);\n\
    \        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpevtzj25q.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i))\
    \ {\n                return false;\n            }\n            set.add(i);\n \
    \       }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hj_7lri.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>();\n        for(Long i : l) {\n            if(i == 0)\
    \ return false;\n            set.add(Math.abs(i));\n        }\n        return\
    \ set.size() == 2;\n\n    }\n    public static void main(String[] args) {\n  \
    \  assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp05y2fiuy.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() == l.stream().filter(i -> i == sum).count() == 2;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmpvk8d4rn2.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() == l.stream().filter(i -> i == sum).count() == 2;\n \
    \                                                                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l)\n            set.add(Math.abs(i));\n\
    \        return set.size() == 2;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4x6nev8.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ return l.size() > 1 && l.stream().distinct().filter(i -> i + sum == 0).count()\
    \ == 2;\n\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "/tmp/tmphd701jl2.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.size() > 1 &&\
    \ l.stream().distinct().filter(i -> i + sum == 0).count() == 2;\n            \
    \                                                         ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(i -\
    \ 0);\n        }\n        return set.size() == 2;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bsk_3b3.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ long count = 0;\n        for (Long i : l) {\n            count += i;\n     \
    \       if (sum == count) {\n                return true;\n            }\n   \
    \     }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_u60uis.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            if (set.contains(i\
    \ - l.get(0))) {\n                return true;\n            }\n            set.add(i);\n\
    \        }\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_kai0300.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return true;\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd18ai3pq.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        for (long i : l) {\n            if (pairs.size() == 0) {\n          \
    \      pairs.add(i);\n            } else {\n                long j = pairs.get(pairs.size()\
    \ - 1);\n                if (i - j == 0) {\n                    zeros.add(j);\n\
    \                } else {\n                    return false;\n               \
    \ }\n            }\n        }\n        if (zeros.size() != 0) {\n            return\
    \ false;\n        }\n        return true;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0ix1z3e.java:47)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ long zero = 0;\n        for (long i : l) {\n            zero += i;\n       \
    \ }\n        return sum == zero;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprg7w4aby.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<>();\n        pairs.add(l.get(0));\n        pairs.add(l.get(0));\n\
    \        for(int i = 1; i < l.size(); i++) {\n            pairs.add(l.get(i));\n\
    \            pairs.add(l.get(i));\n        }\n        for(int i = 0; i < pairs.size();\
    \ i++) {\n            for(int j = i + 1; j < pairs.size(); j++) {\n          \
    \      if(pairs.get(i) + pairs.get(j) == 0) {\n                    return true;\n\
    \                }\n            }\n        }\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhy7n0ww.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        long sum2 = 0;\n\
    \        for (Long i : l) {\n            sum2 += i;\n            if (sum2 == 0)\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdk5hgpbm.java:44)\n"
  exit_code: 1
  status: Exception
